!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:r})},n.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=42)}([function(e,t,n){"use strict";var r=n(134);t.thunk=r;var o=n(132);t.makeDOMDriver=o.makeDOMDriver;var a=n(68);t.makeHTMLDriver=a.makeHTMLDriver;var i=n(46);t.mockDOMSource=i.mockDOMSource;var s=n(17);t.h=s.h;var c=n(45);t.svg=c.default.svg,t.a=c.default.a,t.abbr=c.default.abbr,t.address=c.default.address,t.area=c.default.area,t.article=c.default.article,t.aside=c.default.aside,t.audio=c.default.audio,t.b=c.default.b,t.base=c.default.base,t.bdi=c.default.bdi,t.bdo=c.default.bdo,t.blockquote=c.default.blockquote,t.body=c.default.body,t.br=c.default.br,t.button=c.default.button,t.canvas=c.default.canvas,t.caption=c.default.caption,t.cite=c.default.cite,t.code=c.default.code,t.col=c.default.col,t.colgroup=c.default.colgroup,t.dd=c.default.dd,t.del=c.default.del,t.dfn=c.default.dfn,t.dir=c.default.dir,t.div=c.default.div,t.dl=c.default.dl,t.dt=c.default.dt,t.em=c.default.em,t.embed=c.default.embed,t.fieldset=c.default.fieldset,t.figcaption=c.default.figcaption,t.figure=c.default.figure,t.footer=c.default.footer,t.form=c.default.form,t.h1=c.default.h1,t.h2=c.default.h2,t.h3=c.default.h3,t.h4=c.default.h4,t.h5=c.default.h5,t.h6=c.default.h6,t.head=c.default.head,t.header=c.default.header,t.hgroup=c.default.hgroup,t.hr=c.default.hr,t.html=c.default.html,t.i=c.default.i,t.iframe=c.default.iframe,t.img=c.default.img,t.input=c.default.input,t.ins=c.default.ins,t.kbd=c.default.kbd,t.keygen=c.default.keygen,t.label=c.default.label,t.legend=c.default.legend,t.li=c.default.li,t.link=c.default.link,t.main=c.default.main,t.map=c.default.map,t.mark=c.default.mark,t.menu=c.default.menu,t.meta=c.default.meta,t.nav=c.default.nav,t.noscript=c.default.noscript,t.object=c.default.object,t.ol=c.default.ol,t.optgroup=c.default.optgroup,t.option=c.default.option,t.p=c.default.p,t.param=c.default.param,t.pre=c.default.pre,t.progress=c.default.progress,t.q=c.default.q,t.rp=c.default.rp,t.rt=c.default.rt,t.ruby=c.default.ruby,t.s=c.default.s,t.samp=c.default.samp,t.script=c.default.script,t.section=c.default.section,t.select=c.default.select,t.small=c.default.small,t.source=c.default.source,t.span=c.default.span,t.strong=c.default.strong,t.style=c.default.style,t.sub=c.default.sub,t.sup=c.default.sup,t.table=c.default.table,t.tbody=c.default.tbody,t.td=c.default.td,t.textarea=c.default.textarea,t.tfoot=c.default.tfoot,t.th=c.default.th,t.thead=c.default.thead,t.title=c.default.title,t.tr=c.default.tr,t.u=c.default.u,t.ul=c.default.ul,t.video=c.default.video},function(e,t,n){"use strict";var r=n(7);e.exports=function(e){if(!r(e))throw new TypeError("Cannot use null or undefined");return e}},function(e,t,n){"use strict";e.exports=function(e){if("function"!=typeof e)throw new TypeError(e+" is not a function");return e}},function(e,t,n){"use strict";var r=n(4),o={adapt:function(e,t){if(o.isValidStream(e))return e;var n=null;return r.default.create({start:function(r){n=t(e,r)},stop:function(){"function"==typeof n&&n()}})},makeSubject:function(){var e=r.default.create();return{observer:{next:function(t){e.shamefullySendNext(t)},error:function(t){e.shamefullySendError(t)},complete:function(){e.shamefullySendComplete()}},stream:e}},remember:function(e){return e.remember()},isValidStream:function(e){return"function"==typeof e.addListener&&"function"==typeof e.shamefullySendNext},streamSubscribe:function(e,t){return e.addListener(t),function(){return e.removeListener(t)}}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=o},function(e,t,n){"use strict";var r=this&&this.__extends||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);function r(){this.constructor=e}e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)},o=n(129),a={};function i(){}function s(e){for(var t=e.length,n=Array(t),r=0;r<t;++r)n[r]=e[r];return n}function c(e,t,n){try{return e.f(t)}catch(e){return n._e(e),a}}t.NO=a;var u={_n:i,_e:i,_c:i};function d(e){e._start=function(e){e.next=e._n,e.error=e._e,e.complete=e._c,this.start(e)},e._stop=e.stop}t.NO_IL=u;var l=function(){function e(e,t){this._stream=e,this._listener=t}return e.prototype.unsubscribe=function(){this._stream.removeListener(this._listener)},e}(),p=function(){function e(e){this._listener=e}return e.prototype.next=function(e){this._listener._n(e)},e.prototype.error=function(e){this._listener._e(e)},e.prototype.complete=function(){this._listener._c()},e}(),h=function(){function e(e){this.type="fromObservable",this.ins=e,this.active=!1}return e.prototype._start=function(e){this.out=e,this.active=!0,this._sub=this.ins.subscribe(new p(e)),this.active||this._sub.unsubscribe()},e.prototype._stop=function(){this._sub&&this._sub.unsubscribe(),this.active=!1},e}(),f=function(){function e(e){this.type="merge",this.insArr=e,this.out=a,this.ac=0}return e.prototype._start=function(e){this.out=e;var t=this.insArr,n=t.length;this.ac=n;for(var r=0;r<n;r++)t[r]._add(this)},e.prototype._stop=function(){for(var e=this.insArr,t=e.length,n=0;n<t;n++)e[n]._remove(this);this.out=a},e.prototype._n=function(e){var t=this.out;t!==a&&t._n(e)},e.prototype._e=function(e){var t=this.out;t!==a&&t._e(e)},e.prototype._c=function(){if(--this.ac<=0){var e=this.out;if(e===a)return;e._c()}},e}(),m=function(){function e(e,t,n){this.i=e,this.out=t,this.p=n,n.ils.push(this)}return e.prototype._n=function(e){var t=this.p,n=this.out;n!==a&&t.up(e,this.i)&&n._n(t.vals)},e.prototype._e=function(e){var t=this.out;t!==a&&t._e(e)},e.prototype._c=function(){var e=this.p;e.out!==a&&0==--e.Nc&&e.out._c()},e}(),b=function(){function e(e){this.type="combine",this.insArr=e,this.out=a,this.ils=[],this.Nc=this.Nn=0,this.vals=[]}return e.prototype.up=function(e,t){var n=this.vals[t],r=this.Nn?n===a?--this.Nn:this.Nn:0;return this.vals[t]=e,0===r},e.prototype._start=function(e){this.out=e;var t=this.insArr,n=this.Nc=this.Nn=t.length,r=this.vals=new Array(n);if(0===n)e._n([]),e._c();else for(var o=0;o<n;o++)r[o]=a,t[o]._add(new m(o,e,this))},e.prototype._stop=function(){for(var e=this.insArr,t=e.length,n=this.ils,r=0;r<t;r++)e[r]._remove(n[r]);this.out=a,this.ils=[],this.vals=[]},e}(),v=function(){function e(e){this.type="fromArray",this.a=e}return e.prototype._start=function(e){for(var t=this.a,n=0,r=t.length;n<r;n++)e._n(t[n]);e._c()},e.prototype._stop=function(){},e}(),g=function(){function e(e){this.type="fromPromise",this.on=!1,this.p=e}return e.prototype._start=function(e){var t=this;this.on=!0,this.p.then(function(n){t.on&&(e._n(n),e._c())},function(t){e._e(t)}).then(i,function(e){setTimeout(function(){throw e})})},e.prototype._stop=function(){this.on=!1},e}(),y=function(){function e(e){this.type="periodic",this.period=e,this.intervalID=-1,this.i=0}return e.prototype._start=function(e){var t=this;this.intervalID=setInterval(function(){e._n(t.i++)},this.period)},e.prototype._stop=function(){-1!==this.intervalID&&clearInterval(this.intervalID),this.intervalID=-1,this.i=0},e}(),x=function(){function e(e,t){this.type="debug",this.ins=e,this.out=a,this.s=i,this.l="","string"==typeof t?this.l=t:"function"==typeof t&&(this.s=t)}return e.prototype._start=function(e){this.out=e,this.ins._add(this)},e.prototype._stop=function(){this.ins._remove(this),this.out=a},e.prototype._n=function(e){var t=this.out;if(t!==a){var n=this.s,r=this.l;if(n!==i)try{n(e)}catch(e){t._e(e)}else r?console.log(r+":",e):console.log(e);t._n(e)}},e.prototype._e=function(e){var t=this.out;t!==a&&t._e(e)},e.prototype._c=function(){var e=this.out;e!==a&&e._c()},e}(),_=function(){function e(e,t){this.type="drop",this.ins=t,this.out=a,this.max=e,this.dropped=0}return e.prototype._start=function(e){this.out=e,this.dropped=0,this.ins._add(this)},e.prototype._stop=function(){this.ins._remove(this),this.out=a},e.prototype._n=function(e){var t=this.out;t!==a&&this.dropped++>=this.max&&t._n(e)},e.prototype._e=function(e){var t=this.out;t!==a&&t._e(e)},e.prototype._c=function(){var e=this.out;e!==a&&e._c()},e}(),M=function(){function e(e,t){this.out=e,this.op=t}return e.prototype._n=function(){this.op.end()},e.prototype._e=function(e){this.out._e(e)},e.prototype._c=function(){this.op.end()},e}(),w=function(){function e(e,t){this.type="endWhen",this.ins=t,this.out=a,this.o=e,this.oil=u}return e.prototype._start=function(e){this.out=e,this.o._add(this.oil=new M(e,this)),this.ins._add(this)},e.prototype._stop=function(){this.ins._remove(this),this.o._remove(this.oil),this.out=a,this.oil=u},e.prototype.end=function(){var e=this.out;e!==a&&e._c()},e.prototype._n=function(e){var t=this.out;t!==a&&t._n(e)},e.prototype._e=function(e){var t=this.out;t!==a&&t._e(e)},e.prototype._c=function(){this.end()},e}(),O=function(){function e(e,t){this.type="filter",this.ins=t,this.out=a,this.f=e}return e.prototype._start=function(e){this.out=e,this.ins._add(this)},e.prototype._stop=function(){this.ins._remove(this),this.out=a},e.prototype._n=function(e){var t=this.out;if(t!==a){var n=c(this,e,t);n!==a&&n&&t._n(e)}},e.prototype._e=function(e){var t=this.out;t!==a&&t._e(e)},e.prototype._c=function(){var e=this.out;e!==a&&e._c()},e}(),j=function(){function e(e,t){this.out=e,this.op=t}return e.prototype._n=function(e){this.out._n(e)},e.prototype._e=function(e){this.out._e(e)},e.prototype._c=function(){this.op.inner=a,this.op.less()},e}(),k=function(){function e(e){this.type="flatten",this.ins=e,this.out=a,this.open=!0,this.inner=a,this.il=u}return e.prototype._start=function(e){this.out=e,this.open=!0,this.inner=a,this.il=u,this.ins._add(this)},e.prototype._stop=function(){this.ins._remove(this),this.inner!==a&&this.inner._remove(this.il),this.out=a,this.open=!0,this.inner=a,this.il=u},e.prototype.less=function(){var e=this.out;e!==a&&(this.open||this.inner!==a||e._c())},e.prototype._n=function(e){var t=this.out;if(t!==a){var n=this.inner,r=this.il;n!==a&&r!==u&&n._remove(r),(this.inner=e)._add(this.il=new j(t,this))}},e.prototype._e=function(e){var t=this.out;t!==a&&t._e(e)},e.prototype._c=function(){this.open=!1,this.less()},e}(),S=function(){function e(e,t,n){var r=this;this.type="fold",this.ins=n,this.out=a,this.f=function(t){return e(r.acc,t)},this.acc=this.seed=t}return e.prototype._start=function(e){this.out=e,this.acc=this.seed,e._n(this.acc),this.ins._add(this)},e.prototype._stop=function(){this.ins._remove(this),this.out=a,this.acc=this.seed},e.prototype._n=function(e){var t=this.out;if(t!==a){var n=c(this,e,t);n!==a&&t._n(this.acc=n)}},e.prototype._e=function(e){var t=this.out;t!==a&&t._e(e)},e.prototype._c=function(){var e=this.out;e!==a&&e._c()},e}(),T=function(){function e(e){this.type="last",this.ins=e,this.out=a,this.has=!1,this.val=a}return e.prototype._start=function(e){this.out=e,this.has=!1,this.ins._add(this)},e.prototype._stop=function(){this.ins._remove(this),this.out=a,this.val=a},e.prototype._n=function(e){this.has=!0,this.val=e},e.prototype._e=function(e){var t=this.out;t!==a&&t._e(e)},e.prototype._c=function(){var e=this.out;e!==a&&(this.has?(e._n(this.val),e._c()):e._e("TODO show proper error"))},e}(),$=function(){function e(e,t){this.out=e,this.op=t}return e.prototype._n=function(e){this.out._n(e)},e.prototype._e=function(e){this.out._e(e)},e.prototype._c=function(){this.op.inner=a,this.op.less()},e}(),C=function(){function e(e){this.type=e.type+"+flatten",this.ins=e.ins,this.out=a,this.mapOp=e,this.inner=a,this.il=u,this.open=!0}return e.prototype._start=function(e){this.out=e,this.inner=a,this.il=u,this.open=!0,this.mapOp.ins._add(this)},e.prototype._stop=function(){this.mapOp.ins._remove(this),this.inner!==a&&this.inner._remove(this.il),this.out=a,this.inner=a,this.il=u},e.prototype.less=function(){if(!this.open&&this.inner===a){var e=this.out;if(e===a)return;e._c()}},e.prototype._n=function(e){var t=this.out;if(t!==a){var n=this.inner,r=this.il,o=c(this.mapOp,e,t);o!==a&&(n!==a&&r!==u&&n._remove(r),(this.inner=o)._add(this.il=new $(t,this)))}},e.prototype._e=function(e){var t=this.out;t!==a&&t._e(e)},e.prototype._c=function(){this.open=!1,this.less()},e}(),E=function(){function e(e,t){this.type="map",this.ins=t,this.out=a,this.f=e}return e.prototype._start=function(e){this.out=e,this.ins._add(this)},e.prototype._stop=function(){this.ins._remove(this),this.out=a},e.prototype._n=function(e){var t=this.out;if(t!==a){var n=c(this,e,t);n!==a&&t._n(n)}},e.prototype._e=function(e){var t=this.out;t!==a&&t._e(e)},e.prototype._c=function(){var e=this.out;e!==a&&e._c()},e}(),A=function(e){function t(t,n,r){e.call(this,n,r),this.type="filter+map",this.passes=t}return r(t,e),t.prototype._n=function(e){if(this.passes(e)){var t=this.out;if(t!==a){var n=c(this,e,t);n!==a&&t._n(n)}}},t}(E),D=function(){function e(e){this.type="remember",this.ins=e,this.out=a}return e.prototype._start=function(e){this.out=e,this.ins._add(e)},e.prototype._stop=function(){this.ins._remove(this.out),this.out=a},e}(),I=function(){function e(e,t){this.type="replaceError",this.ins=t,this.out=a,this.f=e}return e.prototype._start=function(e){this.out=e,this.ins._add(this)},e.prototype._stop=function(){this.ins._remove(this),this.out=a},e.prototype._n=function(e){var t=this.out;t!==a&&t._n(e)},e.prototype._e=function(e){var t=this.out;if(t!==a)try{this.ins._remove(this),(this.ins=this.f(e))._add(this)}catch(e){t._e(e)}},e.prototype._c=function(){var e=this.out;e!==a&&e._c()},e}(),P=function(){function e(e,t){this.type="startWith",this.ins=e,this.out=a,this.val=t}return e.prototype._start=function(e){this.out=e,this.out._n(this.val),this.ins._add(e)},e.prototype._stop=function(){this.ins._remove(this.out),this.out=a},e}(),N=function(){function e(e,t){this.type="take",this.ins=t,this.out=a,this.max=e,this.taken=0}return e.prototype._start=function(e){this.out=e,this.taken=0,this.max<=0?e._c():this.ins._add(this)},e.prototype._stop=function(){this.ins._remove(this),this.out=a},e.prototype._n=function(e){var t=this.out;if(t!==a){var n=++this.taken;n<this.max?t._n(e):n===this.max&&(t._n(e),t._c())}},e.prototype._e=function(e){var t=this.out;t!==a&&t._e(e)},e.prototype._c=function(){var e=this.out;e!==a&&e._c()},e}(),R=function(){function e(e){this._prod=e||a,this._ils=[],this._stopID=a,this._dl=a,this._d=!1,this._target=a,this._err=a}return e.prototype._n=function(e){var t=this._ils,n=t.length;if(this._d&&this._dl._n(e),1==n)t[0]._n(e);else for(var r=s(t),o=0;o<n;o++)r[o]._n(e)},e.prototype._e=function(e){if(this._err===a){this._err=e;var t=this._ils,n=t.length;if(this._x(),this._d&&this._dl._e(e),1==n)t[0]._e(e);else for(var r=s(t),o=0;o<n;o++)r[o]._e(e);if(!this._d&&0==n)throw this._err}},e.prototype._c=function(){var e=this._ils,t=e.length;if(this._x(),this._d&&this._dl._c(),1==t)e[0]._c();else for(var n=s(e),r=0;r<t;r++)n[r]._c()},e.prototype._x=function(){0!==this._ils.length&&(this._prod!==a&&this._prod._stop(),this._err=a,this._ils=[])},e.prototype._stopNow=function(){this._prod._stop(),this._err=a,this._stopID=a},e.prototype._add=function(e){var t=this._target;if(t!==a)return t._add(e);var n=this._ils;if(n.push(e),!(n.length>1))if(this._stopID!==a)clearTimeout(this._stopID),this._stopID=a;else{var r=this._prod;r!==a&&r._start(this)}},e.prototype._remove=function(e){var t=this,n=this._target;if(n!==a)return n._remove(e);var r=this._ils,o=r.indexOf(e);o>-1&&(r.splice(o,1),this._prod!==a&&r.length<=0?(this._err=a,this._stopID=setTimeout(function(){return t._stopNow()})):1===r.length&&this._pruneCycles())},e.prototype._pruneCycles=function(){this._hasNoSinks(this,[])&&this._remove(this._ils[0])},e.prototype._hasNoSinks=function(e,t){if(-1!==t.indexOf(e))return!0;if(e.out===this)return!0;if(e.out&&e.out!==a)return this._hasNoSinks(e.out,t.concat(e));if(e._ils){for(var n=0,r=e._ils.length;n<r;n++)if(!this._hasNoSinks(e._ils[n],t.concat(e)))return!1;return!0}return!1},e.prototype.ctor=function(){return this instanceof B?B:e},e.prototype.addListener=function(e){e._n=e.next||i,e._e=e.error||i,e._c=e.complete||i,this._add(e)},e.prototype.removeListener=function(e){this._remove(e)},e.prototype.subscribe=function(e){return this.addListener(e),new l(this,e)},e.prototype[o.default]=function(){return this},e.create=function(t){if(t){if("function"!=typeof t.start||"function"!=typeof t.stop)throw new Error("producer requires both start and stop functions");d(t)}return new e(t)},e.createWithMemory=function(e){return e&&d(e),new B(e)},e.never=function(){return new e({_start:i,_stop:i})},e.empty=function(){return new e({_start:function(e){e._c()},_stop:i})},e.throw=function(t){return new e({_start:function(e){e._e(t)},_stop:i})},e.from=function(t){if("function"==typeof t[o.default])return e.fromObservable(t);if("function"==typeof t.then)return e.fromPromise(t);if(Array.isArray(t))return e.fromArray(t);throw new TypeError("Type of input to from() must be an Array, Promise, or Observable")},e.of=function(){for(var t=[],n=0;n<arguments.length;n++)t[n-0]=arguments[n];return e.fromArray(t)},e.fromArray=function(t){return new e(new v(t))},e.fromPromise=function(t){return new e(new g(t))},e.fromObservable=function(t){return new e(new h(t))},e.periodic=function(t){return new e(new y(t))},e.prototype._map=function(e){var t=this._prod,n=this.ctor();return new n(t instanceof O?new A(t.f,e,t.ins):new E(e,this))},e.prototype.map=function(e){return this._map(e)},e.prototype.mapTo=function(e){var t=this.map(function(){return e}),n=t._prod;return n.type=n.type.replace("map","mapTo"),t},e.prototype.filter=function(t){var n,r,o=this._prod;return new e(o instanceof O?new O((n=o.f,r=t,function(e){return n(e)&&r(e)}),o.ins):new O(t,this))},e.prototype.take=function(e){return new(this.ctor())(new N(e,this))},e.prototype.drop=function(t){return new e(new _(t,this))},e.prototype.last=function(){return new e(new T(this))},e.prototype.startWith=function(e){return new B(new P(this,e))},e.prototype.endWhen=function(e){return new(this.ctor())(new w(e,this))},e.prototype.fold=function(e,t){return new B(new S(e,t,this))},e.prototype.replaceError=function(e){return new(this.ctor())(new I(e,this))},e.prototype.flatten=function(){var t=this._prod;return new e(t instanceof E&&!(t instanceof A)?new C(t):new k(this))},e.prototype.compose=function(e){return e(this)},e.prototype.remember=function(){return new B(new D(this))},e.prototype.debug=function(e){return new(this.ctor())(new x(this,e))},e.prototype.imitate=function(e){if(e instanceof B)throw new Error("A MemoryStream was given to imitate(), but it only supports a Stream. Read more about this restriction here: https://github.com/staltz/xstream#faq");this._target=e;for(var t=this._ils,n=t.length,r=0;r<n;r++)e._add(t[r]);this._ils=[]},e.prototype.shamefullySendNext=function(e){this._n(e)},e.prototype.shamefullySendError=function(e){this._e(e)},e.prototype.shamefullySendComplete=function(){this._c()},e.prototype.setDebugListener=function(e){e?(this._d=!0,e._n=e.next||i,e._e=e.error||i,e._c=e.complete||i,this._dl=e):(this._d=!1,this._dl=a)},e.merge=function(){for(var t=[],n=0;n<arguments.length;n++)t[n-0]=arguments[n];return new e(new f(t))},e.combine=function(){for(var t=[],n=0;n<arguments.length;n++)t[n-0]=arguments[n];return new e(new b(t))},e}();t.Stream=R;var B=function(e){function t(t){e.call(this,t),this._has=!1}return r(t,e),t.prototype._n=function(t){this._v=t,this._has=!0,e.prototype._n.call(this,t)},t.prototype._add=function(e){var t=this._target;if(t!==a)return t._add(e);var n=this._ils;if(n.push(e),n.length>1)this._has&&e._n(this._v);else if(this._stopID!==a)this._has&&e._n(this._v),clearTimeout(this._stopID),this._stopID=a;else if(this._has)e._n(this._v);else{var r=this._prod;r!==a&&r._start(this)}},t.prototype._stopNow=function(){this._has=!1,e.prototype._stopNow.call(this)},t.prototype._x=function(){this._has=!1,e.prototype._x.call(this)},t.prototype.map=function(e){return this._map(e)},t.prototype.mapTo=function(t){return e.prototype.mapTo.call(this,t)},t.prototype.take=function(t){return e.prototype.take.call(this,t)},t.prototype.endWhen=function(t){return e.prototype.endWhen.call(this,t)},t.prototype.replaceError=function(t){return e.prototype.replaceError.call(this,t)},t.prototype.remember=function(){return this},t.prototype.debug=function(t){return e.prototype.debug.call(this,t)},t}(R);t.MemoryStream=B,Object.defineProperty(t,"__esModule",{value:!0}),t.default=R},function(e,t,n){"use strict";e.exports=n(90)()?Symbol:n(89)},function(e,t,n){"use strict";var r=n(16),o=n(30),a=n(94),i=n(29);(e.exports=function(e,t){var n,a,s,c,u;return arguments.length<2||"string"!=typeof e?(c=t,t=e,e=null):c=arguments[2],null==e?(n=s=!0,a=!1):(n=i.call(e,"c"),a=i.call(e,"e"),s=i.call(e,"w")),u={value:t,configurable:n,enumerable:a,writable:s},c?r(o(c),u):u}).gs=function(e,t,n){var s,c,u,d;return"string"!=typeof e?(u=n,n=t,t=e,e=null):u=arguments[3],null==t?t=void 0:a(t)?null==n?n=void 0:a(n)||(u=n,n=void 0):(u=t,t=n=void 0),null==e?(s=!0,c=!1):(s=i.call(e,"c"),c=i.call(e,"e")),d={get:t,set:n,configurable:s,enumerable:c},u?r(o(u),d):d}},function(e,t,n){"use strict";var r=n(34)();e.exports=function(e){return e!==r&&null!==e}},function(e,t,n){"use strict";t.SCOPE_PREFIX="$$CYCLEDOM$$-",t.getElement=function(e){var t,n="string"==typeof e?document.querySelector(e):e;if("string"==typeof e&&null===n)throw new Error("Cannot render into unknown element `"+e+"`");if(t=n,!("object"==typeof HTMLElement?t instanceof HTMLElement||t instanceof DocumentFragment:t&&"object"==typeof t&&null!==t&&(1===t.nodeType||11===t.nodeType)&&"string"==typeof t.nodeName))throw new Error("Given container is not a DOM element neither a selector string.");return n},t.getScope=function(e){return e.filter(function(e){return e.indexOf(t.SCOPE_PREFIX)>-1}).slice(-1).join("")},t.getSelectors=function(e){return e.filter(function(e){return-1===e.indexOf(t.SCOPE_PREFIX)}).join(" ")}},function(e,t,n){"use strict";var r=Object.prototype.toString,o=r.call("");e.exports=function(e){return"string"==typeof e||e&&"object"==typeof e&&(e instanceof String||r.call(e)===o)||!1}},function(e,t,n){"use strict";var r=Object.prototype.toString,o=r.call(function(){return arguments}());e.exports=function(e){return r.call(e)===o}},function(e,t,n){"use strict";e.exports=n(32)()?Object.setPrototypeOf:n(31)},function(e,t){var n;n=function(){return this}();try{n=n||Function("return this")()||(0,eval)("this")}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t){e.exports={array:Array.isArray,primitive:function(e){return"string"==typeof e||"number"==typeof e}}},function(e,t,n){(function(e,n){var r={function:!0,object:!0},o=r[typeof t]&&t&&!t.nodeType?t:void 0,a=r[typeof e]&&e&&!e.nodeType?e:void 0,i=l(o&&a&&"object"==typeof n&&n),s=l(r[typeof self]&&self),c=l(r[typeof window]&&window),u=l(r[typeof this]&&this),d=i||c!==(u&&u.window)&&c||s||u||Function("return this")();function l(e){return e&&e.Object===Object?e:null}e.exports=d}).call(this,n(58)(e),n(12))},function(e,t,n){"use strict";var r,o=n(35),a=n(16),i=n(2),s=n(1),c=n(6),u=n(82),d=n(5),l=Object.defineProperty,p=Object.defineProperties;e.exports=r=function(e,t){if(!(this instanceof r))throw new TypeError("Constructor requires 'new'");p(this,{__list__:c("w",s(e)),__context__:c("w",t),__nextIndex__:c("w",0)}),t&&(i(t.on),t.on("_add",this._onAdd),t.on("_delete",this._onDelete),t.on("_clear",this._onClear))},delete r.prototype.constructor,p(r.prototype,a({_next:c(function(){var e;if(this.__list__)return this.__redo__&&void 0!==(e=this.__redo__.shift())?e:this.__nextIndex__<this.__list__.length?this.__nextIndex__++:void this._unBind()}),next:c(function(){return this._createResult(this._next())}),_createResult:c(function(e){return void 0===e?{done:!0,value:void 0}:{done:!1,value:this._resolve(e)}}),_resolve:c(function(e){return this.__list__[e]}),_unBind:c(function(){this.__list__=null,delete this.__redo__,this.__context__&&(this.__context__.off("_add",this._onAdd),this.__context__.off("_delete",this._onDelete),this.__context__.off("_clear",this._onClear),this.__context__=null)}),toString:c(function(){return"[object "+(this[d.toStringTag]||"Object")+"]"})},u({_onAdd:c(function(e){e>=this.__nextIndex__||(++this.__nextIndex__,this.__redo__?(this.__redo__.forEach(function(t,n){t>=e&&(this.__redo__[n]=++t)},this),this.__redo__.push(e)):l(this,"__redo__",c("c",[e])))}),_onDelete:c(function(e){var t;e>=this.__nextIndex__||(--this.__nextIndex__,this.__redo__&&(-1!==(t=this.__redo__.indexOf(e))&&this.__redo__.splice(t,1),this.__redo__.forEach(function(t,n){t>e&&(this.__redo__[n]=--t)},this)))}),_onClear:c(function(){this.__redo__&&o.call(this.__redo__),this.__nextIndex__=0})}))),l(r.prototype,d.iterator,c(function(){return this}))},function(e,t,n){"use strict";e.exports=n(99)()?Object.assign:n(98)},function(e,t,n){"use strict";var r=n(13),o=n(20);function a(e){return i(e.data,e.children,e.sel),e}function i(e,t,n){if(e.ns="http://www.w3.org/2000/svg","foreignObject"!==n&&void 0!==t&&r.array(t))for(var o=0;o<t.length;++o)s=t[o],Array.isArray(s)||"function"!=typeof s.map?i(t[o].data,t[o].children,t[o].sel):t[o]=t[o].map(a);var s}t.h=function(e,t,n){var a,s,c={};if(3===arguments.length?(c=t,r.array(n)?a=n:r.primitive(n)&&(s=n)):2===arguments.length&&(r.array(t)?a=t:r.primitive(t)?s=t:c=t),r.array(a)){a=a.filter(function(e){return e});for(var u=0;u<a.length;++u)r.primitive(a[u])&&(a[u]=o(void 0,void 0,void 0,a[u]))}return"s"===e[0]&&"v"===e[1]&&"g"===e[2]&&i(c,a,e),o(e,c,a,s,void 0)}},function(e,t,n){"use strict";var r=Element.prototype,o=r.matches||r.matchesSelector||r.webkitMatchesSelector||r.mozMatchesSelector||r.msMatchesSelector||r.oMatchesSelector;e.exports=function(e,t){if(o)return o.call(e,t);for(var n=e.parentNode.querySelectorAll(t),r=0;r<n.length;r++)if(n[r]==e)return!0;return!1}},function(e,t,n){"use strict";var r=n(4);t.fromEvent=function(e,t,n){return void 0===n&&(n=!1),r.Stream.create({element:e,next:null,start:function(e){this.next=function(t){e.next(t)},this.element.addEventListener(t,this.next,n)},stop:function(){this.element.removeEventListener(t,this.next,n)}})}},function(e,t){e.exports=function(e,t,n,r,o){return{sel:e,data:t,children:n,text:r,elm:o,key:void 0===t?void 0:t.key}}},function(e,t,n){var r=n(14),o=1/0,a="[object Symbol]",i=/[&<>"'`]/g,s=RegExp(i.source),c={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","`":"&#96;"};function u(e){return c[e]}var d=Object.prototype.toString,l=r.Symbol,p=l?l.prototype:void 0,h=l?p.toString:void 0;function f(e){if("string"==typeof e)return e;if(null==e)return"";if(function(e){return"symbol"==typeof e||function(e){return!!e&&"object"==typeof e}(e)&&d.call(e)==a}(e))return l?h.call(e):"";var t=e+"";return"0"==t&&1/e==-o?"-0":t}e.exports=function(e){return(e=f(e))&&s.test(e)?e.replace(i,u):e}},function(e,t){var n="[object Function]",r=/^\[object .+?Constructor\]$/;function o(e){return!!e&&"object"==typeof e}var a,i,s=Object.prototype,c=Function.prototype.toString,u=s.hasOwnProperty,d=s.toString,l=RegExp("^"+c.call(u).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),p=9007199254740991;var h=(a=Array,function(e){return null!=e&&(function(e){return function(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}(e)&&d.call(e)==n}(e)?l.test(c.call(e)):o(e)&&r.test(e))}(i=null==a?void 0:a["isArray"])?i:void 0)||function(e){return o(e)&&function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=p}(e.length)&&"[object Array]"==d.call(e)};e.exports=h},function(e,t){var n=9007199254740991,r="[object Arguments]",o="[object Function]",a="[object GeneratorFunction]",i=Object.prototype,s=i.hasOwnProperty,c=i.toString,u=i.propertyIsEnumerable;e.exports=function(e){return function(e){return function(e){return!!e&&"object"==typeof e}(e)&&function(e){return null!=e&&function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=n}(e.length)&&!function(e){var t=function(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}(e)?c.call(e):"";return t==o||t==a}(e)}(e)}(e)&&s.call(e,"callee")&&(!u.call(e,"callee")||c.call(e)==r)}},function(e,t){var n="[object Function]",r=/^\[object .+?Constructor\]$/;var o=Object.prototype,a=Function.prototype.toString,i=o.hasOwnProperty,s=o.toString,c=RegExp("^"+a.call(i).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");e.exports=function(e,t){var o=null==e?void 0:e[t];return function(e){return null!=e&&(function(e){return function(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}(e)&&s.call(e)==n}(e)?c.test(a.call(e)):function(e){return!!e&&"object"==typeof e}(e)&&r.test(e))}(o)?o:void 0}},function(e,t,n){var r=n(61),o=n(60),a=n(59);var i,s=(i=function(e,t){return r(e,t,a)},function(e,t,n){return"function"==typeof t&&void 0===n||(t=o(t,n,3)),i(e,t)});e.exports=s},function(e,t,n){var r=n(37),o=/([\.#]?[a-zA-Z0-9\u007F-\uFFFF_:-]+)/,a=/^\.|#/;e.exports=function(e,t){var n,i,s,c,u="",d=[],l=r(e=e||"",o);for((a.test(l[1])||""===e)&&(n="div"),c=0;c<l.length;c++)(i=l[c])&&(s=i.charAt(0),n?"."===s?d.push(i.substring(1,i.length)):"#"===s&&(u=i.substring(1,i.length)):n=i);return{tagName:!0===t?n.toUpperCase():n,id:u,className:d.join(" ")}}},function(e,t,n){"use strict";var r=n(3),o=n(4);function a(e,t){return{sel:e.sel,data:e.data,text:e.text,elm:e.elm,key:e.key,children:t}}t.makeTransposeVNode=function(e){function t(n){if(n){if(n&&n.data&&n.data.static)return o.default.of(n);if(e.isValidStream(n))return r.default.adapt(n,e.streamSubscribe).map(t).flatten();if("object"==typeof n){if(!n.children||0===n.children.length)return o.default.of(n);var i=n.children.map(t).filter(function(e){return null!==e});return 0===i.length?o.default.of(a(n,[])):o.default.combine.apply(o.default,i).map(function(e){return a(n,e.slice())})}throw new Error("Unhandled vTree Value")}return null}return function(e){return t(e)}}},function(e,t,n){"use strict";var r=n(86);e.exports=function(e){if(!r(e))throw new TypeError(e+" is not iterable");return e}},function(e,t,n){"use strict";e.exports=n(93)()?String.prototype.contains:n(92)},function(e,t,n){"use strict";var r=n(7),o=Array.prototype.forEach,a=Object.create;e.exports=function(e){var t=a(null);return o.call(arguments,function(e){r(e)&&function(e,t){var n;for(n in e)t[n]=e[n]}(Object(e),t)}),t}},function(e,t,n){"use strict";var r,o,a,i,s=n(101),c=n(1),u=Object.prototype.isPrototypeOf,d=Object.defineProperty,l={configurable:!0,enumerable:!1,writable:!0,value:void 0};r=function(e,t){if(c(e),null===t||s(t))return e;throw new TypeError("Prototype must be null or an object")},e.exports=(o=function(){var e,t=Object.create(null),n={},r=Object.getOwnPropertyDescriptor(Object.prototype,"__proto__");if(r){try{(e=r.set).call(t,n)}catch(e){}if(Object.getPrototypeOf(t)===n)return{set:e,level:2}}return t.__proto__=n,Object.getPrototypeOf(t)===n?{level:2}:((t={}).__proto__=n,Object.getPrototypeOf(t)===n&&{level:1})}())?(2===o.level?o.set?(i=o.set,a=function(e,t){return i.call(r(e,t),t),e}):a=function(e,t){return r(e,t).__proto__=t,e}:a=function e(t,n){var o;return r(t,n),(o=u.call(e.nullPolyfill,t))&&delete e.nullPolyfill.__proto__,null===n&&(n=e.nullPolyfill),t.__proto__=n,o&&d(e.nullPolyfill,"__proto__",l),t},Object.defineProperty(a,"level",{configurable:!1,enumerable:!1,writable:!1,value:o.level})):null,n(100)},function(e,t,n){"use strict";var r=Object.create,o=Object.getPrototypeOf,a={};e.exports=function(){var e=Object.setPrototypeOf,t=arguments[0]||r;return"function"==typeof e&&o(e(t(null),a))===a}},function(e,t,n){"use strict";var r=n(105),o=Math.max;e.exports=function(e){return o(0,r(e))}},function(e,t,n){"use strict";e.exports=function(){}},function(e,t,n){"use strict";var r=n(1);e.exports=function(){return r(this).length=0,this}},function(e,t,n){"use strict";e.exports=n(111)()?Map:n(110)},function(e,t){var n,r,o;
/*!
 * Cross-Browser Split 1.1.1
 * Copyright 2007-2012 Steven Levithan <stevenlevithan.com>
 * Available under the MIT License
 * ECMAScript compliant, uniform cross-browser split method
 */
e.exports=(r=String.prototype.split,o=/()??/.exec("")[1]===n,function(e,t,a){if("[object RegExp]"!==Object.prototype.toString.call(t))return r.call(e,t,a);var i,s,c,u,d=[],l=(t.ignoreCase?"i":"")+(t.multiline?"m":"")+(t.extended?"x":"")+(t.sticky?"y":""),p=0;for(t=new RegExp(t.source,l+"g"),e+="",o||(i=new RegExp("^"+t.source+"$(?!\\s)",l)),a=a===n?-1>>>0:a>>>0;(s=t.exec(e))&&!((c=s.index+s[0].length)>p&&(d.push(e.slice(p,s.index)),!o&&s.length>1&&s[0].replace(i,function(){for(var e=1;e<arguments.length-2;e++)arguments[e]===n&&(s[e]=n)}),s.length>1&&s.index<e.length&&Array.prototype.push.apply(d,s.slice(1)),u=s[0].length,p=c,d.length>=a));)t.lastIndex===s.index&&t.lastIndex++;return p===e.length?!u&&t.test("")||d.push(""):d.push(e.slice(p)),d.length>a?d.slice(0,a):d})},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(){var e=arguments.length<=0||void 0===arguments[0]?"":arguments[0],t=void 0,n="",r=[],o=(0,a.default)(e,i);(s.test(o[1])||""===e)&&(t="div");var c=void 0,u=void 0,d=void 0;for(d=0;d<o.length;d++)(c=o[d])&&(u=c.charAt(0),t?"."===u?r.push(c.substring(1,c.length)):"#"===u&&(n=c.substring(1,c.length)):t=c);return{tagName:t,id:n,className:r.join(" ")}};var r,o=n(37),a=(r=o)&&r.__esModule?r:{default:r};var i=/([\.#]?[a-zA-Z0-9\u007F-\uFFFF_:-]+)/,s=/^\.|#/},function(e,t,n){"use strict";var r=function(){function e(e,t){this.scope=e,this.isolateModule=t}return e.prototype.isStrictlyInRootScope=function(e){for(var t=e;t;t=t.parentElement){var n=this.isolateModule.isIsolatedElement(t);if(n&&n!==this.scope)return!1;if(n)return!0}return!0},e}();t.ScopeChecker=r},function(e,t,n){"use strict";var r=n(44),o=n(3);function a(e,t){var n=r.default(e,t,{streamAdapter:o.default}),a=n.run,i=n.sinks;return"undefined"!=typeof window&&window.CyclejsDevTool_startGraphSerializer&&window.CyclejsDevTool_startGraphSerializer(i),a()}t.run=a;var i=function(e,t){var n=r.default(e,t,{streamAdapter:o.default});return"undefined"!=typeof window&&window.CyclejsDevTool_startGraphSerializer&&window.CyclejsDevTool_startGraphSerializer(n.sinks),n};i.run=a,Object.defineProperty(t,"__esModule",{value:!0}),t.default=i},function(e,t,n){"use strict";function r(e){var t,n=e.Symbol;return"function"==typeof n?n.observable?t=n.observable:(t=n("observable"),n.observable=t):t="@@observable",t}n.d(t,"a",function(){return r})},function(e,t,n){"use strict";function r(e){return null!=e&&"object"==typeof e&&!0===e["@@functional/placeholder"]}function o(e){return function t(n){return 0===arguments.length||r(n)?t:e.apply(this,arguments)}}n.r(t);function a(e){return function t(n,a){switch(arguments.length){case 0:return t;case 1:return r(n)?t:o(function(t){return e(n,t)});default:return r(n)&&r(a)?t:r(n)?o(function(t){return e(t,a)}):r(a)?o(function(t){return e(n,t)}):e(n,a)}}}var i=Array.isArray||function(e){return null!=e&&e.length>=0&&"[object Array]"===Object.prototype.toString.call(e)};function s(e){return"[object String]"===Object.prototype.toString.call(e)}var c=o(function(e){return!!i(e)||!!e&&("object"==typeof e&&(!s(e)&&(1===e.nodeType?!!e.length:0===e.length||e.length>0&&(e.hasOwnProperty(0)&&e.hasOwnProperty(e.length-1)))))});"undefined"!=typeof Symbol&&Symbol.iterator;function u(e,t){return Object.prototype.hasOwnProperty.call(t,e)}var l=Object.prototype.toString,h=function(){return"[object Arguments]"===l.call(arguments)?function(e){return"[object Arguments]"===l.call(e)}:function(e){return u("callee",e)}},f=!{toString:null}.propertyIsEnumerable("toString"),m=["constructor","valueOf","isPrototypeOf","toString","propertyIsEnumerable","hasOwnProperty","toLocaleString"],v=function(){return arguments.propertyIsEnumerable("length")}(),g=function(e,t){for(var n=0;n<e.length;){if(e[n]===t)return!0;n+=1}return!1};Object.keys;Number.isInteger;var y=function(e){return(e<10?"0":"")+e};Date.prototype.toISOString;function _(e){return e}var M="function"==typeof Object.assign?Object.assign:function(e){if(null==e)throw new TypeError("Cannot convert undefined or null to object");for(var t=Object(e),n=1,r=arguments.length;n<r;){var o=arguments[n];if(null!=o)for(var a in o)u(a,o)&&(t[a]=o[a]);n+=1}return t},w=a(function(e,t){var n={};return n[e]=t,n});Array,String,Object;var O="\t\n\v\f\r   ᠎             　\u2028\u2029\ufeff",j=(String.prototype.trim,n(0)),k=n(40),S=n.n(k);const T=Object(j.h)("pre",{style:{color:"#AFEEEE"}},"  var MonadItter = function MonadItter() {\n    this.p = function () {};\n    this.release = function () {\n      return this.p.apply(this, arguments);\n    };\n    this.bnd = function (func) {\n      return this.p = func;\n    };\n  }; "),$=Object(j.h)("pre",{style:{color:"#AFEEEE"}},"    function ret(v, id = 'temp') {\n      return window[id] = (new Monad(v, id));\n    } ");var C=Object(j.h)("pre","  var websocketsDriver = function () {\n      return create((add) => {\n        socket.onmessage = msg => add(msg)\n      })\n  };\n"),E=Object(j.h)("pre","  const messages$ = sources.WS.map( e => {\n    console.log(e);\n    mMtem.ret(e.data.split(',')).bnd( v => {\n      console.log('Websockets e.data.split message v: ', v );\n      mMZ10.bnd( () => {\n        gameMonad.run([v[7], v[8], 0, [], [v[3], v[4], v[5], v[6]]]);\n      });\n      mMZ12.bnd( () => mM6.ret(v[2] + ' successfully logged in.'));\n      mMZ13.bnd( () => {\n        var message = v.slice(3,v.length).join(', ');\n        var str = v[2] + ': ' + message;\n        messages.unshift(h('span', str ), h('br'));\n      });\n      mMZ14.bnd( () => {\n        mMgoals2.ret('The winner is ' + v[2]);\n        setTimeout(() => mMgoals2.ret(''), 5000 );\n      });\n    mMZ15.bnd( () => {\n      mMgoals2.ret('A player named ' + v[2] +\n        ' is currently logged in. Page will refresh in 4 seconds.')\n      refresh() });\n    mMZ16.bnd( () => testComments(e.data));\n    mMZ17.bnd( () => testTask(v[2], v[3], e.data) );\n    mMZ18.bnd( () => {\n      if (pMgroup.x != 'solo' || pMname.x === v[2] ) updatePlayers(e.data)  });\n    mMZ19.bnd( () => testComments(e.data));\n  })\n  mMtemp.ret(e.data.split(',')[0])\n  .bnd(next, 'CA#$42', mMZ10)\n  .bnd(next, 'CD#$42', mMZ13)\n  .bnd(next, 'CE#$42', mMZ14)\n  .bnd(next, 'EE#$42', mMZ15)\n  .bnd(next, 'TG#$41', mMZ16)\n  .bnd(next, 'DD#$42', mMZ17)\n  .bnd(next, 'NN#$42', mMZ18)\n  .bnd(next, 'GG#$42', mMZ19)\n  .bnd(next, 'TG#$40', mMZ20)\n  });\n\n  function next(x, y, instance, z) {\n    if (x == y) {\n        instance.release(z);\n    }\n    return ret(x);\n  };  "),A=Object(j.h)("pre","  var MonadSet = function MonadSet(set, ID) {\n    this.s = set;\n    this.bnd = (func, ...args) => func(this.s, ...args);\n    this.add = a => new MonadSet(s.add(a), this.id);\n    this.delete = a => new MonadSet(s.delete(a), this.id);\n    this.clear = () => new MonadSet(s.clear(), this.id);\n  };  ");const D=Object(j.h)("pre","  var push = function push(y,v,mon) {\n      if (Array.isArray(y)) {\n        let ar = [];\n        let keys = Object.keys(y);\n        for (let k in keys) {ar[k] = y[k]};\n        ar.push(v);\n        return mon.ret(ar);\n      }\n      console.log('The value provided to push is not an array');\n      return ret(y);\n    };\n\n    var spliceRemove = function splice(x, j, mon) {\n      if (Array.isArray(x)) {\n        let ar = [];\n        let keys = Object.keys(x);\n        for (let k in keys) {ar[k] = x[k]};\n        ar.splice(j,1);\n        return mon.ret(ar);\n      }\n      console.log('The value provided to spliceRemove is not an array');\n      return ret(x);\n    };\n\n    var spliceAdd = function splice(x, index, value, mon) {\n      if (Array.isArray(x)) {\n        let ar = [];\n        let keys = Object.keys(x);\n        for (let k in keys) {ar[k] = x[k]};\n        ar.splice(index, 0, value);\n        return mon.ret(ar);\n      }\n      console.log('The value provided to spliceAdd is not an array');\n      return ret(x);\n    };\n\n    var splice = function splice(x, start, end, mon) {\n      if (Array.isArray(x)) {\n        let ar = [];\n        let keys = Object.keys(x);\n        for (let k in keys) {ar[k] = x[k]};\n        ar.splice(start, end);\n        return mon.ret(ar);\n      }\n      console.log('The value provided to spliceAdd is not an array');\n      return ret(x);\n    };\n  ");var I=Object(j.h)("pre","  function cleanup (x) {\n      let target0 = document.getElementById('0');\n      let target1 = document.getElementById('1');\n      let target2 = document.getElementById('2');\n      let target3 = document.getElementById('3');\n      let targetAr = [target0, target1, target2, target3];\n      for (let i in [0,1,2,3]) {\n        if (targetAr[i].innerHTML === 'undefined' )    {\n          targetAr[i].style.display = 'none';\n        }\n        else {\n          targetAr[i].style.display = 'inline';\n        }\n      }\n      return ret(x);\n  }; "),P=Object(j.h)("pre","  mMZ10.bnd(() => mM$1\n     .ret([mMar.x[3], mMar.x[4], mMar.x[5], mMar.x[6]])\n     .bnd(() => mM$2.ret([]))\n     .bnd(displayInline,'0')\n     .bnd(displayInline,'1')\n     .bnd(displayInline,'2')\n     .bnd(displayInline,'3'));  "),N=(Object(j.h)("pre","\n      "),Object(j.h)("pre","  mMZ19.bnd(() => mM$task.bnd(spliceRemove, mMar.x[3], mM$task));\n  "),Object(j.h)("pre","  const newTask$ = sources.DOM\n    .select('input.newTask').events('keydown');\n\n  const newTaskAction$ = newTask$.map(e => {\n      let ob = {};\n      var alert = '';\n      var ar = e.target.value.split(',');\n      var ar2 = ar.slice(2);\n      var task = '';\n      if (ar.length < 4) {\n        task = ar[2];\n      }\n      if (ar.length > 3) {\n        task = ar2.reduce((a,b) => a + '$*$*$' + b);\n      }\n      if( e.keyCode === 13 ) {\n        if ( ar.length < 3 ) {\n          alert = 'You should enter \"author, responsible party, task\" separated by commas';\n          document.getElementById('alert').innerHTML = alert;\n        }\n\n        else if ( (mMar2.x.filter(v => (v.task === task)).length) > 0 ) {\n          document.getElementById('alert').innerHTML = task + \" is already listed.\";\n        }\n\n        else if ( ar.length > 2 ) {\n          mM$taskList.bnd(addString, task + ',yellow, none, false,' +  ar[0] + ',' + ar[1], mM$taskList);\n          e.target.value = '';\n          document.getElementById('alert').innerHTML = '';\n        }\n      }\n  };  ")),R=Object(j.h)("pre","  const process = function(str) {\n    let a = str.split(\",\");\n    console.log('In process. str and a are: ', str, a);\n    if (a === undefined) {\n      return;\n    };\n    if (a.length < 9) {\n      return\n    };\n    let ob = {};\n    let ar = a.slice(3)\n    let s = ar.reduce((a,b) => a + ',' + b);\n    if (mM$taskList.x.length < 5) {\n      mM$taskList.ret(s);\n    }\n    let ar2 = [];\n    let tempArray = [];\n    if (ar.length < 6) {return};\n    if ((ar.length % 6) !== 0) {\n      document.getElementById('alert').innerHTML = 'Error: array length is: ' + length;\n    } else {\n      let keys = Array(ar.length/6).fill(1);\n      keys.map(_ => {\n        ar2.push(\n          {\n            task: convertBack(ar.shift()),\n            color: ar.shift(),\n            textDecoration: ar.shift(),\n            checked: ar.shift() === 'true',\n            author: ar.shift(),\n            responsible: ar.shift()\n          }\n        )\n      })\n      console.log('In process  ar2 is: ', ar2)\n      let keys2 = Object.keys(ar2);\n      for (let k in keys) {\n        tempArray.push(\n          h('div.todo',  [\n            h('span.task3', {style: {color: ar2[k].color, textDecoration: ar2[k].textDecoration}},\n                'Task: ' + ar2[k].task  ),\n            h('br'),\n            h('button#edit1', 'Edit'  ),\n            h('input#edit2', {props: {type: 'textarea', value: ar2[k].task}, style: {display: 'none'}}  ),\n            h('span#author.tao', 'Author: ' + ar2[k].author  + ' / ' + 'Responsibility: ' + ar2[k].responsible),\n            h('br'),\n            h('input#cb', {props: {type: 'checkbox', checked: ar2[k].checked}, style: {color: ar2[k].color,\n                 textDecoration: ar2[k].textDecoration} } ),\n            h('label.cbox', { props: {for: '#cb'}}, 'Completed' ),\n            h('button.delete', 'Delete'  ),\n            h('br'),\n            h('hr')])\n        )\n      }\n      mMtaskList.ret(tempArray)\n    }\n  };  "),B=Object(j.h)("pre","  const colorClick$ = sources.DOM\n    .select('#cb').events('click')\n\n  const colorAction$ = colorClick$.map(e => {\n    let index = getIndex(e);\n    let s = mM$taskList.x;\n    let ar = s.split(',');\n    let n = 6 * index + 3;\n    let j = 6 * index + 2;\n    let k = 6 * index + 1;\n    let checked = ar[n];\n    if (checked === 'true')  {\n      ar[n] = 'false';\n      ar[k] = 'yellow';\n      ar[j] = 'none';\n    }\n    else {\n      ar[n] = 'true';\n      ar[k] = 'lightGreen';\n      ar[j] = 'line-through';\n    }\n    mM$taskList.ret( ar.reduce((a,b) => a + ',' + b) )\n  });\n\n  var getIndex = function getIndex (event_object) {\n    var task = event_object.currentTarget.parentNode.innerText;\n    var possibilities = event_object.currentTarget.parentNode.parentNode.childNodes;\n    var keys = Object.keys(possibilities);\n    for (let k in keys) {\n      if (task === possibilities[k].innerText) {\n        return k\n      }\n    }\n    console.log('In getIndex. No match');\n  }  "),q=Object(j.h)("pre","  const edit1$ = sources.DOM\n    .select('#edit1').events('click')\n\n  const edit1Action$ = edit1$.map(e => {\n    let index = getIndex2(e);\n    mMtaskList.x[index].children[3].elm.style.display = 'block';\n  });\n\n  const edit2$ = sources.DOM\n    .select('#edit2').events('keypress')\n\n  const edit2Action$ = edit2$.map(e => {\n    let v = e.target.value;\n    let index = getIndex2(e);\n    if( e.keyCode === 13 ) {\n      process2(v, index);\n    mMtaskList.x[index].children[3].elm.style.display = 'none';\n    }\n  });\n\n  const process2 = function(str, index) {\n    var a = mMcurrentList.x.split(',');\n    a[6*index] = str;\n    var b = a.reduce((a,b) => a + ',' + b)\n    task2(b);\n  };\n\n  var getIndex2 = function getIndex2 (e) {\n    var elem = e.currentTarget.parentNode.children[0].innerHTML\n    var elem2 = e.currentTarget.parentNode.parentNode.childNodes\n    var keys = Object.keys(elem2);\n    for (let k in keys) {\n      if (elem === elem2[k].childNodes[0].innerHTML) {\n        return k\n      }\n      console.log('In getIndex2. No match');\n    }\n  }  "),F=Object(j.h)("pre","  const taskAction$ = mM$taskList.stream.map(str => {\n    socket.send('TD#$42' + ',' + mMgroup.x.trim() +\n        ',' + mMname.x.trim() + ',' + '@' + str);\n  });  "),z=Object(j.h)("pre","  function updateCalc(ar, op) {\n    var result = calc(ar[0], op, ar[1]);\n    if (result === 18 || result === 20) {\n      score(result);\n    }\n    else {\n      var sco = gameMonad.fetch0();\n      var goals = gameMonad.fetch1();\n      var a = gameMonad.fetch4().slice();\n      a.push(result);\n      gameMonad.run([sco,goals,0,[],a]);\n    }\n  };  "),L=Object(j.h)("pre",'  function score(result) { var sc = parseInt(gameMonad.fetch0());\n    var sco = result === 18 ? sc + 3 : sc + 1;\n    var scor = sco % 5 === 0 ? sco + 5 : sco;\n    var goals = gameMonad.fetch1();\n\n    if (scor === 25 && gameMonad.fetch1() === "1") {\n      mMindex.ret(0);\n      gameMonad = new MonadState(\'gameMonad\', [[0,0,0,[],[0,0,0,0]]]);\n      socket.send(`CE#$42,${pMgroup.x},${pMname.x}`);\n      scor = 0;\n      goals = 0;\n    }\n    if (scor === 25 && gameMonad.fetch1() === "0") {\n      scor = 0;\n      goals = 1;\n    }\n    newRoll(scor, goals);\n  }; '),Z=Object(j.h)("pre","  mMZ1.bnd(v => mMt1\n  .bnd(add,v).bnd(w => {\n    mMt1.ret(w)\n    .bnd(cube)\n    .bnd(x => mMt3VAL = w + ' cubed is ' + x)}));\n\n  mMZ2.bnd(v => cube(v)\n  .bnd(w => mMt3VAL = v + ' cubed is ' + w));  "),H=Object(j.h)("pre",'  var solve = function solve () {\n     mMZ3.bnd(a => {\n     mMquad4.ret(\'\');\n     mMquad6.ret(\'\');\n     mMquad5.ret(a + " * x * x ")\n     mMZ3.bnd(b => {\n     mMquad6.ret(b + \' * x \')\n     mMZ3.bnd(c => {\n     mMtemp.ret([a,b,c])\n    .bnd(gMap, qS4,\'mMtemp2\')\n    .bnd(result => {\n      let x = result[0]\n      let y = result[1]\n      if (x === 0) {\n        mMquad5.ret(\'No solution\', mMtemp)\n        mMquad6.ret(\' \');\n        solve();\n        return;\n      }\n      if (y === 0) {\n        mMquad5.ret(\'No solution\')\n        mMquad6.ret(\' \')\n        solve();\n        return;\n      };\n      mMquad4.ret("Solutiions for " + a + ", " + b + " and " + c + " are " + x + " and  " + y)\n      mMquad5.ret(p(a).text + " * " + x + " * " + x + " + " + p(b).text +\n              " * " + x + " " + p(c).text + " = 0")\n      mMquad6.ret(p(a).text + " * " + y + " * " + y + " + " + p(b).text +\n              " * " + y + " " + p(c).text + " = 0")\n      solve();   // Continuing the endless loop.\n      }) }) }) })\n  };\n  solve(); '),W=Object(j.h)("pre",'  var solve = function solve () {\n     mMZ3.bnd(a => {\n     mMquad4.ret(\'\');\n     mMquad6.ret(\'\');\n     mMquad5.ret(a + " * x * x ")\n     mMZ3.bnd(b => {\n     mMquad6.ret(b + \' * x \')\n     mMZ3.bnd(c => {\n     mMtemp.ret([a,b,c])\n    .bnd(gMap, qS4,\'mMtemp2\')\n    .bnd(result => {\n      let x = result[0]\n      let y = result[1]\n      if (x === 0) {\n        mMquad5.ret(\'No solution\', mMtemp)\n        mMquad6.ret(\' \');\n        solve();\n        return;\n      }\n      if (y === 0) {\n        mMquad5.ret(\'No solution\')\n        mMquad6.ret(\' \')\n        solve();\n        return;\n      };\n      mMquad4.ret("Solutiions for " + a + ", " + b + " and " + c + " are " + x + " and  " + y)\n      mMquad5.ret(p(a).text + " * " + x + " * " + x + " + " + p(b).text +\n              " * " + x + " " + p(c).text + " = 0")\n      mMquad6.ret(p(a).text + " * " + y + " * " + y + " + " + p(b).text +\n              " * " + y + " " + p(c).text + " = 0")\n      solve();   // Continuing the endless loop.\n      }) }) }) })\n  };\n  solve();\n\n  function gMap(x, f, id) {\n    var mon = new Monad(f(x), id);\n    window[id] = mon;\n    return mon;\n  }\n\n  var qS1 = function qS1(a, b, c) {\n      var n = (b * (-1)) + (Math.sqrt(b * b - 4 * a * c));\n      if (n != n) {\n          return 0;\n      }\n      return n / (2 * a);\n  };\n  var qS2 = function qS2(a, b, c) {\n      var n = (b * (-1)) - (Math.sqrt(b * b - 4 * a * c));\n      if (n != n) {\n          return 0;\n      }\n      return n / (2 * a);\n  };\n  var qS3 = function qS3(a, b, c) {\n      return [qS1(a, b, c), qS2(a, b, c)];\n  };\n      var qS4 = function qS4 ([x,y,z]) {\n        let [a,b,c] = [numProtect(x),numProtect(y),numProtect(z)]\n        return [qS1(a,b,c), qS2(a,b,c)]\n      }\n\n  var qS4 = function qS4(_a) {\n      var x = _a[0], y = _a[1], z = _a[2];\n      var _b = [x, y, z], a = _b[0], b = _b[1], c = _b[2];\n      return qS3(a, b, c);\n  };\n\n  var quad$ = sources.DOM\n      .select(\'#quad\').events(\'keypress\');\n\n  var quadAction$ = quad$.map(function (e) {\n      if (e.keyCode === 13) {\n          mMZ3.release(e.target.value);\n          document.getElementById(\'quad\').value = null;\n      }\n  }); '),G=Object(j.h)("pre","  var runTest = function monTest () {\n  mM5.bnd( equals,\n    m.ret(0).bnd(v => add(v, 3, m).bnd(cube)),\n    m.ret(0).bnd(add, 3, m).bnd(cube), mMa)\n\n  mM5.bnd(equals, m, m.bnd(m.ret), mMb)\n\n  mM5.bnd(equals, m, m.ret(m.x), mMc)\n  }  "),V=Object(j.h)("pre","  var inc = function inc(x, mon) {\n      return mon.ret(x + 1);\n  };\n\n  var spliceAdd = function spliceAdd(x, index, value, mon) {\n    if (Array.isArray(x)) {\n      let ar = [];\n      let keys = Object.keys(x);\n      for (let k in keys) {ar[k] = x[k]};\n      ar.splice(index, 0, value);\n      return mon.ret(ar);\n    }\n    console.log('The value provided to spliceAdd is not an array');\n    return ret(x);\n  }  "),U=Object(j.h)("pre","  const taskAction$ = mM$taskList.stream.map(str => {\n    socket.send('TD#$42' + ',' + mMgroup.x.trim() +\n        ',' + mMname.x.trim() + ',' + '@' + str);\n  });  "),Y=Object(j.h)("pre","  var add = function(x,b,mon) {\n    if (arguments.length === 3) {\n      return mon.ret(x + b);\n    }\n    return ret(x+b);\n  }; "),J=Object(j.h)("pre","  mM$prime.ret([[2],3])  "),Q=Object(j.h)("pre","  function MonadState(g, state) {\n    this.id = g;\n    this.s = state;\n    this.bnd = (func, ...args) => func(this.s, ...args);  \n    this.ret = function (a) {\n      return window[this.id] = new MonadState(this.id, a);\n    };\n  };  "),K=Object(j.h)("pre","    var primesMonad = new MonadState('primesMonad', [2, '', 3, [2]], [2],  primes_state)\n\n    var primes_state = function primes_state(x) {\n      var v = x.slice();\n      console.log('In script2.js >>> primes_state v is ', v );\n      while (2 == 2) {\n          if ( v[3].every(e =>  (v[0] / e) != Math.floor(v[0] / e)) ) {\n              v[3].push(v[0]);\n          }\n          if (v[3][v[3].length - 1] > v[2]) {\n             return v;\n          };\n          v[0] += 2;\n      }\n    }  "),X=Object(j.h)("pre","  var primesMonad = new MonadState('primesMonad', [3, '', 3, [2,3]], primes_state);\n\n  var fibs_state = function fibs_state(ar) {\n    var a = ar.slice();\n    while (a[3].length < a[2]) {\n      a = [a[1], a[0] + a[1], a[2], a[3].concat(a[0])];\n    }\n    return a\n  }  "),ee=Object(j.h)("pre","  var tr3 = function tr (fibsArray, primesArray) {\n    var bound = Math.ceil(Math.sqrt(fibsArray[fibsArray.length - 1]))\n    var primes = primesArray.slice();\n    if (primesArray.slice(-1)[0] >= bound) {\n      primes = primesArray.filter(v => v <= bound);\n    }\n    var ar = [];\n    var fibs = fibsArray.slice(3);\n    fibs.map (v => {\n      if (primesArray.every(p => (v % p || v === p))) ar.push(v);\n    })\n    return [fibsArray, primes, ar]\n  }  "),te=Object(j.h)("pre","    const fibKeyPress5$ = sources.DOM\n      .select('input#fib92').events('keyup');\n\n    var primeFib$ = fibKeyPress5$.map(e => {\n      workerB.postMessage(e.target.value)\n    });\n\n    const workerB$ = sources.WWB.map(m => {\n      console.log('In workerB$ stream in the main thread. m is ', m );\n      mMres.ret(m.data)\n      .bnd(v => mM36.ret('Asynchronous addendum. The largest computed ' +\n        'prime Fibonacci number is ' + v[2].split(',')[v[2].split(',').length - 1]), '$mM36')\n      primesMonad.s = JSON.parse(JSON.stringify(primesMonad.s));\n      primesMonad.a = JSON.parse(JSON.stringify(primesMonad.a));\n      primesMonad.s = m.data[3];\n      primesMonad.a = m.data[3][3];\n    });  "),ne=Object(j.h)("pre","    var fpTransformer = function fpTransformer(x, s) {\n      var a = Math.ceil(Math.sqrt(x[3].slice(-1)[0]));\n      var m = primesMonad.run([s,a]);\n      var ar = [];\n      x[3].map(function (v) {\n        if (m.s[3].filter(x => x <= v).every(function (p) { return (v % p || v == p); }))\n          ar.push(v);\n      });\n      return [x[3].join(', '), m.s[3].slice(-1).pop(), ar.join(', '), m.s];\n    };   "),re=Object(j.h)("pre","  var factorsMonad = new MonadState('factorsMonad', [[], [], 2, []], factor_state);\n\n    function factor_state(v) {\n      v[3].map(function (p) {\n        if (v[2] / p === Math.floor(v[2] / p)) {\n            v[0].push(p);\n        }\n      });\n      return v;\n    }  "),oe=Object(j.h)("pre","  var factorsPress$ = sources.DOM\n        .select('input#factors_1').events('keydown');\n\n    var factorsAction$ = factorsPress$.map(function (e) {\n      var factors = [];\n      mMfactors3.ret('');\n      if (e.keyCode === 13) {\n        var num = e.target.value\n        if (!num.match(/^[0-9]+$/)) {\n          mMfactors3.ret('This works only if you enter a number. ' + num + ' is not a number');\n        }\n        else {\n          factors = primesMonad.run([primesMonad.s[0], [], num, primesMonad.a])\n          .bnd(s => prFactTransformer3(s, num));\n          mMfactors.ret(\"The prime factors of \" + num + \" are \" + factors.join(', '));\n        }\n      }\n    });  "),ae=(A=Object(j.h)("pre","    var MonadSet = function MonadSet(set, str) {\n        var this = this;\n        this.id = str;\n        this.s = new Set();\n    };\n\n    var s = new Set();\n\n    var sMplayers = MonadSet(s, 'sMplayers'); // holds currently online players  "),Object(j.h)("pre",'      var promise = function promise(x, t, mon, args) {\n          return (new Promise((resolve) => {\n            setTimeout(function() {\n              resolve(eval("mon.ret(x).bnd(" + args + ")"))   // eval! Get over it, Douglas.\n            },t*1000  );\n          }));\n        };  ')),ie=Object(j.h)("pre",'  m.ret(3).bnd(promise, 2, m, "cube").then(data => m.ret(data.x).bnd(add, 15, m))  '),se=Object(j.h)("pre","  const timeoutClicks$ = sources.DOM.select('#timeout').events('click')\n      const timeoutAction$ = timeoutClicks$.map(() => {\n        document.getElementById('timeout2').innerHTML = ''\n        document.getElementById('timeout3').innerHTML = ''\n        m.ret(3).bnd(m.ret)\n          .bnd(display, 'timeout2', 'm) is ' + ' ' + m)).bnd(m.ret)\n          .bnd(timeout2, 1, m, [() => m\n          .bnd(cube).bnd(m.ret)\n          .bnd(display, 'timeout2', 'm) is ' + ' ' + m)).bnd(m.ret)\n          .bnd(timeout2, 2, m, [() => m\n          .bnd(add, 15).bnd(m.ret)\n          .bnd(display, 'timeout2',  'm) is ' + ' ' + m)).bnd(m.ret)\n          .bnd(display, 'timeout3', 'The meaning of everything was computed to be' + ' ' + m))\n        ])]);\n      });\n    });  "),ce=Object(j.h)("pre","  var timeout2 = function timeout (x, t, m, args) {\n      setTimeout(function () {\n        mMZ9.release();\n      }, t * 1000  );\n      return mMZ9.bnd(() => m.bnd(... args))\n    };  "),ue=Object(j.h)("pre","\n               ret('m1Val','m1')\n               m1.x === 'm1Val'   // true\n               ret('m2Val', 'm2')\n               m2.x === 'm2Val'   // true\n\n               m1.bnd(m2.ret)\n               m2.x === 'm1Val' // true\n               m2.x === 'm2Val'   // still true\n\n               m1.ret('newVal')\n               m1.bnd(v => ret(v, 'm2'))\n               m2.x === 'newVal'  // true\n               m2.x === 'm1Val' // true   still the same  "),de=Object(j.h)("pre",'\n    var m = new Monad(v, "m");\n    ret(v, "m");\n               '),le=Object(j.h)("pre",'  var c = m.ret(0).bnd(add,3).bnd(cube).bnd(log, "The values of m\'s and c\'s\n    x attributes are " + m.x + " and " + c.x + " respectively." )   '),pe=Object(j.h)("pre","   Output: The values of m's and c's x attributes are 0 and 27 respectively.  "),he=Object(j.h)("p",' Note: m\'s x attribute keeps its initial value of 0 because each computation creates a fresh instance of Monad with id === "default". In the next example, m\'s x attribute becomes the computation result due to the addition of ".bnd(m.ret)". '),fe=Object(j.h)("pre",'  var c = m.ret(0).bnd(add,3).bnd(cube).bnd(m.ret).bnd(log,\n     "The values m\'s and c\'s x attributes are " + m.x + " and " + c.x + " respectively.") '),me=Object(j.h)("pre","   Output: The values of m's and c's x attributes are 27 and 27 respectively.  "),be=Object(j.h)("pre",'  m.ret(0).bnd(add,3).bnd(m2.ret).bnd(cube,m3).bnd(m3.ret)\n    .bnd(log,"m), m2.x, and m3.x are  " + m.x + ", " + m2.x + " and " +\n    m3.x + " respectively. "); '),ve=Object(j.h)("pre","   Output: m.x and m2.x and m3) are  0, 3 and 27 respectively.  "),ge=Object(j.h)("pre","    var equals = function equals (mon1, mon2) {\n        if (mon1.id === mon2.id && mon1) === mon2)) return true;\n        else return false\n      }  "),ye=Object(j.h)("pre",'    function fmap (x, g, id) {window[id] = new Monad(g(x), id); return window[id]}\n\n      var qS1 = function qS1 (a, b, c) {\n        let n = (b*(-1)) + (Math.sqrt(b*b - 4*a*c));\n        if (n != n) {\n          return "No solution";\n        }\n        return n/(2*a);\n      }\n\n      var qS2 = function qS2 (a, b, c) {\n        let n = (b*(-1)) - (Math.sqrt(b*b - 4*a*c));\n        if (n != n) {\n          return "No solution";\n        }\n        return n/(2*a);\n      }\n\n      var qS4 = function qS4 ([x,y,z]) {\n        let [a,b,c] = [x,y,z]\n        return [qS1(a,b,c), qS2(a,b,c)]\n      }\n\n      m.ret([12,12,-144])\n\n      m.bnd(fmap, qS4, "temp").bnd(lg)   logs [3, -4] '),xe=Object(j.h)("pre",'    function opM (a, op, b, id) {\n        window[id] = new Monad(eval(a.x + op + b.x), id);\n        return window[id];\n      }\n\n      m1.ret(42)\n\n      m2.ret(7)\n\n      opM(m1, "%", m2, "ok").bnd(lg)  logs 0\n\n      opM(m1, "+", m2, "ok").bnd(lg)  logs 49  '),_e=(Object(j.h)("pre","    var messageMonad = new MonadState('messageMonad', messages, messages, message_state);\n\n      function message_state(v) {\n        var ar = v[0].concat(v[3]);\n        return [ v[0], [], [], ar ];\n      };  "),Object(j.h)("pre","  function test3 (a) {\n      var b = [];\n      for (let i of [0,1,2,3]) {\n        b[i] = (a[i] === undefined) ? 'none' : 'inline'\n      }\n      return ret(b);\n    }\n\n    pMnums.bnd(test3).bnd(pMstyle.ret);  ")),Me=Object(j.h)("pre","  mMZ10.bnd( () => {\n      pMnums.ret([v[3], v[4], v[5], v[6]]).bnd(test3).bnd(pMstyle.ret)\n      travMonad.run([ [v[3], v[4], v[5], v[6]], v[7], v[8] ]);\n      pMscore.ret(v[7]);\n      pMgoals.ret(v[8]) });  "),we=(Object(j.h)("pre.turk5","    function test10 () {\n        m.ret(4).bnd(mult,100,'$m1')\n        .bnd(square,'$m2')\n        .bnd(add,-m2.x + 3,'$m3')\n        .bnd(mult,100,'$m4')\n        .bnd(square,'$m5')\n        .bnd(add,m2.x,'$m6')\n        .bnd(sqroot,'$m7')\n        .bnd(() => {\n          mMar10.ret([m, m1, m2, m3, m4, m5, m6, m7]);\n          console.log('The square root of the sum of ', m1.x,\n            ' squared and ', m4.x, ' squared is ', m7.x); });\n        return mMar10;\n      }\n\n      function test11 () {\n        m.ret(4).bnd(mult,100,'$m1')\n        .bnd(square,'$m2')\n        .bnd(add,-m2.x + 3,'$m3')\n        .bnd(mult,100,'$m4')\n        .bnd(square,'$m5')\n        .bnd(add,m2.x,'$m6')\n        .bnd(sqroot,'$m7').bnd(m.ret)\n        .bnd(() => {\n          mMar11.ret([m, m1, m2, m3, m4, m5, m6, m7]);\n          console.log('The square root of the sum of ', m1.x,\n            ' squared and ', m4.x, ' squared is ', m7.x); });\n        return mMar11;\n      }  "),Object(j.h)("pre","  var rollClick$ = sources.DOM\n    .select('#roll').events('click');\n\n  var rollClickAction$ = rollClick$.map(() => {\n    var a = gameMonad.fetch0().valueOf() - 1;    // Lose one point for clicking ROLL.\n    var b = gameMonad.fetch1().valueOf();\n    socket.send(`CA#$42,${pMgroup.x},${pMname.x},6,6,12,20,${a},${b}`);\n  });\n  \n  var backClick$ = sources.DOM\n      .select('#back.tao100').events('click');\n\n  var backAction$ = backClick$.map(() => {\n    if (gameMonad.s[1] > 0) {\n      gameMonad.dec(); \n    }\n  });\n\n  var forwardClick$ = sources.DOM\n      .select('#ahead.tao1').events('click')\n\n  var forwardAction$ = forwardClick$.map(() => {\n    if (gameMonad.s[1] < gameMonad.s[0].length - 1) {\n      gameMonad.inc();\n    }\n  }); ")),Oe=Object(j.h)("pre","    function MonadEr (val, ID, er = []) {\n          var test;\n          var arr = arr = [];\n          this.x = val;\n          this.e = er;\n          this.id = ID;\n          this.getx = function getx (x) {return this.x};\n          this.bnd = function (f, ...args) {\n            var args = args;\n            if (f === 'clean3' || f === clean3) {\n              this.e = [];\n              window[this.id] = new MonadEr(this.x, this.id, []);\n              return window[this.id];\n            }\n          if (this.e.length > 0) {\n            console.log('BYPASSING COMPUTATION in MonadEr instance', this.id, f,\n                '.  PROPAGATING ERROR:',  this.e[0]);\n            return this;\n          }\n\n          if (args.length > 0) {\n            arr = args.filter(v => !(typeof v === 'string' && v.charAt() === '$' && \n                v.slice(0,4) !== 'Math'))\n\n            arr.map(v => {\n              test = testP(v, this.id)\n              if (test === 'STOP') {\n                console.log('\"STOP\" returned from testP. Ending code execution in ',\n                    this.id, '.' )\n                this.e.push('STOP');\n                return this;\n              }\n            });\n          }\n          if (test !== \"STOP\") {\n          try {\n            var testId = testPrefix(args, this.id);\n            var ar = arr.map(v => eval(v))\n            var m = eval(f)(this.x, ...ar)\n            var id = testPrefix(ar, this.id);\n            window[testId] = new MonadEr(m.x, testId, []);\n            return window[testId];\n            }\n            catch(error) {\n              this.e.push('STOP -- Execution Aborted. ');\n              console.log(f, 'ERROR in ',id,error,' No further computations will be attempted');\n              return this;\n            }\n          }\n          else {\n            this.e.push('STOP -- Execution Aborted. ');\n            console.log(f, 'ERROR \"STOP\" returned from testP. No further ' +\n                'computations will be attempted');\n            return this;\n          }\n        }\n        this.ret = function (a) {\n          window[this.id] = new MonadEr(a, this.id, []);\n          return window[this.id];\n        }\n      };\n\n    function testPrefix (x,y) {\n      var t = y;\n      var s;\n      if (Array.isArray(x)) {\n        x.some(v => {\n          if (typeof v === 'string' && v.charAt() === '$') {\n             t = v.slice(1);\n          }\n        })\n      }\n      return t;\n    }\n\n    function testP (x,id) {\n        if ( eval('typeof ' + x) === 'undefined') {\n          console.log(`............... ERROR parameter ${x} is not defined`);\n          window[id].e = [`${x} is not defined`]\n          return 'STOP';\n        }\n        if (eval(x) !== eval(x)) {\n          console.log(`............... ERROR parameter ${x} is not a number`);\n          window[id].e = [`${x} is not a number`];\n          return 'STOP';\n        }\n        mMZ12.release([]);\n        return []\n    }\n\n    function ret3(v, id = 'generic') {\n        window[id] = new MonadEr(v, id, []);\n        return window[id];\n      }\n\n    function add3(x, y) {\n        return ret3(x*1 + y*1);\n      }\n\n    function cube3(x) {\n        return ret3(x*x*x);\n    }\n\n    function clean3 (x, id) {\n      window[id] = new MonadEr(x, id, []);\n      return window[id];\n    }    "),je=Object(j.h)("pre","    var t = new MonadEr(0,'t', []);\n    var t2 = new MonadEr(0,'t2', []);\n    var t3 = new MonadEr(0,'t3', []);\n    console.log('Values of t, t2, and t3', t.x,t2.x,t3.x)\n    console.log(\"executing t.bnd('add3',3,'$t2').bnd(cube3, '$t3') \");\n    t.bnd('add3',3,'$t2').bnd(cube3, '$t3')\n    console.log('Values of t, t2, and t3', t.x,t2.x,t3.x)\n    var t = new MonadEr(0,'t', []);\n    var t2 = new MonadEr(0,'t2', []);\n    var t3 = new MonadEr(0,'t3', []);\n    console.log('Values of t, t2, and t3', t.x,t2.x,t3.x)\n\n    console.log(\"executing t.bnd('add3','three', '$t2').bnd(cube3, '$t3') \" );\n    t.bnd('add3','three','$t2').bnd(cube3, '$t3')\n    console.log('Values of t, t2, and t3', t.x,t2.x,t3.x)\n\n    console.log( 't.bnd(clean3)' );\n    t.bnd(clean3);\n\n    console.log(\"executing t.bnd('add3', 'Math.sqrt(-1)', '$t2').bnd(cube3, '$t3') \" );\n    t.bnd('add3','Math.sqrt(-1)','$t2').bnd(cube3, '$t3')\n    console.log('Values of t, t2, and t3', t.x,t2.x,t3.x)\n    console.log( 't.bnd(clean3)' );\n    t.bnd(clean3);\n    console.log(\"executing t.bnd('addd3',3,'$t2').bnd(cube3, '$t3') \");\n    t.bnd('addd3',3,'$t2').bnd(cube3, '$t3')\n    console.log('Values of t, t2, and t3', t.x,t2.x,t3.x)    "),ke=Object(j.h)("pre","    function atest () {\n      ret(2,'a')\n      .bnd(add,1)\n      a.bnd(v => ret(v*100,'b'))\n      .bnd(v2 => ret(v2*v2,'c')\n      .bnd(v3 => ret(4,'d')\n      .bnd(v4 => ret(v4*100))\n      .bnd(v5 => ret(v5*v5,'e')\n      .bnd(v6 => ret(Math.sqrt(v6+v3),'f')\n      .bnd(v7 => console.log('The square root of the sum of',v2,'and',v5,'is', v7,'.'))))))\n      return [a,b,c,d,e,f]\n    }\n\n    console.log('// Now setting a, b, c, d, e and f to 7 and ' +\n        'logging a.x, b.x, c.x, d.x, e.x, and f.x.)');\n    ret(7,'a');ret(7,'b');ret(7,'c');ret(7,'d');ret(7,'e');ret(7,'f');\n    console.log(a.x, b.x, c.x, d.x, e.x,f.x)\n    console.log('// Now running atest and making demoAr a reference to its return value. ');\n    demoAr = atest();\n    console.log('// Now logging a.x, b.x, c.x, d.x, e.x, and f.x.');\n    console.log(a.x, b.x, c.x, d.x, e.x,f.x)\n    console.log('// Now logging demoAr.map(v => v.x).join(\", \").');\n    console.log(demoAr.map(v => v.x).join(', '));\n    console.log('// Now setting a, b, c, d, e and f to 6 and ' +\n        'logging a.x, b.x, c.x, d.x, e.x, and f.x.)');\n    ret(6,'a');ret(6,'b');ret(6,'c');ret(6,'d');ret(6,'e');ret(6,'f');\n    console.log(a.x, b.x, c.x, d.x, e.x,f.x)\n    console.log('// Now logging demoAr.map(v => v.x).join(\", \").');\n    console.log(demoAr.map(v => v.x).join(', '));\n    console.log('// The monads in DemoAr were not mutated or replaced ' +\n        'when monads with the same ' );\n    console.log('// names (a, b, c, d, and e) updated to 6, 6, 6, 6, 6, 6 by  ' +\n        'using their bnd() methods. ');\n    }  "),Se=(Object(j.h)("pre.green2",'    var worker = new Worker("worker.js");\n\n    function workerDriver () {\n      return xs.create({\n        start: listener => { worker.onmessage = msg => listener.next(msg)},\n        stop: () => { worker.terminate() }\n      });\n    };  '),Object(j.h)("pre.green2","    const worker$ = sources.WW.map(v => {\n      console.log('$essage from worker: ', v );\n      v.preventDefault();\n      mMZ21.bnd(() => {\n        mM11.ret(v.data[1]);\n        });\n      mMZ22.bnd(() => {\n        mM12.ret(v.data[1])\n      });\n      mMZ23.bnd(() => {\n        mM13.ret(v.data[1])\n      });\n      mMZ24.bnd(() => {\n        mM14.ret(v.data[1])\n      });\n      mMZ25.bnd(() => {\n        window['primesMonad'] = new MonadState('primesMonad', v.data[1], primes_state);\n      });\n      next(v.data[0], 'CA#$41', mMZ21)\n      next(v.data[0], 'CB#$41', mMZ22)\n      next(v.data[0], 'CC#$41', mMZ23)\n      next(v.data[0], 'CD#$41', mMZ24)\n      next(v.data[0], 'CE#$41', mMZ25)\n    });   ")),Te=Object(j.h)("pre.red0","    function workerBDriver () {\n      return xs.create({\n        start: listener => { workerB.onmessage = msg => listener.next(msg)},\n        stop: () => { workerB.terminate() }\n      });\n    };    "),$e=Object(j.h)("pre","    function MonadState(g, state, p) {\n      this.id = g;\n      this.s = state;\n      this.process = p;\n      this.a = this.s[0];\n      this.bnd = (func, ...args) => func(this.s, ...args);\n      this.run = ar => {\n        var ar2 = this.process(ar);\n        this.s = ar2;\n        self[this.id] = this;   // \"self\" is the global context in a worker.\n        return self[this.id];\n      }\n    };\n\n    var primesMonad = new MonadState('primesMonad', [3, [2,3], 3, [2,3]], primes_state);\n\n    function primes_state(x) {\n      var state = x[0].slice();\n      var top = state[2];\n      var primes = state[3];\n      var newtop = x[1];\n      if (newtop == state[0] || newtop == top) {\n        return state;\n      }\n\n      else if (newtop < top) {\n        var temp = primes.filter(v => v <= newtop);\n        var q = temp.indexOf(temp[temp.length - 1]);\n        temp.push(primes[q + 1]);\n        return [primes[q+1], temp, top, primes];\n      }\n\n      else {\n        while (true) {\n          if (primes.every(e =>  (top / e != Math.floor(top / e))))  {\n            primes.push(top);\n            if (top > newtop) {  // Nesting assures that the new top is prime.\n              return [top, primes, top, primes];\n            }\n          };\n          top += 2;\n          console.log('In primes_state. top is >>>>> ', top );\n        }\n      }\n    };    "),Ce=Object(j.h)("pre","\n\nonmessage = function(ar) {\n      importScripts('script2.js');\n      var num = ar.data[1];\n      var s = ar.data;\n      s[2] = num;\n      primesMonad.run(s)\n      .bnd(s2 => fact(s2)\n      .bnd(factors => postMessage([\"The prime factors of \" + num +\n        \" are \" + factors.join(', '), s2])));\n    }    "),Ee=Object(j.h)("pre.red0","    onmessage = function(ar) {\n      console.log('In workerC.js.  ar is ', ar );\n      importScripts('script2.js');\n      execP(ar.data[0], ar.data[1] + 1)\n      .bnd(primeState => pfactors(primeState, ar.data[1])\n      .bnd(factors => postMessage([\"The prime factors of \" + ar.data[1] +\n        \" are \" + factors.join(', '), primeState])));\n    }\n\n    function execP (state, num) {\n      var top = state[2];\n      var top2 = state[2];\n      var primes = state[3];\n      var primes2 = state[3]\n      var result;\n      if (num == state[0] || num == top) {\n        result = new MonadState('primesMonad', state);\n      }\n\n      else if (num < top) {\n        var temp = primes.filter(v => v <= num);\n        var q = temp.indexOf(temp[temp.length - 1]);\n        temp.push(primes[q + 1]);\n        result = new MonadState('primesMonad', [primes[q+1], temp, top, primes]);\n      }\n\n      else {\n        while (top2 <=  num ) {\n          if (primes2.every(e =>  (top / e != Math.floor(top / e))))  {\n            primes.push(top);\n            top2 = top;\n          };\n          top += 2;\n        }\n        result = new MonadState('primesMonad', [top2, primes, top2, primes] );\n      }\n      return result;\n    };\n\n    function execLCM (a, b, primeState) {\n      pfactors(primeState, a).bnd(x => {\n        pfactors(primeState, b).bnd(y => {\n          postMessage([primeState, [a, b, lcm(x,y)]])\n        })\n      })\n    }  "),Ae=Object(j.h)("pre","    onmessage = function(ar) {\n      var n = 0;\n      importScripts('script2.js');\n      var res;\n      var a = ar.data[1][0];\n      var b = ar.data[1][1];\n      var primeState = ar.data[0];\n      var decompState = ar.data[2];\n      var max = a > b ? a : b\n      var c = ar.data[2][3];\n      var d = c.length;\n      var diff = max - d;\n      execP(ar.data[0], max)\n      .bnd(primeState => execLCM(a, b, primeState))\n    }\n\n    function execLCM (a, b, primeState) {\n      pfactors(primeState, a).bnd(x => {\n        pfactors(primeState, b).bnd(y => {\n          postMessage([primeState, [a, b, lcm(x,y)]])\n        })\n      })\n    }  "),De=Object(j.h)("pre","    const workerD$ = sources.WWD.map(m => {\n      console.log('Back in the main thread. m is', m );\n      mMfactors6.ret(m.data[0]);\n      window['primesMonad'] = new MonadState('primesMonad', m.data[1], primes_state);\n      mMfactors8.ret(m.data[2]);\n    });  "),Ie=Object(j.h)("pre","    function execP (x) {\n      var state = primesMonad.s.slice();\n      var top = state[2];\n      var top2 = state[2];\n      var primes = state[3];\n      var primes2 = state[3].filter(v => v <= top)\n      if (x == state[0] || x == top) {\n        return (new MonadState('primesMonad', state, primes_state));\n      }\n\n      else if (x < top) {\n        var temp = primes.filter(v => v <= x);\n        var q = temp.indexOf(temp[temp.length - 1]);\n        temp.push(primes[q + 1]);\n        return (new MonadState('primesMonad', [primes[q+1], temp, top, primes], primes_state));\n      }\n\n      else {\n        while (top2 <=  x ) {\n          if (primes2.every(e =>  (top / e != Math.floor(top / e))))  {\n            primes.push(top);\n            top2 = top;\n          };\n          top += 2;\n        }\n        return (new MonadState('primesMonad', [top, primes, top, primes], primes_state));\n      }\n    };    "),Pe=Object(j.h)("div",[Object(j.h)("h3"," Doing Things The Hard Way "),Object(j.h)("p"," The next two demonstration generate the same results as the previous two; but in doing so, they also generate and add to a shared and persistent (for the duration of the browser session) array of arrays of prime decompositions of the positive integers. The array is the value of decompMonad.s. It is re-used as the starting point for generating larger arrays, or as a sort of lookup table if a required prime decomposition has already been computed. The index of an array is the number whose decomposition is in the array so, for example, array-of-arrays[12] is [2,2,3]. The actual code will be shown later and is also available at the Github repository. ")]),Ne=Object(j.h)("div",[Object(j.h)("p",' The next demonstration shares the array of arrays of prime decompositions with the previous demonstration. That array is kept in a MonadState instance named "decompMonad". Computing prime decompositions of numbers that end up being ignored is clearly inefficient, so please bear in mind that a demonstration of a JS-monads way to keep mutable state in immutable, composable, globally accessable objects. '),Object(j.h)("label"," Enter two comma-separated integers here: "),Object(j.h)("input#factors_5b"),Object(j.h)("br"),Object(j.h)("br")]),Re=Object(j.h)("div",[Object(j.h)("h1","The Monads"),Object(j.h)("p"," The definition of Monad, which is the basic monad constructor, is a little complicated. It isn't intended as a puzzle, so a little explanation is in order. "),Object(j.h)("p",' The term "monad" will mean "instance of Monad". Monad could have been defined as a class, but the current definition suffices. '),Object(j.h)("p",' Monads are created by code such as "const m = new Monad("anything", "m")". The arguments will be the values of m.x and m.id. The first argument can be any Javascript value, such as string, array, or monad. The second argument should be the name of the monad. '),Object(j.h)("p",' A monad, say "m", can be replaced by another monad named "m" in the global space through the use of the method "ret()". It looks like m.x gets mutated, but that isn\'t what happens. Previously defined references to m retain their values, as demonstrated below: '),Object(j.h)("pre","var m = new Monad (5, 'm');\nvar arr = [m];\nvar p = m;\nm.ret(100);\nconsole.log(m.x, arr[0].x, p.x);\n// 100, 5, 5\n"),Object(j.h)("p"," In global scope (window in the browser), m.x changed to 100; but p and arr still refer to 5, the previous value of m.x. Similarly, when a monad uses its bnd() method to modify its x attribute, the change is seen globally, but nowhere else. Previous references to the monad remain stable, as this example illustrates: "),Object(j.h)("pre","var m = new Monad (5, 'm');\nvar arr = [m];\nvar p = m;\nm.bnd(add,95);\nconsole.log(m.x, arr[0].x, p.x);\n// 100, 5, 5\n"),Object(j.h)("p"," Had there been no reference to m, the previous instance would have been subject to removal by the garbage collector. "),Object(j.h)("p"," It is possible to mutate monads with code such as m.x = 888. That might be a good thing to do in a function with many recursions, but it seems like a misuse of monads. Monads are never mutated on this website. Object.freeze() is used to prevent mutation in the definition of primesMonad (shown below). "),Object(j.h)("p",' The bnd() method can leave the calling monad\'s global value unchanged while assigning a value (in the global space) to another previously defined monad, or to a freshly created monad. So regardless of whether or not "m2" is defined, m.ret(4).bnd(cube,"$m2") causes m.x === 4 and m2.x === 64 to both return true. '),Object(j.h)("pre",'m.ret(4).bnd(cube,"$m2")\nconsole.log(m.x, m2.x)   // 4 64\nm.ret(0).bnd(add,3,"$m2").bnd(cube,"$m3")\nconsole.log(m.x, m2.x, m3.x)  // 0 3 27\n'),Object(j.h)("p",' The definition of Monad (below) shows how bnd() checks to see if func(m.x, ...args) returns a monad. If it does, "testPrefix" looks for a pattern that matches "$val" in the arguments that were provided to m.bnd(func, ...args). If the pattern is found, the global space acquires a monad named "val" with val.x === func(m.x, ...args). If no monad named "val" previously existed, one is created. Otherwise, val\'s global definition gets superseded. val can be any sequence of characters that constitute a valid javascript identifier. '),Object(j.h)("p"," Instances of Monad facilitate changing values without mutation. They also provide a way to chain function calls. For example, m.ret(2).bnd(add, 1).bnd(cube) causes m.x === 27 to return true. This works because ret(), add, and cube all return monads when they are applied to m.x. The definition of add and cube are shown below and can be found in the Github repository. "),Object(j.h)("p"," If the three numbers from the previous sequence were all that we required, we could obtain them more efficiently by running: "),Object(j.h)("pre","var demoResult = ret(0).bnd(x => add(x, 3).bnd(y => cube(y).bnd(z => [x,y,z])));\nconsole.log('We started with', demoResult[0], \n    'and got', demoResult[1], 'and', demoResult[2]);\nThe console displays \"We started with 0 and got 3 and 27\"\n"),Object(j.h)("p",' Doing it that was leaves only one monad - the one named "temp" - for the garbage collector. It also eliminates concern about name collisions among the monads. There is little danger that a monad named "temp" is being used to store a value somewhere else in the application code. The temp monad is obviously not a monad for preserving values. The result could have been logged to the console or used in further computations without creating a reference to it.'),Object(j.h)("pre","ret(0).bnd(x => add(x, 3).bnd(y => cube(y).bnd(z =>\nconsole.log('We started with', x, 'and got', y, 'and', z))));\nThe console displays \"We started with 0 and got 3 and 27\"\n"),Object(j.h)("p"," More complex, multi-stage computations in sequenced monads are demonstrated later in this presentation. If such monads don't depend on information that exists outside of their scope, their effects in a running application are easier to grasp, and opportunities for unintended behavior in edge cases are minimized. Developers can gain further control and confidence in their applications by allowing only the last monad in any sequence to make changes in global scope. Code is easier to write and maintain when you can readily pinpoint a minimal number of places where an application's state gets updated. "),Object(j.h)("p"," So, with that out of the way, here are the definitions of Monad and testPrefix: "),Object(j.h)("h3"," Monad "),Object(j.h)("pre","  var Monad = function Monad(z = 42, g = 'generic') {\n    this.x = z;\n    this.id = g;\n    this.bnd = function (func, ...args) {\n      var m = func(this.x, ...args)\n      var mon;\n      if (m instanceof Monad) {\n        mon = testPrefix(args,this.id);\n        return window[mon] = new Monad(m.x, mon);\n      }\n      else return m;\n    };\n    this.ret = function (a) {\n      return window[_this.id] = new Monad(a,_this.id);\n    };\n  };\n\n  function testPrefix (x,y) {\n    var t = y;\n    var s;\n    if (Array.isArray(x)) {\n      x.some(v => {\n        if (typeof v === 'string' && v.charAt() === '$') {\n           t = v.slice(1, v.length);\n        }\n      })\n    }\n    return t;\n  }  ")]),Be=Object(j.h)("div",[Object(j.h)("h3","Variations on the Theme"),Object(j.h)("p"," Variations on the Monad theme serve diverse purposes. Instances of MonadState preserve computations so they won't have to be performed again. An instance of MonadState2 keeps a record of game play allowing players to back up and resume play from a previous display of numbers. It also keeps the current game parameters - score, goals, operator, selected numbers, and remaining numbers - in a single array which is stored in the archive whenever a new state is created. MonadItter instances are used to parse websockets messages and organize the callbacks neatly. MonadEr catches NaN and prefents crashes when undefined variables are encountered. I defined a message emitting monad but it seemed useless in this Cycle application where reactivity is pervasive. When you want to emit and listen for messages, it is better to build a driver and merge its stream of messages into the application cycle. "),Object(j.h)("p"," The various monad constructors demonstrate a way of encapsulating procedures and state in chainable objects. You might incorporate Monad or one of the other constructors presented here in your application, but I think the thing that is most valuable is the general concept. I prefer Cycle.js, but I think the monads might make Node, React and some of the other frameworks more manageable. "),Object(j.h)("h3","Computations"),Object(j.h)("p"," Computations are easy to link if each result is returned in an instance of Monad. Here are a few examples of functions that return instances of Monad: "),Object(j.h)("pre","  function ret(v, id = 'temp') {\n      window[id] = new Monad(v, id);\n      return window[id];\n    }\n\n    function cube (v, id) {\n      return ret(v * v * v);\n    };\n\n    function add (x, b) {\n      return ret(parseInt(x,10) + parseInt(b,10) );\n    };\n\n    function log(x,y) {\n        console.log(y)\n        return ret(x);\n    };  "),Object(j.h)("p",' The "$" prefix provides control over the destination of computation results. In the following example, m1, m2, and m3 have already been declared. Here is a comparison of the results obtained when the "$" prefix is used and when it is omitted: '),Object(j.h)("pre","    m1.ret(7).bnd(m2.ret).bnd(m3.ret)  // All three monads get the value 7.\n    m1.ret(0).bnd(add,3,'m2').bnd(cube,'m3')  // 'm1', 'm2', and 'm3' are ignored"),Object(j.h)("pre","    Result: m1.x === 27\n            m2.x === 7\n            m3.x === 7  "),Object(j.h)("pre","    m1.ret(0).bnd(add,3,'$m2').bnd(cube,'$m3')   "),Object(j.h)("pre","    Result: m1.x === 0\n            m2.x === 3\n            m3.x === 27  "),Object(j.h)("p",' If the prefix "$" is absent, bnd() ignores the string argument. But when the "$" prefix is present, m1 retains its initial value, m2 retains the value it gets from from adding m\'s value (which is 0) to 3, and m3.x is the result of applying "cube" to m2.x. Both forms could be useful. '),Object(j.h)("p"," The following example shows lambda expressions sending variables v1 and v2 through a sequence of computations and v3 sending the final result to the string that is logged. It also shows monads a, b, c, d, e, f, and g being updated and preserved in an array that is not affected by further updates. That is because calling the ret() method does not mutate a monad; it creates a fresh instance with the same name. Here is the example, shown in a screen shot of the Chrome console:. "),Object(j.h)("img.image",{props:{src:"demo_000.png"}}),Object(j.h)("h3"," The Monad Laws "),Object(j.h)("p",' In the following discussion, "x === y" signifies that the expression x === y returns true. Let J be the collection of all Javascript values, including functions, instances of Monad, etc, and let F be the collection of all functions mapping values in J to instances of Monad with references (names) matching their ids; that is, with window[id] === m.id for some id which is a valid es2015 variable name. The collection of all such instances of Monad along and all of the functions in F is called "M". For any instances of Monad m, m1, and m2 in M and any functions f and g in F, the following relationships follow easily from the definition of Monad: '),Object(j.h)("div","Left Identity "),Object(j.h)("pre","    m.ret(v, ...args).bnd(f, ...args).x === f(v, ...args).x\n    ret(v, ...args).bnd(f, ...args).x === f(v, ...args).x\n    Examples: m.ret(3).bnd(cube).x === cube(3).x  Tested and verified\n    ret(3).bnd(cube).x === cube(3).x     Tested and verified\n    Haskell monad law: (return x) >>= f ≡ f x  "),Object(j.h)("div#discussion"," Right Identity  "),Object(j.h)("pre","    m.bnd(m.ret) === m      Tested and verified\n    m.bnd(m.ret) === m   Tested and verified\n    m.bnd(ret) === m  Tested and verified\n    Haskell monad law: m >>= return ≡ m "),Object(j.h)("div"," Commutivity  "),Object(j.h)("pre","    m.bnd(f1, ...args).bnd(f2, ...args).x === m.bnd(v => f1(v, ...args).bnd(f2, ...args)).x\n    Example: m.ret(0).bnd(add, 3).bnd(cube).x ===\n    m.ret(0).bnd(v => add(v,3).bnd(cube)).x  Tested amd verified\n    Haskell monad law: (m >>= f) >>= g ≡ m >>= ( \\x -> (f x >>= g) ) "),Object(j.h)("a",{props:{href:"#top"}},"Back To The Top"),Object(j.h)("h3"," Disussion "),Object(j.h)("span.tao"," The Haskell statement "),Object(j.h)("span.turk6","f ≡ g"),Object(j.h)("span",' means that f x == g x for all Haskell values x of the appropriate type. That is the test applied to Javascript expressions in the "Monad Laws" section (above). Neither the == nor the === operator would provide useful information about the behavior of instances of Monad, which are objects. Those operators test objects for location in memory. If the left and right sides of predicates create new instances of m, then the left side m and the right side m wind up in different locations in memory. So we expect m.ret(3) === m.ret(3) to return false, and it does. The question we want answered is the question ≡ answers in Haskell: Can the left and right sides be substituted for one another and still yield the same results.'),Object(j.h)("br"),Object(j.h)("br"),Object(j.h)("span.tao",' The Haskell programming language borrowed the term "monad" from the branch of mathematics known as category theory. This was apropriate because Haskell monads, along with the function return and the operator >>=, behave quite a bit like category theory monads, and the inspiration for them came out of category theory. For Haskell monads to actually be category theory monads, they would need to reside in a category-theory category. They don\'t, although the Haskell mystique tends to give newcommers to the language the impression that they do. See '),Object(j.h)("a",{props:{href:"http://math.andrej.com/2016/08/06/hask-is-not-a-category/",target:"_blank"}},"Hask is not a category."),Object(j.h)("br"),Object(j.h)("p"," Research into ways of defining a Haskell category appears to be ongoing. It involves tinkering with special constraints, omitted features, and definitions of morphisms that are not Haskell functions. When a definition of the category is established, Haskell monads are then shown to be, in some contrived context, category-theory monads. Devising such schemes are instructive academic exercises, but I don't think they can provide anything useful to programmers working on applications for industry, commerce, and the Internet. "),Object(j.h)("p"," However, imitating definitions and patterns found in category theory, as Haskell does in defining the functor, monoid, and monad type classes, was a stroke of genius that vastly enriched the Haskell programming language and brought it into the mainstream as a viable alternative to java, c++, etc.  This website runs efficiently on a Haskell websockets server. The modified Haskell Wai Websockets server has proven to be extraordinarily easy to maintain as new requirements become necessary. For example, modifying the server to send chat messages and shared todo lists only to members of the same group was a trivial task. It required just a tiny amount of pattern-matching code. Category theory patterns make the Haskell interface to the Cycle front end robust, versitile, and reliable. Those are the qualities that I strive to emulate with JS-monads.")]),qe=(Object(j.h)("pre","\n"),Object(j.h)("div",[Object(j.h)("h3",{style:{textAlign:"center"}}," A Few Words About Cycle.js "),Object(j.h)("p"," Opinionated frameworks tend to annoy and frustrate me. Cycle, on the other hand, is easy on my mind. I love it."),Object(j.h)("p"," In the early stages of developing this website, I had functions that mutated global variables. Sometimes, I directly mutated values in the DOM with statements like \"document.getElementById('id').innerHTML = newValue\". Cycle didn't object. Over time, mutating variables and manhandling the DOM gave way to gentler techniques.  "),Object(j.h)("p"," Handling events is a breeze. Drivers eliminate the need to name event emitters or observers. Driver output in main() is available to any function or block of code that is interested. The result of any callback is in an event in a stream of events that automatically merge with the other streams that define main's return value, which is a blueprint for the updated user interface. This is breathtakingly elegant. main() is called only once, when the application loads. After that, the application hums like an enchanted perpetual motion machine. "),Object(j.h)("pre","function workerDriver () {\n  return xs.create({\n    start: listener => { worker.onmessage = msg => listener.next(msg)},\n    stop: () => { worker.terminate() }\n  });\n};\n\nfunction websocketsDriver() {\n  return xs.create({\n    start: listener => { socket.onmessage = msg => listener.next(msg)},\n    stop: () => { socket.close() }\n  });\n};   ")])),Fe=Object(j.h)("div",[Object(j.h)("p",' The next five demonstrations involve computations of prime numbers, Fibonacci numbers, prime Fibonacci numbers, and prime factors of numbers. Several instances of a constructor named "MonadState" (simple and not an ES6 class) are utilyzed, three of which maintain and share share an array of prime numbers maintained in the MonadState instance named "primesState". An array of arrays of prime factors of numbers is maintained in MonadState instance "decompMonad", which is shared by the fourth and fifth examples in this series of async examples. Here is the definition of MonadState: '),Object(j.h)("pre","\n    function MonadState(g, state) {\n      this.id = g;\n      this.s = state;\n    }    "),Object(j.h)("p"," The first demonstration displays the Fibonacci series up to an upper bound entered in the browser by a user. It also displays a list of the prime Fibonacci numbers in the list of Fibonacci numbers, along with the largest prime number that was generated during a computation. "),Object(j.h)("p"," The progress display confirmed that it took almost no time to generate the list of Fibonacci numbers or to select the ones that are prime. The bottleneck was computing the primes. To see the effectiveness of saving computed prime numbers, I deleted three zeros and then added them back again. At 100,000,000,000,000 and 1,000,000,000,000, the lag times were  67 microseconds and 124 microseconds, respectively. The display, in a brief flash, showed that those delays occorred mostly during the selection of prime Fibonacci numbers from the array of Fibonacci numbers. Firefox's performance was comparable to Chrome's. I entered 1,000,000.000,000,000 in the Firefox browser, and after approximately 35 seconds five additional Fibonacci numbers appeared, topped by 806,515,533,049,393. The largest prime number that had to generated to achieve that result was 28,399,249. A total of 2,640,405 prime numbers were generated. "),Object(j.h)("p"," The demonstrations do not block the main execution thread. Computations are performed in web workers and the results are stored for further use in the main thread. "),Object(j.h)("span"," According to the "),Object(j.h)("a",{props:{href:"https://oeis.org/A005478",target:"_blank"}},"The On-Line Encyclopedia of Integer Sequences "),Object(j.h)("span"," these are the first eleven proven prime Fibonacci numbers:"),Object(j.h)("span.red"," 2, 3, 5, 13, 89, 233, 1597, 28657, 514229, 433494437, 2971215073, and 99194853094755497. "),Object(j.h)("span"," The eleventh number, 2971215073, is as far as you can go on an ordinary desktop computer. "),Object(j.h)("br"),Object(j.h)("p"," The circles below are red during the computation of A. Fibonacci numbers, B. Prime numbers, and C. prime fibonacci numbers. A, B, and C are shown from left to right. On my desktop computer, the middle circle in the red state starts bcoming briefly discernable a 10,000,000, which is where the largest attainable prime Fibonacci number (2971215073), first appears. The lag time in the Chrome browser at 1,000,000,000,000,000 was a little over thirty-five seconds. After deleting and then replacing the last 0, the delay was under five seconds, demonstrating a significant benefit derived from retrieving previously generated prime numbers instead of computing them again. But once a large array of primes has been generated, lookup times for small number exceeds the time it would take to generate a fresh array of primes. When the square root of the number in the box is less than the largest prime number in primesMonad.s[3], the only circle that turns red is the right one, corresponding to picking out the prime Fibonacci numbers. "),Object(j.h)("pre",bigRed,"ONGOING COMPUTATIONS WHILE RED:\n\nFibonacci numbers *** Prime Numbers *** Prime Fibonacci Numbers ")]),ze=Object(j.h)("div",[Object(j.h)("div.tao3",mMfactors3.x),Object(j.h)("p#monadstate"),Object(j.h)("h3","MonadState and MonadState Transformers"),p(" The preceding demonstrations used three instances of MonadState: primesMonad, fibsMonad, and factorsMonad. The chat message demonstration uses another instance of MonadState; namely, messageMonadn. Instance of MonadState holds a current state along with a method for updating state. Here again is the definition of MonadState: "),Object(j.h)("p",' MonadState reproduces some of the functionality found in the Haskell Module "Control.Monad.State.Lazy", inspired by the paper "Functional Programming with Overloading and Higher-der Polymorphism", Mark P Jones (http://web.cecs.pdx.edu/~mpj/) Advanced School of Functional Programming, 1995. Transformers take instances of MonadState and return different instances of MonadState. In the prime Fibonacci example, the method call "fibsMonad.bnd(fpTransformer, primesMonad)" returns primesMonad updated so that the largest prime number in primesMonad.s[1] is only slightly larger than the square root of the largest Fibonacci number in fibsMonad.s[3]. Here is the definition of fpTransformer: '),Object(j.h)("a#err",{props:{href:"#top"}},"Back To The Top")]),Le=Object(j.h)("pre","    class MonadEmitter extends EventEmitter {}; \n\n    function MonadState2(g, state) {\n      this.id = g;\n      this.s = state;\n      this.c = new EventEmitter();\n      this.bnd = (func, ...args) => func(this.s, ...args);  \n      this.ret = function (a) {\n        return window[this.id] = new MonadState(this.id, a);\n      };\n      this.c.on(a, st => {\n        mMindex.ret(mMindex.x + 1);\n        st[5] = this.s[5].slice();\n        st[5].splice(mMindex.x, 0, [st[0], st[1], st[2], st[3], st[4]]);\n        window[this.id] = new MonadState2(this.id, st);\n      })\n    }; "),Ze=Object(j.h)("pre","    var gameMonad = new MonadState2('gameMonad',\n      [ 0,0,0,[],[0,0,0,0],[[0,0,0,[],[0,0,0,0]]]]);\n"),He=Object(j.h)("pre","  var numClick$ = sources.DOM\n      .select('.num').events('click');\n\n  var numClickAction$ = numClick$.map(e => {\n    if (gameMonad.fetch3().length < 2)  {\n      var score = gameMonad.fetch0();\n      var goals = gameMonad.fetch1();\n      var op = gameMonad.fetch2();\n      var a = gameMonad.fetch3();\n      var b = gameMonad.fetch4();\n      a.push(b.splice(e.target.id, 1)[0]);\n      gameMonad.run([score,goals,op,a,b]);\n      if (a.length === 2 && gameMonad.fetch2() != 0) {\n        updateCalc(a, gameMonad.fetch2())\n      }\n    }\n  });\n\n  var opClick$ = sources.DOM\n      .select('.op').events('click');\n\n  var opClickAction$ = opClick$.map(e => {\n    var s3 = gameMonad.fetch3();\n      var score = gameMonad.fetch0();\n      var goals = gameMonad.fetch1();\n      var a = gameMonad.fetch3().slice();\n      var b = gameMonad.fetch4().slice();\n    if (s3.length === 2) {\n      updateCalc(s3, e.target.innerHTML);\n    }\n    else {\n      gameMonad.run([score,goals,e.target.innerHTML,a,b]);\n    }\n  });\n"),We=Object(j.h)("pre","\n"),Ge=Object(j.h)("pre","    function MonadState(g, state) {\n      this.id = g;\n      this.s = state;\n      this.bnd = (func, ...args) => func(this.s, ...args);  \n    };\n\n    var primesMonad = new MonadState('primesMonad', [3, [], 3, [2,3]]);\n    Object.freeze(primesMonad);\n\n    function isPrime(n) {\n       if (isNaN(n) || !isFinite(n) || n%1 || n<2) return false;\n       var m = Math.sqrt(n);\n       for (var i=2;i<=m;i++) if (n%i==0) return false;\n       return true;\n    }\n\n    function *gen(x) {\n      var x = x\n      while(true) {\n        if(isPrime(x)) yield x;\n        x++;\n      }\n    }\n\n    var primesIt = gen(primesMonad.s[2]+1);\n\n    function execP (state, num) {   // This function is used to update primesMonad.\n      var x = state[2];\n      var primes = state[3].slice();\n      if (x < num) {\n        var end = 0;\n        while (end < num) {\n          primes.push(primesIt.next().value);\n          end = primes[primes.length - 1];\n        }\n        return [end, primes, end, primes]\n      }\n      else {\n        var number = primes.indexOf(num) + 1;\n        var newP = primes.slice(number);\n        return [newP[newP.length - 1], newP, x, primes];\n      }\n    }  "),Ve=Object(j.h)("pre","    const workerB$ = sources.WWB.map(m => {\n      console.log('In workerB$ stream in the main thread. m, m[3] ', m, m.data[3] );\n      if (m.data[3] === 'color') {  // Updates the color display.\n        fill1Monad.ret(m.data[0]);\n        fill2Monad.ret(m.data[1]);\n        fill3Monad.ret(m.data[2]);\n        mMprimeBlurb.ret(m.data[5]);\n        mMfibBlurb.ret(m.data[4]);\n        mMprimeFibBlurb.ret(m.data[6]);  \n      }\n      else {\n        console.log('m.data[3] ********************', m.data[3] );\n        mMelapsed.ret(elapsed(m.data[0][3]))\n        .bnd(v =>  console.log(v));\n        mMres.ret(m.data[0])\n        window['primesMonad'] = new MonadState('primesMonad', m.data[1], primes_state);\n      }\n    }); "),Ue=Object(j.h)("pre","    var fibKeyPress5$ = sources.DOM\n        .select('input#fib92').events('keyup');\n\n    var primeFib$ = fibKeyPress5$.map(e => {\n      workerB.postMessage([primesMonad.s, e.target.value]);\n    });   "),Ye=(Object(j.h)("pre","    execF(ar[1]).bnd(fpTransformer, ar[0], x)  "),Object(j.h)("pre","  function MonadState(g, state) {\n    this.id = g;\n    this.s = state;\n    this.bnd = (func, ...args) => func(this.s, ...args);  \n    this.ret = function (a) {\n      return window[this.id] = new MonadState(this.id, a);\n    };\n  };\n\n  gameMonad = new MonadState('gameMonad', [ [0,0,0,[],[0,0,0,0] ]]); ")),Je=Object(j.h)("pre","  function styl (s) {\n    switch(s) {\n      case (0): return ['none', 'none', 'none', 'none'];\n      break;\n      case (1): return ['inline', 'none', 'none', 'none'];\n      break;\n      case (2): return ['inline', 'inline', 'none', 'none'];\n      break;\n      case (3): return ['inline', 'inline', 'inline', 'none'];\n      break;\n      case (4): return ['inline', 'inline', 'inline', 'inline'];\n      break;\n      default: console.log('The argument(s) provided to styl are flawed'); \n      }\n  }\n\n  function bNode (arr) {\n    var x = styl(arr.length);\n    var node = h('div', [\n      h('button#0.num', { style: { display: x[0] }}, arr[0] ),\n      h('button#1.num', { style: { display: x[1] }}, arr[1] ),\n      h('button#2.num', { style: { display: x[2] }}, arr[2] ),\n      h('button#3.num', { style: { display: x[3] }}, arr[3] )\n    ]);\n    return node;\n  }  "),Qe=(Object(j.h)("pre","\n"),Object(j.h)("pre",`  var rollClick$ = sources.DOM\n    .select('#roll').events('click');\n\n  var rollClickAction$ = rollClick$.map(() => {\n    var a = gameMonad.fetch0().valueOf() - 1;    // Lose one point for clicking ROLL.\n    var b = gameMonad.fetch1().valueOf();\n    socket.send(\`CA#$42,${pMgroup.x},${pMname.x},6,6,12,20,acorn,${b}\`);\n  });\n`)),Ke=Object(j.h)("pre",`  var rollClick$ = sources.DOM\n    .select('#roll').events('click');\n\n  var rollClickAction$ = rollClick$.map(() => {\n    var a = gameMonad.fetch0().valueOf() - 1;\n    var b = gameMonad.fetch1().valueOf();\n    socket.send(\`CA#$42,${pMgroup.x},${pMname.x},6,6,12,20,acorn,${b}\`);\n  });\n\n  var numClick$ = sources.DOM\n      .select('.num').events('click');\n\n  var numClickAction$ = numClick$.map(e => {\n    if (gameMonad.fetch3().length < 2)  {\n      var score = gameMonad.fetch0();\n      var goals = gameMonad.fetch1();\n      var op = gameMonad.fetch2();\n      var a = gameMonad.fetch3();\n      var b = gameMonad.fetch4();\n      a.push(b.splice(e.target.id, 1)[0]);\n      gameMonad.run([score,goals,op,a,b]);\n      if (a.length === 2 && gameMonad.fetch2() != 0) {\n        updateCalc(a, gameMonad.fetch2())\n      }\n    }\n  }).startWith([0, 0, 0, 0]);\n\n  var opClick$ = sources.DOM\n      .select('.op').events('click');\n\n  var opClickAction$ = opClick$.map(e => {\n    var s3 = gameMonad.fetch3();\n      var score = gameMonad.fetch0();\n      var goals = gameMonad.fetch1();\n      var a = gameMonad.fetch3().slice();\n      var b = gameMonad.fetch4().slice();\n    if (s3.length === 2) {\n      updateCalc(s3, e.target.innerHTML);\n    }\n    else {\n      gameMonad.run([score,goals,e.target.innerHTML,a,b]);\n    }\n  });  `),Xe=Object(j.h)("pre",`  var gameMonad = new MonadState('gameMonad', \n    [[[0,0,0,[],[1,2,3,4]], [0,0,0,[],[0,0,0,0]]],1 ]);\n\n  MonadState.prototype.dec = function () {\n    this.s[1] -= 1;\n    buttonNode = bNode(this.s[0][this.s[1]][4]);\n    socket.send(\`CG#$42,${pMgroup.x},${pMname.x},\${this.s[0][this.s[1]][0]},\${this.s[0][this.s[1]][1]}\`)\n    window[this.id] = this;\n    return this;\n  };\n\n  MonadState.prototype.inc = function () {\n    this.s[1] += 1\n    buttonNode = bNode(this.s[0][this.s[1]][4]);\n    socket.send(\`CG#$42,${pMgroup.x},${pMname.x},\${this.s[0][this.s[1]][0]},\${this.s[0][this.s[1]][1]}\`)\n    window[this.id] = this;\n    return this;\n  };\n\n  MonadState.prototype.fetch0 = function () {\n      return this.s[0][this.s[1]][0];\n  }\n   \n  MonadState.prototype.fetch1 = function () {\n      return this.s[0][this.s[1]][1];\n  }\n   \n  MonadState.prototype.fetch2 = function () {\n      return this.s[0][this.s[1]][2];\n  }\n   \n  MonadState.prototype.fetch3 = function () {\n      return this.s[0][this.s[1]][3].slice();\n  }\n   \n  MonadState.prototype.fetch4 = function () {\n      return this.s[0][this.s[1]][4].slice();\n  }\n   \n  MonadState.prototype.clearPicked = function () {\n    var st = this.s.slice();\n    st[0][st[1]][3] = [];\n    st[1] += 1;\n    st.splice(this.s[1]+1, 0, st[0]); \n    return window['gameMonad'] = new MonadState('gameMonad', st);\n  }\n\n  MonadState.prototype.run = function ([\n    score = this.s[0][this.s[1]][0], \n    goals = this.s[0][this.s[1]][1],\n    operator = this.s[0][this.s[1]][2],\n    picked = this.s[0][this.s[1]][3].slice(),\n    display = this.s[0][this.s[1]][4].slice()\n  ]) {\n    this.s[1] += 1;\n    var newState = this.s.slice();\n    newState[0].splice(this.s[1], 0, [score, goals, operator, picked, display])  \n      [score, goals, operator, picked, display]);  \n    this.s = newState;\n    buttonNode = bNode(display);\n    return window['gameMonad'] = new MonadState('gameMonad', newState);\n  }  `),et=Object(j.h)("pre",'  function updateCalc(ar, op) {\n    var result = calc(ar[0], op, ar[1]);\n    if (result === 18 || result === 20) {\n      score(result);\n    }\n    else {\n      var sco = gameMonad.fetch0();\n      var goals = gameMonad.fetch1();\n      var a = gameMonad.fetch4().slice();\n      a.push(result);\n      gameMonad.run([sco,goals,0,[],a]);\n    }\n  };\n\n  function score(result) {\n    var sc = parseInt(gameMonad.fetch0());\n    var sco = result === 18 ? sc + 3 : sc + 1;\n    var scor = sco % 5 === 0 ? sco + 5 : sco;\n    var goals = gameMonad.fetch1();\n\n    if (scor === 25 && gameMonad.fetch1() === "1") {\n      mMindex.ret(0);\n      gameMonad = new MonadState(\'gameMonad\', [[0,0,0,[],[0,0,0,0]]]);\n      socket.send(`CE#$42,${pMgroup.x},${pMname.x}`);\n      scor = 0;\n      goals = 0;\n    }\n    if (scor === 25 && gameMonad.fetch1() === "0") {\n      scor = 0;\n      goals = 1;\n    }\n    newRoll(scor, goals);\n  }  '),tt=Object(j.h)("pre","    var rep = new RegExp('<<>>', 'g');\n    var rep2 = new RegExp(',', 'g');\n\n    function MonadState2(g, state) {\n      console.log('someone called with g and state', g, state);\n      this.id = g;\n      this.s = state;\n      this.bnd = (func, ...args) => func(this.s, ...args);  \n      this.ret = function (a) {\n        return window[this.id] = new MonadState(this.id, a);\n      };\n    };\n\n    taskMonad = new MonadState2( 'taskMonad', [] );\n\n    MonadState2.prototype.html = \"\";\n\n    MonadState2.prototype.run2 = function (str) {\n     var newAr = str.split('@').map(v => v.split(','));\n      newAr.map(v => {\n        v[0] = v[0].replace(rep, ',');\n        v[1] = eval(v[1]);\n      });\n      this.s = newAr;\n      console.log('In run >>>>>>>>>>>>>>>>>>>> this.s is', this.s );\n      // \"two\",false,\"alfred\",\"jane\",\"none\"\n      var arr = this.s.slice();\n      console.log('In MonadState.run2. <o><o><o><o><o><o><o> this.s is', this.s );\n      var nodeObject = [];\n      var n = -1\n      var showCheck, showUnCheck, showGreen, showLineThrough;\n      arr.map(a => {\n        n+=1\n        showCheck = a[1] ? \"none\" : \"inline\"\n        showUnCheck = a[1] ? \"inline\" : \"none\"\n        showGreen = a[1] ? \"green\" : \"yellow\"\n        showLineThrough = a[1] ? \"line-through\" : \"none\"\n        console.log('In MonadState2.prototype.run2. a[1], showCheck, showUnCheck, showGreen, showLineThrough', \n          a[1] === \"checked\", showCheck, showUnCheck, showGreen, showLineThrough);\n        nodeObject.push(h('div#' + n +'.todo', [\n          h('span.task3', { style: { color: showGreen, textDecoration: showLineThrough } }, 'Task: ' + a[0]),\n          h('br'),\n          h('input#cbx',  { props: { type: 'checkbox', checked: a[1] }}), \n          h('label.tao4', { for: 'cbx', style: {display: showUnCheck}}, 'The task is completed' ),\n          h('label.tao4', { for: 'cbx', style: {display: showCheck}}, 'The task is not completed' ),\n          h('br'),\n          h('span.tao', 'Author: ' + a[2] + ' / ' + 'Responsibility: ' + a[3]),\n          h('br'),\n          h('button#edit1', {props: {innerHTML: 'edit'}}),\n          h('input#edit2', { props: { type:'textarea', value: a[0] }, style: { display: a[4] } }),\n          h('button#delete', 'delete'),\n          h('br'),\n          h('button#chbox1', {style: {display: showUnCheck}}, 'change to not completed'),\n          h('button#chbox2', {style: {display: showCheck}}, 'change to completed'),\n          h('hr')   \n        ])) \n      });  \n      taskMonad.html = nodeObject;\n  }; "),nt=Object(j.h)("pre","  // Clicking the checkbox to indicate that a task has been finished.\n  var cbx$ = sources.DOM.select('input#cbx').events('click');\n\n  var cbxAction$ = cbx$.map(e => {\n    console.log('************************************ event detected');\n    var s = taskMonad.s.slice();\n    console.log('1 in cbxAction$. s is', s );\n    var index = e.target.parentNode.id;\n    s[index][1] = eval(s[index][1]) === true ? false : true\n    s.map(v => v[0] = v[0].replace(rep2, '<<>>'));\n    console.log('2 in cbxAction$. s is', s );\n    var str = s.join('@');\n    console.log('3 in cbxAction$. str is', str);\n    socket.send(`TD#$42,${get(pMgroup)},${get(pMname)},@${str}`);\n  });\n\n  // Clicking the completed / not completed buttons.\n  var chbox1Click$ = sources.DOM.select('#chbox1').events('click');\n\n  var chbox1Action$ = chbox1Click$.map( e => {\n    console.log('************************************ event detected');\n    var s = taskMonad.s.slice();\n    console.log('In chbox1Action. $$$$$$$$$$$$$$$$$$$$$ e and s are', e, s); \n    var index = e.target.parentNode.id;\n    s[index][1] = false;\n    s.map(v => v[0] = v[0].replace(rep2, '<<>>'));\n    var str = s.join('@');\n    console.log('In chbox1Action. str is', str); \n    socket.send(`TD#$42,${get(pMgroup)},${get(pMname)},@${str}`);  \n  });\n\n  var chbox2Click$ = sources.DOM.select('#chbox2').events('click');\n\n  var chbox2Action$ = chbox2Click$.map( e => {\n    console.log('************************************ event detected');\n    var s = taskMonad.s.slice();\n    console.log('In chbox2Action. e and s are', e, s); \n    var index = e.target.parentNode.id;\n    s[index][1] = true;\n    s.map(v => v[0] = v[0].replace(rep2, '<<>>'));\n    var str = s.join('@');\n    socket.send(`TD#$42,${get(pMgroup)},${get(pMname)},@${str}`);\n  });\n\n  // Clicking the DELETE button.\n  var deleteClick$ = sources.DOM\n      .select('#delete').events('click');\n\n  var deleteAction$ = deleteClick$.map(function (e) {\n    console.log('************************************ event detected');\n    if (taskMonad.s.length < 2) {\n      console.log('Now removing the',pMgroup.x,'file');\n      taskMonad.html = '';\n      taskMonad.s = [];\n      socket.send(`TX#$42,${get(pMgroup)},${get(pMname)}`);\n    }\n    else {\n      var s = taskMonad.s.slice();\n      var index = e.target.parentNode.id;\n      s.splice(index, 1);\n      s.map(v => v[0] = v[0].replace(rep2, '<<>>'));\n      var str = s.join('@');\n      socket.send(`TD#$42,${get(pMgroup)},${get(pMname)},@${str}`);\n    }\n  });\n\n  // Editing a task.\n  var edit1$ = sources.DOM\n      .select('button#edit1').events('click');\n\n  var edit1Action$ = edit1$.map(function (e) {\n    console.log('************************************ event detected');\n    console.log('In edit1Action$. e is', e );\n    var index = getIndex2(e);\n    var s = taskMonad.s.slice();\n    var str;\n    s.map(v => v[0] = v[0].replace(rep2, '<<>>'));\n    s[index][4] = 'inline-block';\n    str = s.join('@');\n    taskMonad.run2(str);  \n  });\n\n  var edit2$ = sources.DOM\n      .select('#edit2').events('keypress');\n\n  var edit2Action$ = edit2$.map(function (e) {\n    console.log('************************************ event detected');\n    console.log('In edit2Action$. e is', e );\n    var arr;\n    var str;\n    if (e.keyCode === 13) {\n      var s = taskMonad.s.slice();\n      var index = e.target.parentNode.id;\n      s[index][0] = e.target.value;\n      s[index][1] = false;\n      s[index][4] = \"none\";\n      s.map(v => v[0] = v[0].replace(rep2, '<<>>'));\n      var str = s.join('@');\n      socket.send(`TD#$42,${get(pMgroup)},${get(pMname)},@${str}`);\n    }\n  });\n\n  // Creating a new task\n  var newTask$ = sources.DOM\n      .select('input.newTask').events('keydown');\n\n  var newTaskAction$ = newTask$.map(function (e) {\n    console.log('************************************ event detected');\n    var alert = '';\n    var s = taskMonad.s.slice();\n    s.map(v => v[0] = v[0].replace(rep2, '<<>>'));\n    console.log('In newTaskAction$. <><><><><><><> s is', s);\n    var todo = [];\n    if (e.keyCode === 13) {\n      var ar = e.target.value.split(',');\n      if (ar.length < 3) {\n        mMalert.ret('You should enter \"author, responsible party, task\" separated by commas');\n        return;\n      }\n      else {\n        todo[2] = ar.shift();\n        todo[3] = ar.shift();\n        todo[0] = ar.join(',').replace(rep2, '<<>>');\n        todo[1] = false;\n        s.push(todo);\n        console.log('In newTask. s is', s );\n        var str = s.join('@');\n        console.log('<><><><><><><><><><><><><><><><><><> In newTaskAction$. str is', str);\n        socket.send(`TD#$42,${get(pMgroup)},${get(pMname)},@${str}`);\n      }\n    }\n  });  "),rt=(Object(j.h)("pre",`    var comment$ = sources.DOM.select('#comment').events('keydown');\n    var commentAction$ = comment$.map(e => {\n      if (e.keyCode == 13) {\n        var com = e.target.value.replace(/,/g, "<<>>");\n        var comm = com.replace(/(\r\n|\n|\r)/gm,"");   // Remove newlines\n        socket.send(\`GN#$42,${pMgroup.x},${pMname.x},<@>${pMname.x}\` + "<o>" + comm  + "<@>");\n      }\n    });\n\n    var deleteClick2$ = sources.DOM\n      .select('#deleteB').events('click');\n\n    var deleteAction2$ = deleteClick2$.map(function (e) {\n    var i = e.target.parentNode.id;\n      console.log('In deleteAction2 ***   ***   ***   ***   ***   ***   ***   *** i is', i );\n      socket.send(\`GD#$42,${pMgroup.x},${pMname.x}\` + "," + i);\n    });\n\n    var editB$ = sources.DOM\n      .select('input#editB').events('keydown');\n\n    var editBAction$ = editB$.map( function (e) {\n      if (e.keyCode == 13) {\n        console.log('Editing a comment. Here is e', e);\n        var i = e.target.parentNode.id;\n        var comment = e.target.value.replace(/,/g, "<<>>");\n        console.log('Still in edit. Here is comment:', comment);\n        socket.send('GE#$42,' + pMgroup.x + ',' + pMname.x + ',' + i + ',' + pMname.x + "<o>" + comment);\n      }\n    })   `),Object(j.h)("pre",'    else if "GZ#$42" `T.isPrefixOf` msg               -- FETCH AND BROADCAST ALL COMMENTS\n        then                                           -- PERFORM ON LOAD\n            do\n                comments <- atomically $ readTVar comms\n                st <- atomically $ readTVar state\n                broadcast ("ZZ#$42," `mappend` group `mappend` "," \n                    `mappend` sender `mappend` "," `mappend` comments) st\n\n     else if "GN#$42" `T.isPrefixOf` msg -- RECEIVE A NEW COMMENT, UPDATE THE FILE AND THE TVAR,\n                                         --  AND BROADCAST THE NEW COMMENTCOMMENT \n        then\n            do\n                old <- atomically $ readTVar comms\n                let updat = old `mappend` extra\n                let updated = T.replace (T.pack "<@><@>") (T.pack "<@>") updat\n                TIO.writeFile xcomments updated\n                atomically $ writeTVar comms updated\n                st <- atomically $ readTVar state\n                broadcast ("ZN#$42," `mappend` group `mappend` ","\n                    `mappend` sender `mappend` "," `mappend` extra) st\n\n     else if "GD#$42" `T.isPrefixOf` msg              -- DELETE A COMMENT\n        then\n            do\n                old <- atomically $ readTVar comms\n                a <- TIO.readFile xcomments\n                b <- remove extraNum a\n                TIO.writeFile xcomments b\n                st <- atomically $ readTVar state\n                broadcast ("ZD#$42," `mappend` group `mappend` ","\n                    `mappend` sender `mappend` "," `mappend` extra) st\n                    \n     else if "GE#$42" `T.isPrefixOf` msg              -- EDIT A COMMENT\n        then\n            do\n                a <- atomically $ readTVar comms\n                b <- substitute extraNum a extra2\n                TIO.writeFile xcomments b\n                atomically $ writeTVar comms b\n                st <- atomically $ readTVar state\n                broadcast ("ZE#$42," `mappend` group `mappend` ","\n                    `mappend` sender `mappend` "," `mappend` extra `mappend` "," `mappend` extra2) st '),Object(j.h)("pre","\n"),Object(j.h)("pre","\n"),Object(j.h)("pre","\n"),Object(j.h)("pre","\n"),Object(j.h)("pre","\n"),Object(j.h)("pre","\n"),{todo1:tt,todo2:nt,sco:L,calculations:et,prototypeAdditions:Xe,styl:Je,num_op:Ke,fetch:fetch,gameMonad_2:Ye,newRoll:Qe,primes3:Ue,primes2:Ve,primes:Ge,variations:Be,MonadEmitter:We,clicks:He,bNode:bNode,MonadState2:Le,gameMonad:Ze,cycle:qe,monad:Re,hardWay:Pe,hardWay2:Ne,async1:Fe,async2:ze,execP:Ie,workerD$:De,fact_workerC:Ee,fact2_workerD:Ae,primes_state:$e,workerB_Driver:Te,workerC:Ce,worker$:Se,errorDemo:je,monadEr:Oe,backAction:we,tests:ke,mMZ10:Me,test3:_e,monad:Re,equals:ge,fmap:ye,opM:xe,e2:le,e2x:pe,e3:he,e4:fe,e4x:me,e6:be,e6x:ve,driver:C,messages:E,monadIt:T,MonadSet:A,updateCalc:z,arrayFuncs:D,nums:nums,cleanup:I,ret:$,C42:P,newTask:N,process:R,mM$task:F,colorClick:B,edit:q,testZ:Z,quad:W,quadShort:H,runTest:G,todoStream:U,inc:V,seed:J,add:Y,MonadState:Q,primesMonad:K,fibsMonad:X,primeFibInterface:te,tr3:ee,fpTransformer:ne,factorsMonad:re,factorsInput:oe,promise:ae,promiseSnippet:ie,timeout:ce,timeoutSnippet:se,examples:ue,examples2:de});n(43),Object(j.h)("textarea","You bet!"),Object(j.h)("form#horses","You bet!");!function e(){console.log("00000000000000000000000000000000 Entering login",socket.readyState);setTimeout(function(){if(1===socket.readyState){console.log("readyState is",socket.readyState);var t=Math.random().toString().substring(5);t.toString().substring(2);playerName=t,playerGroup="solo",pMname.ret(t),pMoldName.ret(t),pMgroup.ret("solo"),gameMonad.run([0,0,0,[],[7,7,7,7],t,"solo"]);var n=t+"<o>password";socket.send("CC#$42"+n),pMcombo.ret(n),pMclicked.ret([]),socket.send(`GZ#$42,solo,${t}`)}else e()},650)}(),diffRender=(()=>document.getElementById("diffRender").click()),sources.DOM=Object(j.makeDOMDriver)("#main-container"),sources.WS=websocketsDriver,S.a.run(function(e){console.log("0^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ got this far");const t=e.WS.map(e=>{console.log(e);var r=e.data.split(","),o=(r[1],r[2]),a=r[3],i=r[4];console.log("In messages$ - - v is",r),mMZ9.bnd(()=>{}),mMZ10.bnd(()=>{o===pMname.x?gameMonad.run([r[7],r[8],0,[],[r[3],r[4],r[5],r[6]]]):gameMonad.run([,,,[],[r[3],r[4],r[5],r[6]]])}),mMZ11.bnd(()=>{console.log("The message arrived",t);var e=r.slice(3,r.length).join(", "),n=r[2]+": "+e;messages.unshift(Object(j.h)("span",n),Object(j.h)("br")),console.log("The message was typeof ar",typeof n)}),mMZ12.bnd(()=>{mMgoals2.ret("The winner is "+r[2]),setTimeout(function(){mMgoals2.ret("")},700)}),mMZ13.bnd(()=>{mMgoals2.ret("A player named "+r[2]+" is currently logged in. Page will refresh in 4 seconds."),refresh()}),mMZ14.bnd(()=>{var t=e.data.split("<$>")[1];return console.log("In mZ14.bnd - - ar is",t),console.log("zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzztaskMonad",taskMonad),taskMonad.init(t)}),mMZ15.bnd(()=>{var e=[],t=r[3].slice(),n=t.split("<$!$>"),o=n.map(r=>{console.log("In mMZ15.bnd ar, arr, arr2, and arr3 are",e,t,n,o),e.push(r),e.push(Object(j.h)("br"))});gameData=e}),mMZ16.bnd(()=>{var e=mMcommentStr.x;"code1"===i&&(mMregister.ret("The registered name "+a+" and the associated password were recognized. "),socket.send("GZ#$42,"+pMgroup.x+","+pMname.x+",<@>"+e)),"code2"===i&&(mMregister.ret("The new name "+a+" was registered."),socket.send("GZ#$42,"+pMgroup.x+","+pMname.x+",<@>"+e)),"code3"===i&&(pMname.ret(o),mMregister.ret("The password you entered is not the password that is registered for "+a+"."))}),mMZ17.bnd(()=>{var e=a.substring(0,a.length-3);""!==(e=(e=e.replace(/<@><@>/g,"<@>")).replace(/↵/g,""))&&commentMonad.init(e)}),mMZ18.bnd(()=>{commentMonad.append(a)}),mMZ19.bnd(()=>{commentMonad.edit(a,i),console.log("In mMZ19 to edit a comment. <><><><><><><> extra, extra2:",a,i)}),mMZ20.bnd(()=>{commentMonad.remove(parseInt(a,10))}),mMZ21.bnd(()=>{console.log("ooooooooooooooooooo New task from the server",a),taskMonad.append(a)}),mMZ22.bnd(()=>{taskMonad.edit(r[3],r[4])}),mMZ23.bnd(()=>{taskMonad.toggle(r[3]+1)}),mMZ24.bnd(()=>{taskMonad.delete(r[3])}),mMZ25.bnd(()=>{console.log("QQQQQQQQQQQQQWWWWWWWWWWQQQQQQQQ in mMZ25.bnd. extra is ",a),taskMonad.init(a)}),mMZ27.bnd(()=>{mMZ38.release(r[3])}),mMZ28.bnd(()=>{playerName===o?mMZ40.release(r[3]):console.log("message from sender to BC#$42")}),ret(r[0]).bnd(n,"CC#$42",mMZ9).bnd(n,"CA#$42",mMZ10).bnd(n,"CD#$42",mMZ11).bnd(n,"CE#$42",mMZ12).bnd(n,"EE#$42",mMZ13).bnd(n,"TD#$42",mMZ14).bnd(n,"NN#$42",mMZ15).bnd(n,"RR#$42",mMZ16).bnd(n,"GZ#$42",mMZ17).bnd(n,"GN#$42",mMZ18).bnd(n,"GE#$42",mMZ19).bnd(n,"GD#$42",mMZ20).bnd(n,"TA#$42",mMZ21).bnd(n,"TE#$42",mMZ22).bnd(n,"TT#$42",mMZ23).bnd(n,"TX#$42",mMZ24).bnd(n,"TI#$42",mMZ25).bnd(n,"BB#$42",mMZ27).bnd(n,"BC#$42",mMZ28)});function n(e,t,n,r){return e==t&&n.release(r),ret(e)}var r=e.DOM.select("#comment").events("keydown").map(e=>{if(13==e.keyCode){e.preventDefault();var t=e.target.value.replace(/,/g,"<<>>");t=pMname.x+"<o>"+t,socket.send(`GN#$42,${pMgroup.x},${pMname.x},<@>${t}<@>`)}}),o=e.DOM.select("#deleteB").events("click").map(function(e){var t=parseInt(e.target.parentElement.id,10),n=commentMonad.s[1].slice(t,t+1)[0];socket.send(`GD#$42,${pMgroup.x},${pMname.x},${t},${n}`)}),a=e.DOM.select("textarea#commit").events("keydown").map(function(e){if(13==e.keyCode){var t=parseInt(e.target.parentElement.id,10),n=e.target.value.split(","),r=pMname.x+"<o>"+n.join("<<>>"),o=commentMonad.s[1].slice(t,t+1)[0];socket.send(`GE#$42,${pMgroup.x},${pMname.x},${t},${o},${r}`)}}),i=e.DOM.select("input.register").events("keypress").map(e=>{mMerror.ret("");var t=e.target.value.split(",");if(13===e.keyCode){if(mMerror.ret(""),2!=t.length)return void mMerror.ret(" There should be one and only one comma");var n=t[0],r=t.join("<o>");mMshowRegister.ret("none"),pMname.bnd(backupMonad.ret),pMname.ret(n),console.log("pMname.x is",pMname.x),socket.send(`RR#$42,${pMgroup.x},${pMoldName.x},${r}`),setTimeout(function(){socket.send(`CG#$42,${pMgroup.x},${n},${pMscore.x},${pMgoals.x}`)},700)}}),s=e.DOM.select("input#group").events("keypress").map(e=>{13===e.keyCode&&(send("CO#$42",e.target.value),gameMonad.run([0,0,0,[],[0,0,0,0],,e.target.value]),socket.send(`TI#$42,${e.target.value},${pMname.x}`),setTimeout(()=>send("CO#$42",e.target.value),500))}),c=e.DOM.select("input.inputMessage").events("keydown").map(function(e){13===e.keyCode&&(socket.send(`CD#$42,${pMgroup.x},${pMname.x},${e.target.value}`),e.target.value="")}),u=e.DOM.select("#m80").events("change").map(()=>{}),l=e.DOM.select("#roll").events("click").map(()=>{var e=gameMonad.fetch0()-1,t=gameMonad.fetch1();socket.send(`CA#$42,${pMgroup.x},${pMname.x},6,6,12,20,${e},${t}`)}),p=e.DOM.select(".num").events("click").map(e=>{if(gameMonad.fetch3().length<2){var t=gameMonad.fetch3(),n=gameMonad.fetch4();t.push(n.splice(e.target.id,1)[0]),gameMonad.run([,,,t,n,,]),2===t.length&&0!=gameMonad.fetch2()&&updateCalc(t,gameMonad.fetch2())}}).startWith([0,0,0,0]),h=e.DOM.select(".op").events("click").map(e=>{var t=gameMonad.fetch3();2===t.length?updateCalc(t,e.target.innerHTML):gameMonad.run([,,e.target.innerHTML,,,,])}),f=e.DOM.select("#ahead.tao1").events("click"),m=e.DOM.select("#back.tao100").events("click").map(()=>{gameMonad.s[1]>0&&gameMonad.dec()}),b=f.map(()=>{gameMonad.s[1]<gameMonad.s[0].length-1&&gameMonad.inc()}),v=e.DOM.select("#itter").events("keypress").map(e=>{13===e.keyCode&&(itterResult=Object(j.h)("div",styleFunc(["#FFD700",,"16px",,,]),$(pInt(e.target.value))(e=>e)(()=>mMZ23.bnd(e=>e*e*e))(()=>3)(e=>mMZ23.release(3)+e)(e=>e*e/ar[1])(terminate).join(", ")))}),g=e.DOM.select("#double").events("keypress").map(e=>{var t="";13===e.keyCode&&$(3)(cubeP)(addP(3))(e=>ar[1].then(t=>t-75+e*ar[0]))(terminate).map(e=>e.then?e.then(e=>t=t+e+", "):t=t+e+", ")}),y=e.DOM.select("input#code").events("keydown").map(function(e){var t;""!==e.target.value&&13===e.keyCode&&(mM21.ret(e.target.value),(t=[0,1,e.target.value])[2]>1?mMfib.ret([t[1],t[0]+t[1],t[2]-1]):mM19.ret(t[0]))}),_=e.DOM.select("input#demo2").events("keydown").map(function(e){""!==e.target.value&&13===e.keyCode&&(Bind.bind1=[],bind1(e.target.value)(cubeP)(()=>idP(Bind.bind1[0]-Bind.bind1[1]))(e=>addP(Bind.bind1[1])(e)))});const M=e.WWB.map(e=>{"color"===e.data[3]?(fill1Monad.ret(e.data[0]),fill2Monad.ret(e.data[1]),fill3Monad.ret(e.data[2]),mMprimeBlurb.ret(e.data[5]),mMfibBlurb.ret(e.data[4]),mMprimeFibBlurb.ret(e.data[6])):(mMelapsed.ret(elapsed(e.data[0][3])),mMres.ret(e.data[0]))});var w=e.DOM.select("input#fib92").events("keyup").map(e=>{workerB.postMessage([primeState,e.target.value])}),O=e.DOM.select("#clearprimes").events("click").map(()=>mMres.ret([mMres.x[0],"",mMres.x[2],mMres.x[3]])),k=e.DOM.select("input#factors_1").events("keydown").map(function(e){if(mMfactors3.ret(""),13===e.keyCode){var t=e.target.value;if(t.match(/^[0-9]+$/)){var n=parseInt(t,10);console.log("sending primeState and n to workerC "),workerC.postMessage([primeState,n])}else mMfactors3.ret("This works only if you enter a number. "+t+" is not a number")}});m42_RES=[];var S=e.DOM.select("button.clear_P").events("click").map(e=>{m42_RESULT=[],m42_RESULT2=[]}),T=e.DOM.select("button.factors_P").events("click").map(function(e){mMfactors3.ret(""),$(65)(cubeC)(it4)(it6)(it7)});function $(e,t=[]){return 0===(t=t).length&&(t=[e]),e instanceof Promise?e.then(e=>t.push(e)):t.push(e),function(n){return"terminate"===n.name?t:$(e instanceof Promise?e.then(e=>n(e)):n(e),t)}}workerG$=e.WWG.map(e=>(P=I(e.data),mMZ38.release(e.data),e.data?(console.log("GOOD m.data"),e.target?(console.log("GOOD m.target"),e.data[1]?(console.log("GOOD m.data[1]"),e.target.ar2?void console.log("GOOD m.data.ar2"):"dung"):"donkey"):"shit"):"cow"));var C=e.DOM.select("button.clear_Q").events("click").map(()=>{m42_=[]}),E=e.DOM.select("button#factors_Q").events("click"),A=E.map(e=>{m42_=[],$(145)(e=>e*e*e)(it4)(it6)(it7),$(145)(e=>e*e*e)(it4)(it6)(it7),$(145)(e=>e*e*e)(it4)(it6)(it7),$(145)(e=>e*e*e)(it4)(it6)(it7),$(145)(e=>e*e*e)(it4)(it6)(it7),$(145)(e=>e*e*e)(it4)(it6)(it7),$(145)(e=>e*e*e)(it4)(it6)(it7),$(145)(e=>e*e*e)(it4)(it6)(it7),$(145)(e=>e*e*e)(it4)(it6)(it7),$(145)(e=>e*e*e)(it4)(it6)(it7),$(145)(e=>e*e*e)(it4)(it6)(it7),$(145)(e=>e*e*e)(it4)(it6)(it7),$(145)(e=>e*e*e)(it4)(it6)(it7),$(145)(e=>e*e*e)(it4)(it6)(it7),$(145)(e=>e*e*e)(it4)(it6)(it7),$(145)(e=>e*e*e)(it4)(it6)(it7),$(145)(e=>e*e*e)(it4)(it6)(it7),$(145)(e=>e*e*e)(it4)(it6)(it7),$(145)(e=>e*e*e)(it4)(it6)(it7),$(145)(e=>e*e*e)(it4)(it6)(it7),$(145)(e=>e*e*e)(it4)(it6)(it7),$(145)(e=>e*e*e)(it4)(it6)(it7),$(145)(e=>e*e*e)(it4)(it6)(it7),$(145)(e=>e*e*e)(it4)(it6)(it7),$(145)(e=>e*e*e)(it4)(it6)(it7)});workerH$=e.WWH.map(e=>{console.log("The message arriving from workerH is",e.data),mMZ52.release(e.data[1]),e.data[0][e.data[0].length-1],e.data[0].length>primeState.length&&(primeState=e.data[0])});var D=e.DOM.select("input#factors").events("keypress").map(function(e){13===e.keyCode&&$(e.target.value)(it8)});mMZ40.bnd(e=>{workerH.postMessage([primeState,e])});const I=e=>Object(j.h)("div",[P,Object(j.h)("br"),Object(j.h)("span",bigBlue,e[3]),Object(j.h)("span",bigGreen,e[0]),Object(j.h)("span",bigBlue,e[4]),Object(j.h)("span",bigRed,e[5])]);var P=Object(j.h)("div",""),N=e=>mMZ33.bnd(e=>{mMt32=new Monad(e,"mMt32"),mMt33.ret(e+" cubed is "+e*e*e),N(e+1)});N(0);var R=e.DOM.select("#testZ").events("click").map(function(){mMZ33.release(mMt32.x+1)}),B=e.DOM.select("#testQ").events("click").map(()=>{mMZ33.release(0),diffRender()}),q=e.DOM.select("#testW").events("keypress").map(function(e){13===e.keyCode&&(mMZ33.release(parseInt(e.target.value,10)),diffRender())}),F=e=>t=>t=>t=>n=>{"serve"===r&&(r=_A3);var r=e?_A1:_A3,o=e?_A3:_A2;pingDisplay=(e=>t=>n=>Object(j.h)("div",[Object(j.h)("pre",e," ping        ---\x3e "),Object(j.h)("pre",t,"                 <---        pong "),Object(j.h)("pre","          -- SCORE: ping: "+n[0]+" pong: "+n[1])]))(r)(o)(t)(d)},z=[0,0];pp4=(()=>{var e,t=_A3,n=_A2,r=_A3,o=0,a=0,i=!0,s=300;return e=(()=>{F(i=!i)(t)(n)(r),diffRender(),0===o&&(o=Math.floor(11*Math.random())+1),setTimeout(function(){(z[0]>=11||z[1]>=11)&&(diffRender(),a=0,o=0,z=[0,0]),a>=o&&a%2==0&&(z[0]+=1,a=0,o=0,diffRender()),a>=o&&a%2==1&&(z[1]+=1,a=0,o=0,diffRender()),s=a<o?300:900,a+=1,diffRender(),e()},s)})});var L=e.DOM.select("button.pingpong").events("click").map(()=>{PingpongMaker("m67_RESULT")(),PingpongMaker("m68_RESULT")(),PingpongMaker("m69_RESULT")()});z=[0,0],pingScore2=[0,0],pingScore3=[0,0];const Z=e=>t=>n=>r=>"boolean"!=typeof e?(window[t]=window[t]===_A3?_A1:_A3,window[n]=window[t]===_A3?_A2:_A3,void diffRender()):e?(window[t]=_A1,window[n]=_A3,window[r][0]+=1,void diffRender()):(window[t]=_A3,window[n]=_A2,window[r][1]+=1,void diffRender()),H=e.WWI.map(e=>{"game over"!==e.data&&(Z(e.data)("ping43")("ping44")("pingScore"),Z(e.data)("ping45")("ping46")("pingScore2"),Z(e.data)("ping47")("ping48")("pingScore3"),workerI.postMessage(e.data),diffRender())});e.DOM.select("button.pingpong4").events("click").map(()=>{pp4("ping43")("ping44")("pingScr1")}),e.FD.map(e=>{freday=e});var W=e.DOM.select("div#fredB").events("click").map(e=>{freday=[],diffRender()}),G=e.DOM.select("button#fredB").events("click").map(()=>{freday=[],funcP()}),V=e.BD.map(e=>console.log("Say what?",e));const U=e.WWC.map(e=>{console.log("The message arriving from workerC is",e.data),mMfactors.ret(e.data[1]),e.data[0][e.data[0].length-1],e.data[0].length>primeState.length&&(primeState=e.data[0])});var Y=e.DOM.select("input#factors_5").events("keyup"),J=Y.map(function(e){if(mMfactors7.ret(""),13===e.keyCode){var t=e.target.value.split(",").map(e=>parseInt(e,10));if(t[0]!=t[0]||t[1]!=t[1]||"number"!=typeof t[0]||"number"!=typeof t[1])return void mMfactors7.ret("It works only if you enter two integers separated by a comma.");workerD.postMessage([primesMonad.s,t,decompMonad.s,"Happy, happy"])}});const Q=e.WWD.map(e=>{mMfactors6.ret(e.data[0][3]),window.primesMonad=new MonadState("primesMonad",e.data[0],primes_state),mMfactors8.ret(e.data[1])});var K=e.DOM.select("input#factors_1b").events("keydown").map(function(e){if(mMfactors3_b.ret(""),13===e.keyCode){var t=e.target.value;if(t.match(/^[0-9]+$/)){var n=parseInt(t,10);workerE.postMessage([primesMonad.s,n,decompMonad.s])}else mMfactors3_b.ret("This works only if you enter a number. "+t+" is not a number")}});const X=e.WWE.map(e=>{mMfactors_b.ret(e.data[0]),window.primesMonad=new MonadState("primesMonad",e.data[1]),window.decompMonad=new MonadState("decompMonad",e.data[2])});var ee=e.DOM.select("input#factors_5b").events("keyup"),te=ee.map(function(e){if(mMfactors7.ret(""),13===e.keyCode){var t=e.target.value.split(",").map(e=>parseInt(e,10));if(console.log("In fA$ ar is",t),t[0]!=t[0]||t[1]!=t[1]||"number"!=typeof t[0]||"number"!=typeof t[1])return void mMfactors7.ret("It works only if you enter two integers separated by a comma.");workerF.postMessage([primesMonad.s,t,decompMonad.s])}});const ne=e.WWF.map(e=>{console.log("zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz -> Back in the main thread. m is",e),mMfactors6_b.ret(e.data[2][3]),window.primesMonad=new MonadState("primesMonad",e.data[0],primes_state),window.decompMonad=new MonadState("decompMonad",e.data[2],primes_state),mMfactors8_b.ret(e.data[1])});var re=e.DOM.select("input#factors800").events("keyup").map(function(e){mMfactors800.ret("");var t=e.target.value.split(",").map(e=>parseInt(e,10));if(13===e.keyCode){if(t[0]!=t[0]||t[1]!=t[1]||"number"!=typeof t[0]||"number"!=typeof t[1])return void mMfactors7.ret("It works only if you enter two integers separated by a comma.");mMfactors800.ret(simpleWay(t[0],t[1]))}});function oe(e,t,n){var r=new Monad(t(e),n);return window[n]=r,r}document.onload=function(e){console.log("onload event: ",e),mMitterfib5.release(200)},function e(){mMZ3.bnd(t=>{mMquad4.ret(""),mMquad6.ret(""),mMquad5.ret(t+" * x * x "),mMZ3.bnd(n=>{mMquad6.ret(n+" * x "),mMZ3.bnd(r=>{mMtemp.ret([t,n,r]).bnd(oe,qS4,"mMtemp2").bnd(o=>{let a=o[0],i=o[1];return 0===a?(mMquad5.ret("No solution",mMtemp),mMquad6.ret(" "),void e()):0===i?(mMquad5.ret("No solution"),mMquad6.ret(" "),void e()):(mMquad4.ret("Solutiions for "+t+", "+n+" and "+r+" are "+a+" and  "+i),mMquad5.ret(Object(j.p)(t).text+" * "+a+" * "+a+" + "+Object(j.p)(n).text+" * "+a+" "+Object(j.p)(r).text+" = 0"),mMquad6.ret(Object(j.p)(t).text+" * "+i+" * "+i+" + "+Object(j.p)(n).text+" * "+i+" "+Object(j.p)(r).text+" = 0"),void e())})})})})}();var ae=e.DOM.select("#quad").events("keypress").map(function(e){13===e.keyCode&&(mMZ3.release(e.target.value),document.getElementById("quad").value=null)}),ie=e.DOM.select("#caption").events("click").map(function(){"none"===get(mMcaptionDiv)?mMcaptionDiv.ret("block"):mMcaptionDiv.ret("none")}),se=e.DOM.select("#game").events("click").map(function(){"none"===get(mMgameDiv)?mMgameDiv.ret("block"):mMgameDiv.ret("none")}),ce=e.DOM.select("#clear").events("click").map(()=>{gameMonad.clearPicked()}),ue=(e.DOM.select("input#message2").events("keyup").map(e=>{mM10.ret(e.target.value),worker.postMessage([mM9.x,e.target.value])}),e.DOM.select("#primeNumbers").events("keypress").map(function(e){13===e.keyCode&&worker.postMessage(["CE#$42",primesMonad.s,e.target.value])})),de=e.DOM.select(".box").events("click").map(e=>{var t=parseInt(e.target.parentNode.id,10),n=taskMonad.s[1].slice(t,t+1)[0],r=n,o=n.split("<$>");(o=o.filter(e=>""!==e))[1]="false"===o[1]?"true":"false";var a=o.join("<$>");socket.send(`TE#$42,${pMgroup.x},${pMname.x},${t},${r},${a}`)}),le=e.DOM.select(".cbx2").events("click").map(e=>{var t=parseInt(e.target.parentNode.id,10),n=taskMonad.s[1].slice(t,t+1)[0],r=n,o=n.split("<$>");(o=o.filter(e=>""!==e))[1]="false"===o[1]?"true":"false";var a=o.join("<$>");socket.send(`TE#$42,${pMgroup.x},${pMname.x},${t},${r},${a}`)}),pe=e.DOM.select("#deleteTask").events("click").map(function(e){var t=parseInt(e.target.parentNode.id,10),n=taskMonad.s[1].slice(t,t+1)[0];socket.send(`TX#$42,${pMgroup.x},${pMname.x},${t},${n}`)}),he=e.DOM.select("#edit2").events("keypress").map(function(e){if(13===e.keyCode){var t=parseInt(e.target.parentElement.id,10),n=taskMonad.s[1].slice(t,t+1)[0],r=n.split("<$>"),o=e.target.value.split(",").join("<<>>");r.shift(),r.unshift(o);var a=r.join("<$>");socket.send(`TE#$42,${pMgroup.x},${pMname.x},${t},${n},${a}`)}}),fe=e.DOM.select("input.newTask").events("keydown").map(function(e){if(13===e.keyCode){var t=e.target.value.split(",");if(t.length<2)return void mMalert.ret("You should enter responsible party then a comma then a task");var n=t.shift(),r=t.shift(),o=t.join("<<>>")+"<$>false<$>"+n+"<$>"+r;socket.send(`TA#$42,${pMgroup.x},${pMname.x},${o}<@>`)}});console.log("Just before calcStream@");var me=e.DOM.select("#chat2").events("click").map(()=>showChatDiv="none"===showChatDiv?"block":"none"),be=e.DOM.select("#todoButton").events("click").map(()=>showTodoDiv="none"===showTodoDiv?"block":"none"),ve=e.DOM.select("#res8").events("click"),ge=e.DOM.select("#diffRender").events("click").map(()=>{diffRend<50?diffRend+=1:diffRend=0}),ye=e.DOM.select("input#change").events("onChange").map(e=>{console.log("diffRend changed <C><C>< Change ><C><C> --\x3e --\x3e e is",e)}),xe=e.DOM.select("input#change").events("click").map(e=>{console.log("diffRend changed <C><C>< Click Click Click ><C><C> --\x3e --\x3e e is",e)}),_e=ve.map(()=>{res8_Style=res8_HIDE,setTimeout(()=>{res8_Style=res8_SHOW,diffRender()},4200),RESULT_8=[],$(1)(addP(2))(cubeC)(addC(3))(multC(2))(multP(3))(addC(30))(multC(.1))(terminate).slice(1,8).map(e=>e.then(e=>{RESULT_8.push(e.x+" "),console.log(RESULT_8),diffRender()}))});console.log("NOW WE ARE AT calcStream@");var Me=e.DOM.select("input#test5").events("keypress").map(function(e){13===e.keyCode&&test5(e.target.value)});return counter=function(e,t=0){for(var n=!0;n;){if(n=!1,0===e)return t;e-=1,t+=1,n=!0}},{DOM:xs.merge(L,Me,ye,xe,_,V,g,v,G,W,ge,_e,u,r,de,le,c,re,b,m,ue,K,J,Y,te,ee,O,M,U,Q,X,ne,H,S,C,workerG$,workerH$,ce,k,A,E,T,D,w,y,ae,he,a,q,R,B,pe,o,fe,me,se,be,ie,s,l,i,t,p,h).map(()=>Object(j.h)("div.main",[Object(j.h)("div.image_3",[Object(j.h)("img.image_2",{props:{src:"logo.svg"}}),Object(j.h)("span"," "),Object(j.h)("a",{props:{href:"https://cycle.js.org/",target:"_blank"}},"A Cycle.js application")]),Object(j.h)("div",{style:{textAlign:"center",fontWeight:"bold"}},[Object(j.h)("div",{style:{fontSize:"27px",color:"#FFD700"}},"FUNCTIONAL PROGRAMMING"),Object(j.h)("br"),Object(j.h)("div",{style:{fontSize:"22px",fontStyle:"italic",color:"#07f7f7"}},"WITH CYCLE.JS")]),Object(j.h)("br"),Object(j.h)("br"),Object(j.h)("div.content",[Object(j.h)("span",styleFunc(["#d3ead5",,"18px",,,])," Composing functions like this: "),Object(j.h)("br"),Object(j.h)("br"),Object(j.h)("div",styleFunc(["#FFD700","3%","21px",,,]),"bind(x)(functiona1)(function2) ... (functionN)"),Object(j.h)("br"),Object(j.h)("span",styleFunc(["#d3ead5",,"18px",,,]),"where "),Object(j.h)("pre",styleFunc(["#FFD700",,"18px",,,]),"  x can be any value,\n\n  there are no restrictions on the functions' argument types, \n\n  there are no restrictions on the functions' return value types,\n\n  any function in the chain can be asynchronous,\n\n  functions have built-in access to all prior functions' return values,\n\n  functions have built-in access to all prior promises' resolution values. "),Object(j.h)("span",styleFunc(["#d3ead5",,"18px",,,]),' looks very flexible and expressive, but you might wonder if there is a function named "bind" that can efficiently and reliably facilitate this. Well, here is the '),Object(j.h)("a",{props:{href:"#bind"}},"definition of bind"),Object(j.h)("span",' that is used in "Demonstration 1". It consists of fifteen short lines of straightforward code. Testing confirms that it is as robust as it is easy to understand, tweak, and use. Programmers do need to make it reactive in the platforms (if any) they use. I show, in the '),Object(j.h)("a",{props:{href:"#defs"}},"appendix"),Object(j.h)("span",', one way of doing this using features of Cycle.js. In another platform, perhaps with error handling type checking, and another name, "bind" might look very different. My purpose here is to encourage web application developers to break free from any confining composition methods that might be hindering their creativity.'),Object(j.h)("br"),Object(j.h)("br"),Object(j.h)("span.tao",' "bind" can easily be expanded to intercept runtime errors, check types, etc. "Demonstration 2" shows ten functions created by the factory function "Bind" that seem to execute in parallel while actually running in a single thread). The '),Object(j.h)("a",{props:{href:"#Bind"}},"definition of Bind"),Object(j.h)("span"," is presented in the appendix."),Object(j.h)("p","Functions that take multiple arguments should be curried, or else their arguments should be contained in single arrays or objects. This is a consequence of the fact that functions can only return single values, and those return values are the arguments of the functions linked to their right sides. "),Object(j.h)("span.tao"," There are library functions, for example Lodash/fp's "),Object(j.h)("a",{props:{href:"https://lodash.com/docs/4.17.4#flow"}},"  .flow"),Object(j.h)("span"," and Ramda's "),Object(j.h)("a",{props:{href:"http://ramdajs.com/docs/#compose"}},"R.compose"),Object(j.h)("span",", that facilitate simple function composition; i.e., each function's argument is the preceding function's return value. bind() does this while also giving every linked function along a pipeline access to the return values of every function and resolution value of every promise that preceded it.  "),Object(j.h)("br"),Object(j.h)("p","CAUTION - THE COMMENTARY AFTER THE DEMONSTRATIONS STILL LAGS BEHIND RECENT REFACTORING."),Object(j.h)("br")]),Object(j.h)("div#content2",[Object(j.h)("div",{style:{width:"47%",fontSize:"15px",float:"left"}},[Object(j.h)("br"),Object(j.h)("h3",styleFunc(["#8ffc95","3%",,,,])," Demonstration 1 - WebSocket and worker messaging."),Object(j.h)("span.tao"," The first demonstration consists of bind(145) followed by a math computation, a function that sends the computation result to the WebSocket server, a function that sends the WebSocket response to a web worker, and a function that uses the worker response to update the browser display and the prime number cache. "),Object(j.h)("p#defsReturn"),Object(j.h)("span.tao",' it4() and it6() are asynchronous functions that use "MonadItter" callback handlers in conjunction with Ecmascript 2015 promises. MonadItter is discussed in the '),Object(j.h)("a",{props:{href:"#defs"}},"appendix"),Object(j.h)("span","."),Object(j.h)("br"),Object(j.h)("p"," After the first run, caching of prime numbers usually shortens execution time by around 80%. Run times on Firefox 59 are somewhat shorter than on Chrome 65 (both 64 bit) in my Ubuntu 17.10 desktop computer. "),Object(j.h)("h3",styleFunc(["#8ffc95","3%",,,,])," Demonstration 2 - accessing prior values and avoiding clashes."),Object(j.h)("p"," If you enter an argument x for test5(x) (right column), the code shown in the right column will run. Asynchronous computations are performed in a dedicated web worker and handled by by ES6 promises. "),Object(j.h)("span.tao",'bind() and variations on its theme are produced by a factory named "Bind". For example, bind1 is created with the code '),Object(j.h)("span",{style:{color:"#FFD700"}},"\"var bind1 = Bind('bind1')\"  "),Object(j.h)("span",". Here is the "),Object(j.h)("a",{props:{href:"#bind2"}},"definition of Bind"),Object(j.h)("p",' bind1 is a function. Bind.bind1 is an array not of the promises returned by each function, but rather it is an array of the values that are produced as each promise resolves. "Bind.bind1" is a permanent fixture in the virtual DOM description returned by main(). You can watch it and nine similar arrays as their lengths seem to increase in parallel by entering an integer in the right column.'),Object(j.h)("p"," Demonstration 2 shows that the nine sequences do not interfere with one another. They can't corrupt data outside of the namespace created by Bind, nor can they be corrupted by outside processes. "),Object(j.h)("span.tao",{style:{color:"#FFD700"}},'"bind1(e.target.value)(cubeP)"'),Object(j.h)("span"," cubes user inpup. The first element of each Bind array attribute (Bind.bind1, Bind.bind2, etc) is the a number that is encapsulated in a promise. The promise resolves after 1200 ms, providing its resolution value to cubeP. When cubeP resolves, its resolution value becomes the argument of the next promise's then method. The delayed identity function \"idP\" takes the difference of the original value and its cube as its argument. After this resolves, the original value's cube is added to its resolution value. "),Object(j.h)("p#backToDem3","     "),Object(j.h)("h3",styleFunc(["#8ffc95","3%",,,,])," Demonstration 3 "),Object(j.h)("span",' This demonstration uses a closure named "PingpongMaker" instead of Bind to define clones of the function "ping". Three instances of ping operate independently of one another in the demonstration on the right. Here is '),Object(j.h)("a",{props:{href:"#pingmaker"}},"more information about Demonstration 3."),Object(j.h)("br"),Object(j.h)("h3",styleFunc(["#8ffc95","3%",,,,])," Demonstration 4 - The >>= operator"),Object(j.h)("pre","  ret(3) >>= cube >>= add(3) >>= square >>= Math.sqrt // 30"),Object(j.h)("span.tao"," The >>= operator was created with the help of the "),Object(j.h)("a",{props:{href:"https://www.sweetjs.org/"}},"sweet.js library"),Object(j.h)("span",". Here is the definition:"),Object(j.h)("pre","operator >>= left 11 = (left, right) => {\n  return #`${right}(${left}.x)`;\n}; "),Object(j.h)("p",' The number "11" is the operator priority on the JavaScript scale of 1 to 12. ">>=" links functions that return their values wrapped in anonymous objects called "monads". Monad(), ret(), and three functions that map values to values wrapped in instances of Monad() are defined below: '),Object(j.h)("pre","function Monad2(z) {\n  this.x = z;\n};\n\nfunction ret (v) {\n  return new Monad2(v);\n}\n\nvar cube = x => ret(x*x*x);\nvar add = a => b => ret(a+b);\nvar square = v => ret(v*v); \n\noperator >>= left 11 = (left, right) => {\n  return #`${left}.then(${v => right(v)})`;\n};  "),Object(j.h)("p"," In the right column, You can see the result of iusing these definitions to compile: "),Object(j.h)("pre","ret(3) >>= cube >>= add(3) >>= square >>= Math.sqrt"),Object(j.h)("br"),Object(j.h)("span",' using "sjs" from the "sweet.js" library. '),Object(j.h)("p"," Toward the end of the appendix, I show how functions can be defined to provide all the features of bind() in conjunction with >>=. It would be nice if someday JavaScript would provide a way to define operators inside of the language. ")]),Object(j.h)("div",{style:{width:"47%",fontSize:"15px",float:"right"}},[Object(j.h)("h3","Demonstration 1"),Object(j.h)("span"," Click below to run bind(145)(x=>x*x*x)(it4)(it6)(it7) twenty-five times. The left column is the call order."),Object(j.h)("br"),Object(j.h)("br"),Object(j.h)("span",styleFunc(["rgb(7, 247, 247)","12%","20px",,,,,]),"bind(145)(x=>x*x*x)(it4)(it6)(it7)"),Object(j.h)("br"),Object(j.h)("br"),Object(j.h)("button#factors_Q",{style:{fontSize:"15px"}},"bind(145)(x=>x*x*x)(it4)(it6)(it7)"),Object(j.h)("span","~~"),Object(j.h)("button.clear_Q",{style:{fontSize:"15px",marginLeft:"0"}},"clear results"),Object(j.h)("br"),Object(j.h)("br"),Object(j.h)("div",m42_),Object(j.h)("br"),Object(j.h)("br"),Object(j.h)("h3","Demonstration 2"),Object(j.h)("pre","bind1(n+0)(cubeP)(() => idP(Bind.bind1[0] -\nBind.bind1[1]))(v=>addP(Bind.bind1[1])(v));\nbind2(n+1)(cubeP)(() => idP(Bind.bind2[0] -\nBind.bind2[1]))(v=>addP(Bind.bind2[1])(v)); \n  . . .\nbind9(n+8)(cubeP)(() => idP(Bind.bind9j[0] -\nBind.bind9[1]))(v=>addP(Bind.bind9[1])(v)); "),Object(j.h)("div#zero",bigRed,Bind.bind1.join(", ")),Object(j.h)("span"," value of n --\x3e "),Object(j.h)("input#test5",{style:{height:"15px"}}),Object(j.h)("br"),Object(j.h)("div#z1",bigGreen,Bind.bind1.join(", ")),Object(j.h)("div#z2",bigGreen,Bind.bind2.join(", ")),Object(j.h)("div#z3",bigGreen,Bind.bind3.join(", ")),Object(j.h)("div#z4",bigGreen,Bind.bind4.join(", ")),Object(j.h)("div#z5",bigGreen,Bind.bind5.join(", ")),Object(j.h)("div#z6",bigGreen,Bind.bind6.join(", ")),Object(j.h)("div#z7",bigGreen,Bind.bind7.join(", ")),Object(j.h)("div#z8",bigGreen,Bind.bind8.join(", ")),Object(j.h)("div#z9",bigGreen,Bind.bind9.join(", ")),Object(j.h)("br"),Object(j.h)("br"),Object(j.h)("h3","Demonstration 3"),Object(j.h)("br"),Object(j.h)("button.pingpong",{style:{fontSize:"17px"}},"start pingpong"),pingDisplay,Object(j.h)("br"),Object(j.h)("br"),Object(j.h)("br"),Object(j.h)("br"),m67_RESULT,Object(j.h)("br"),m68_RESULT,Object(j.h)("br"),m69_RESULT,Object(j.h)("br"),Object(j.h)("br"),Object(j.h)("h3","Demonstration 4"),Object(j.h)("p"," The following following code, along with the function definitions on the left, compiles to the code shown  benieth it: "),Object(j.h)("pre",{style:{color:"#FFFFFF",fontSize:"15"}},"  ret(3) >>= cube >>= add(3) >>= square >>= Math.sqrt // 30"),Object(j.h)("pre",{style:{color:"#FFD700",fontSize:"15"}},"function Monad2(z_146) {\n  this.x = z_146;\n}\nfunction ret(v_147) {\n  return new Monad2(v_147);\n}\nvar cube_139 = (x_148) => ret(x_148 * x_148 * x_148);\nvar add_140 = (a_149) => (b_150) => ret(a_149 + b_150);\nvar square_141 = (v_151) => ret(v_151 * v_151);\n\nMath.sqrt(square_141(add_140(3)(cube_139(ret(3).x).x).x).x);\n  // 30  "),Object(j.h)("p"," Notice how sweet.js changes the names of the functions and variables to prevent name clashes. "),Object(j.h)("br"),Object(j.h)("br"),Object(j.h)("br")]),Object(j.h)("br"),Object(j.h)("br")]),Object(j.h)("br"),Object(j.h)("br"),Object(j.h)("h1","_____________________________________________________________________"),Object(j.h)("br"),Object(j.h)("div.content",[Object(j.h)("br"),Object(j.h)("br"),Object(j.h)("br"),Object(j.h)("span.tao","This project was created by and is actively maintained by me, David Schalk. It is a work in progress. The code repository is at "),Object(j.h)("a",{props:{href:"https://github.com/dschalk/monads-in-JavaScript",target:"_blank"}},"monads-in-JavaScript"),Object(j.h)("span",". Please leave a comment in the "),Object(j.h)("a",{props:{href:"#comments"}},"comments"),Object(j.h)("span"," section near the end of this page. You can email me at pyschalk@gmail.com. "),Object(j.h)("p"," "),Object(j.h)("p"," The demonstrations below include persistent, shared todo lists, text messaging, and a simulated dice game with a traversable history. All group members see your score decrease or increase as you navigate backwards and forwards. "),Object(j.h)("p",' You are automatically logged in with randomly generated numbers as your user name and password. Your group is the non-group "solo". '),Object(j.h)("p"," You can select a persistent name and password. These will make it possible for you to return later to delete or edit comments that you might have saved. "),Object(j.h)("p#gameIntro"," The demonstration section also has a text box where you can create or join groups. Changing groups resets your game score and goal tally to zeros. "),Object(j.h)("span.tao"," The game code is fairly concise and intuitive. A quick walk-through is presented at."),Object(j.h)("a",{props:{href:"#gameCode"}},"here"),Object(j.h)("span",". To see monadic functionality at work, I suggest that you take a look at the section captioned "),Object(j.h)("a",{props:{href:"#asyncExplanation"}},"Asynchronous Processes"),Object(j.h)("br"),Object(j.h)("p"," But it might be best to first proceed down the page and see the examples of Monad instances manipulating data. If you are trying to wrap you head around the concept of functional programming, playing with bind() and the monads in the browser console might lift you into the comfort zone you seek. "),Object(j.h)("h3","The Game"),Object(j.h)("p",'People who are in the same group, other than the default non-group named "solo", share the same todo list, chat messages, and simulated dice game. '),Object(j.h)("p"," Data for the traversable game history accumulates until a player scores three goals and wins. The data array is then emptied and the application is ready to start accumulating a new history. "),Object(j.h)("p"," Your user name for trying out the game, todo list, and chat demonstrations and for leaving comments is a thirteen digit random number. In the game section and in the comments section near the bottom of this page, you can chose your own persistent user name and password. As mentioned above, Knowing your password facilitates revising or removing comments.")]),Object(j.h)("h1","Game, Todo List, Text Messages"),Object(j.h)("div#gameDiv2",{style:{display:mMgameDiv2.x}},[Object(j.h)("div#leftPanel",{style:{display:mMgameDiv2.x}},[Object(j.h)("p","RULES: If clicking two numbers and an operator (in any order) results in 20 or 18, the score increases by 1 or 3, respectively. If the score becomes 0 or is evenly divisible by 5, 5 points are added. A score of 25 results in one goal. That can only be achieved by arriving at a score of 20, which jumps the score to 25. Directly computing 25 results in a score of 30, and no goal. Each time ROLL is clicked, one point is deducted. Three goals wins the game. The code is in an appendix."),Object(j.h)("p",{style:{color:"red",fontSize:"20px"}},mMgoals2.x),buttonNode,Object(j.h)("br"),Object(j.h)("button#4.op","add"),Object(j.h)("button#5.op","subtract"),Object(j.h)("button#6.op","mult"),Object(j.h)("button#7.op","div"),Object(j.h)("button#8.op","concat"),Object(j.h)("br"),Object(j.h)("br"),Object(j.h)("div#dice",{style:{display:mMdice.x}},[Object(j.h)("button#roll.tao1","ROLL"),Object(j.h)("button#back.tao100","BACK"),Object(j.h)("button#ahead.tao1","FORWARD"),Object(j.h)("div.tao",`Selected numbers: ${gameMonad.fetch3().join(", ")}`),Object(j.h)("div.tao",`Operator: ${gameMonad.fetch2()} `),Object(j.h)("div.tao","Index: "+gameMonad.s[1]),Object(j.h)("button#clear","Clear selected numbers"),Object(j.h)("p"," When traversing the game history, any time there are two selected numbers and a selected operator, a computation will be performed. You can clear the selected numbers and substitute others, and if you don't want a selected operator you can select another one."),Object(j.h)("span","Change group: "),Object(j.h)("input#group","test"),Object(j.h)("p",mMsoloAlert.x),Object(j.h)("p"," You can change your name by entering a comma-separated name and password below. The combination will go into a persistent file. You can use this combination in the future to edit or delete your saved comments. "),Object(j.h)("span.red",mMregister.x),Object(j.h)("label",{style:{display:mMshowRegister.x}},"Register or log in here:"),Object(j.h)("input.register",{style:{display:mMshowRegister.x}})])]),Object(j.h)("div#rightanel",{style:{display:"block",float:"right"}},[Object(j.h)("br"),Object(j.h)("br"),Object(j.h)("br"),Object(j.h)("br"),Object(j.h)("br"),Object(j.h)("br"),Object(j.h)("button#todoButton.cow","TOGGLE TODO_LIST"),Object(j.h)("br"),Object(j.h)("br"),Object(j.h)("button#chat2.cow","TOGGLE CHAT"),Object(j.h)("br"),Object(j.h)("br"),Object(j.h)("br"),Object(j.h)("div",{style:{fontSize:"14 px"}},"Name: "+pMname.x),Object(j.h)("div",{style:{fontSize:"14 px"}},"Group: "+pMgroup.x),Object(j.h)("br"),Object(j.h)("div",{style:{fontSize:"14 px"}},gameData),Object(j.h)("br"),Object(j.h)("div#a100"," _____________________________________ "),Object(j.h)("p.italic",' Join group "t" if you want to see some previously created tasks. '),Object(j.h)("div",{style:{display:showTodoDiv}},[Object(j.h)("div",taskMonad.html),Object(j.h)("div","Enter author, responsible person, and task here: "),Object(j.h)("input.newTask")]),Object(j.h)("br"),Object(j.h)("span#alert",mMalert.x),Object(j.h)("br"),Object(j.h)("span#alert2"),Object(j.h)("br"),Object(j.h)("div#chatDiv",{style:{display:showChatDiv}},[Object(j.h)("div#messages",[Object(j.h)("span","Message: "),Object(j.h)("input.inputMessage"),Object(j.h)("div",messages),Object(j.h)("br")])])])]),Object(j.h)("br"),Object(j.h)("br"),Object(j.h)("h1","________________________________________________"),Object(j.h)("div.content",[Object(j.h)("a#bind",{props:{href:"#top"}},"Back to the top"),Object(j.h)("p","CAUTION - SOME OF THE COMMENTARY AFTER THIS POINT STILL LAGS BEHIND RECENT REFACTORING."),Object(j.h)("p"," Here are the definitions of bind: "),Object(j.h)("pre",{style:{color:"lightBlue"}},'function bind (x, ar=[]) {\n  var ar = ar;\n  if (ar.length === 0) ar = [x];\n  if (x instanceof Promise) x.then(y => ar.push(y));\n  else ar.push(x)\n  return function debug8 (func) {\n    if (func.name === "terminate") return ar;\n    var p;\n    if (x instanceof Promise) {\n      p = x.then(v => func(v));\n    }\n    else p = func(x);\n    return bind(p, ar);\n  };\n}; '),Object(j.h)("a",{props:{href:"#content2"}},"Back to the preview demos"),Object(j.h)("p",italicYellow,' Sequences beginning with bind() reveal exactly what is happening while sometimes hiding confusing conglomerations of nested promises intermingled with other types of functions. In other words, they provide a way out of "Callback Hell". '),Object(j.h)("p#cycle"),Object(j.h)("a",{props:{href:"#top"}},"Back To The Top"),Object(j.h)("br"),Object(j.h)("a",{props:{href:"#cyclet"}},"Async Procedures"),Object(j.h)("p"," \"h('div', m42_RESULT)\" is a permanent fixture in the Snabbdom virtual DOM that is returned by main() and updated by calcStream$. When it7() executes, Snabbdom performs its diff and render routine, updating the browser window. "),Object(j.h)("p"," The asynchronous functions in Demonstration 1 use monadItter instances mMZ40 and mMZ41 instead of Promises. Here's the definition of MonadItter: "),Object(j.h)("pre","  var MonadItter = function MonadItter() {\n    this.p = function () {};\n    this.release = function () {\n      return this.p.apply(this, arguments);\n    };\n    this.bnd = function (func) {\n      return this.p = func;\n    };\n  }; "),Object(j.h)("p"," When obtaining data from unreliable sources, one should add error checking functionality or use promises. "),Object(j.h)("h3","Reactivity In Cycle.js"),Object(j.h)("span.tao"," Reactivity occurs naturally in the Cycle.js framework. Many developers find that Cycle.js has an unusually steep learning curve. It isn't so bad if you start with Andrew Staltz' "),Object(j.h)("a",{props:{href:"https://egghead.io/courses/cycle-js-fundamentals",target:"_blank"}}," Overview of Cycle.js."),Object(j.h)("span"," Its elegance might take your breath away. "),Object(j.h)("br"),Object(j.h)("br"),Object(j.h)("a.tao",{props:{href:"https://github.com/snabbdom/snabbdom"}}," Snabbdom"),Object(j.h)("span",", "),Object(j.h)("a",{props:{href:"http://x-stream.github.io/"}}," xstream,"),Object(j.h)("span"," and most of the monads and functions presented here are available in browser developer tools consoles and scratch pads. A production site would load these as modules, but this site is for experimentation and learning so many supporting files are included as scripts in the index.html page. "),Object(j.h)("br"),Object(j.h)("p"," The next interactive demonstration accepts user input and executes the following statement in a web worker: "),Object(j.h)("pre","bind(ar[1])(execF)(fpFunc(ar[0])(x)); "),Object(j.h)("span"," The parameters are defined in the "),Object(j.h)("a",{props:{href:"fp"}},"appendix"),Object(j.h)("span",". "),Object(j.h)("br"),Object(j.h)("pre",{style:{color:"red",fontStyle:"italic"}},"Red Indicates Am Ongoing Computation"),Object(j.h)("pre","Fibonacci numbers   Prime Numbers   Prime Fibonacci Numbers "),Object(j.h)("span",mMfibBlurb.x),Object(j.h)("span",[Object(j.h)("svg",{attrs:{width:50,height:50}},[Object(j.h)("circle",{attrs:{cx:25,cy:25,r:20,stroke:"purple","stroke-width":4,fill:fill1Monad.x}})])]),Object(j.h)("span",mMprimeBlurb.x),Object(j.h)("span",[Object(j.h)("svg",{attrs:{width:50,height:50}},[Object(j.h)("circle",{attrs:{cx:25,cy:25,r:20,stroke:"purple","stroke-width":4,fill:fill2Monad.x}})])]),Object(j.h)("span",mMprimeFibBlurb.x),Object(j.h)("span",[Object(j.h)("svg",{attrs:{width:50,height:50}},[Object(j.h)("circle",{attrs:{cx:25,cy:25,r:20,stroke:"purple","stroke-width":4,fill:fill3Monad.x}})])]),Object(j.h)("br"),Object(j.h)("p.red","The elapsed time is "+mMelapsed.x+" milliseconds."),Object(j.h)("input#fib92"),Object(j.h)("br"),Object(j.h)("br"),Object(j.h)("span#PF_7.red6","Fibonacci Numbers"),Object(j.h)("br"),Object(j.h)("span#PF_9.turk",mMres.x[0]),Object(j.h)("br"),Object(j.h)("span#PF_8.red6","Prime Fibonacci Numbers"),Object(j.h)("br"),Object(j.h)("span#primeFibs.turk",mMres.x[2]),Object(j.h)("br"),Object(j.h)("span#PF_21.red6","The largest generated prime number."),Object(j.h)("br"),Object(j.h)("span#PF_22.turk",mMres.x[1]),Object(j.h)("br"),Object(j.h)("h3"," Promises are not needed "),Object(j.h)("p"," Asynchronous code can be handled without reliance on Ecmascript 2015 promises either explicitly or implicitly (e.g. using async/await). Cycle.js drivers eliminate any need to explicitly use functions from reactive library, but Xstrean is an integral component of Cycle.js. "),Object(j.h)("p"," The second demonstration in this series decomposes numbers into its their prime factors. Testing with sequences of 9's, the first substantial lag occurs at 9,999,999 - unless a large array of prime numbers has already been generated in the previous demonstration or elsewhere. Here it is:"),Object(j.h)("input#factors_1"),Object(j.h)("br"),Object(j.h)("br"),Object(j.h)("span",mMfactors.x),Object(j.h)("span.tao3",mMfactors23.x),Object(j.h)("p"," Next, two comma-separated numbers are decomposed into arrays of their prime factors, and those arrays are used to compute their lowest common multiple (lcm). For example, the lcm of 6 and 9 is 18 because 3*6 and 2*9 are both 18. The lcm of the denominators of two fractions is useful in fraction arithmetic; specifically, addition and subtraction. On my desktop computer, two seven digit numbers resulted in a lag of a few seconds when prime numbers had not been previously generated. "),Object(j.h)("input#factors_5"),Object(j.h)("br"),Object(j.h)("br"),Object(j.h)("div.tao3",mMfactors7.x),Object(j.h)("span",`The least common multiple of  ${mMfactors8.x[0]} and ${mMfactors8.x[1]} is `),Object(j.h)("span.tao3",`${mMfactors8.x[2]}`),Object(j.h)("br"),Object(j.h)("span",`The largest common factor of ${mMfactors8.x[0]} and ${mMfactors8.x[1]} is `),Object(j.h)("span.tao3",`${mMfactors8.x[3]}`),Object(j.h)("br"),Object(j.h)("div",`TEST: ${mMfactors8.x[0]} * ${mMfactors8.x[1]} === ${mMfactors8.x[2]} * ${mMfactors8.x[3]} `),Object(j.h)("span","RESULT: "),Object(j.h)("span.tao3",`${mMfactors8.x[0]*mMfactors8.x[1]==mMfactors8.x[2]*mMfactors8.x[3]}`),Object(j.h)("h3"," The Easy Way "),Object(j.h)("p"," This has been a demonstration of MonadState and MonadState transformers. If you really want the least common multiple or the largest common factor of two positive integers, there is no need to generate prime numbers. The next and final demonstration in this section does not use a web worker. The computations block the main thread, but only for a few microseconds."),Object(j.h)("br"),Object(j.h)("input#factors800"),Object(j.h)("br"),Object(j.h)("span",`The least common multiple of  ${mMfactors800.x[0]} and ${mMfactors800.x[1]} is `),Object(j.h)("span.tao3",`${mMfactors800.x[2]}`),Object(j.h)("br"),Object(j.h)("span",`The largest common factor of ${mMfactors800.x[0]} and ${mMfactors800.x[1]} is `),Object(j.h)("span.tao3",`${mMfactors800.x[3]}`),Object(j.h)("br"),Object(j.h)("div",`TEST: ${mMfactors800.x[0]} * ${mMfactors800.x[1]} === ${mMfactors800.x[2]} * ${mMfactors800.x[3]} `),Object(j.h)("span","RESULT: "),Object(j.h)("span.tao3",`${mMfactors800.x[0]*mMfactors800.x[1]==mMfactors800.x[2]*mMfactors800.x[3]}`),Object(j.h)("p"," The code for the previous demonstrations is available at the Github repository, and will soon be available here in an appendix. primesMonad and the functions primarily involved in its transformation are shown below: "),rt.primes,Object(j.h)("p"," primesMonad state updates are generated in workerB.js and stored in the main thread. Users set new upper bounds on the size of the largest Fibonacci number in the series to be considered by entering a number in a browser input box. Here is the relevant code: "),rt.primes3,Object(j.h)("p"," The user's selected number along with the current state of primesMonad (primesMonad.s) gets posted to workerB, which gets functionality beyond its prototype from workerB.js, which orchestrates preparation of the return message that will be posted back to the main thread. workerB.js delegates the job to functions in script2.js by calling: "),rt.primes4,Object(j.h)("p"," execF prepares the Fibonacci series and sends its state, along with the state of primesMonad that it received from workerB.js, to fpTransformer. execP is called with the current state and the largest Fibonacci number that had been recently produced by execF as arguments. The updated state is an array with four elements, [new upper bound, new series, largest prime produced in the current browser session, largest series]. If the new result is larger than any previous one, the first and second elements of the state array are identical to the third and fourth. Otherwise, they are smaller. As is apparent in the following code, primesMonad is re-created in the main thread using the state array that was posted by workerB. "),rt.primes2,Object(j.h)("h3","Type Checking"),Object(j.h)("p"," Type checking is useful for avoiding runtime errors and for optimization of user interfaces. For example, if a user enters the wrong type of data it is helpful to display a message explaining why nothing is happening. Not allowing defective user input to be transmitted to a WebSocket server prevents sockets from disconnecting. Some developers like to superimpose strong typing over JavaScript or write code in a strongly typed language that compiles to JavaScript. Others like to retain all of JavaScript's possibilities, checking types in only a few functions.  "),Object(j.h)("br"),Object(j.h)("a",{props:{href:"#top"}},"Back to the top"),Object(j.h)("h3","More Examples"),Object(j.h)("p"," The result of every computation in a chain of synchronous functions is available to every computation that comes after it. This can be seen in the next example: "),Object(j.h)("pre","  bind(1)(addC(2))(cubeC)(addC(3))\n  (multC(this.ar[1]))(multC(this.ar[1]))\n  (addC(30))(multC(1/(ar[3]*2)))(terminate)\n   // [1, 3, 27, 30, 90, 270, 300, 5] "),Object(j.h)("p"," Or, equivalently: "),Object(j.h)("pre",orange,"  bind(1)(v=>v+2)(v=>v*v*v)(v=>v+3)\n  (v=>v*ar[1])(v=>v*ar[1])(v=>v+30)\n  (v=>v*1/(ar[3]*2))(terminate)\n   // [1, 3, 27, 30, 90, 270, 300, 5] "),Object(j.h)("p#cycletime"," Or if you want just the final result "),Object(j.h)("pre","  bind(1)(v=>v+2)(v=>v*v*v)(v=>v+3)\n  (v=>v*ar[1])(v=>v*ar[1])(v=>v+30)\n  (v=>v*1/(ar[3]*2))(terminate).pop()  // 5] "),Object(j.h)("h2","Alternative Monad Functionality"),Object(j.h)("p",' Instances of Monad can also link by means of the method "bnd()". It, along with the method "ret()", were made available as follows: '),Object(j.h)("pre",{style:{color:"rgb(236, 242, 186)"}},"  Monad.prototype.bnd = function (func, ...args) {\n    var m = func(this.x, ...args)\n    var ID;\n    if (m instanceof Monad) {\n      ID = testPrefix(args, this.id);\n      window[ID] = new Monad(m.x, ID);\n      return window[ID];\n    }\n    else return m;\n  };\n\n  Monad.prototype.ret = function (a) {\n    return window[this.id] = new Monad(a, this.id);\n  };\n\n  function testPrefix (x,y) {\n     var t = y;  // y is the id of the monad calling testPrefix\n     if (Array.isArray(x)) {\n      x.map(v => {\n        if (typeof v == 'string' && v.charAt() == '$') {\n           t = v.slice(1);  // Remove \"$\"\n        }\n      })\n    }\n    return t;\n  }; "),Object(j.h)("p"," This is less functional than using bind() in that it doesn't pass functions down the chain but instead passes objects with exposed methods. But it has appealing features. Look how values move along the chain until, at the end they combine to yield 42. Explicitly passing values from function to function along a chain is impossible with bind(); but with bind(), all chained functions share an array of return values and the resolution values of returned promises. "),Object(j.h)("br#itter"),Object(j.h)("pre","  ret(2).bnd(v => add(v,1)\n  .bnd(cube).bnd(p => add(p,3)\n  .bnd(() => ret(p/3).bnd(add,3)\n  .bnd(z => v*z+p-v*p+z))))  //  9 "),Object(j.h)("a",{props:{href:"#gameIntro"}},"Back to the first set of demonstrations."),Object(j.h)("h2","MonadItter"),Object(j.h)("p",' As shown in the "Monads" section (above), the definition of MonadItter is: '),rt.monadIt,Object(j.h)("p"," MonadItter instances don't link to one another. They exist to facilitate the work of instances of Monad, MonadState, etc. Here's how they work: "),Object(j.h)("p",'For any instance of MonadItter, say "it", "it.bnd(func)" causes it.p === func. Calling the method "it.release(...args)" causes p(...args) to run, possibly with arguments supplied by the caller. '),Object(j.h)("p"," MonadItter instances control the routing of incoming WebSocket messages. In one of the demonstrations below, they behave much like ES2015 iterators."),Object(j.h)("h3"," A Basic Itterator "),Object(j.h)("p","The following example illustrates the use of release() with an argument. It also shows a lambda expressions being provided as an argument for the method mMZ1.bnd() (thereby becoming the value of mMZ1.p), and then mMZ1.release providing an arguments for the function mMZ1.p. The code is shown beneath the following two buttons. "),Object(j.h)("button#testZ","mMZ33.release(1)"),Object(j.h)("p",mMt33.x),Object(j.h)("span","Refresh button: "),Object(j.h)("button#testQ","mMt33.ret(0) "),Object(j.h)("span.tao"," The expression mMt33.x sits permanently in the Motorcycle virtual DOM description. You can call "),Object(j.h)("span.green","mMZ33.release(v)"),Object(j.h)("span"," by entering a value for v below: "),Object(j.h)("br"),Object(j.h)("span","Please enter an integer here: "),Object(j.h)("input#testW"),Object(j.h)("p",' cube() is defined in the Monad section (above). If you click "mMZ1.release(1)" several times, the code (above) will run several times, each time with v === 1. The result, mMt3.x, is shown below the button. mMZ1.p (bnd()\'s argument) remains constant while mMZ1.release(1) is repeatedly called, incrementing the number being cubed each time. '),Object(j.h)("p"," Here is another example. It demonstrates lambda expressions passing values to a remote location for use in a computation. If you enter three numbers consecutively below, call them a, b, and c, then the quadratic equation will be used to find solutions for a*x**2 + b*x + c = 0. The a, b, and c you select might not have a solution. If a and b are positive numbers, you are likely to see solutions if c is a negative number. For example, 12, 12, and -24 yields the solutions 1 and -2. "),Object(j.h)("p#quad4.red2",mMquad4.x),Object(j.h)("p#quad5.red2",mMquad5.x),Object(j.h)("p#quad6.red2",mMquad6.x),Object(j.h)("p","Run mMZ3.release(v) three times for three numbers. The numbers are a, b, and c in ax*x + b*x + c = 0. Remember to press <ENTER> after each number. "),Object(j.h)("input#quad"),Object(j.h)("p","Here is the code:"),rt.quad,Object(j.h)("p"," fmap (above) facilitated using qS4 in a monadic sequence. qS4 returns an array, not an instance of Monad, but fmap lifts qS4 into the monadic sequence. "),Object(j.h)("p",' The function solve() is recursive. It invokes itself after release() executes three times. The expression "solve()" resets solve to the top, where mMZ3.p becomes a function containing two nested occurrences of mMZ3.bnd. After mMZ3.release() executes, mMZ3.p becomes the function that is the argument to the next occurrence of mMZ3.bnd. That function contains yet another occurrence of mMZ3.bnd. MonadItter is syntactic sugar for nested callbacks. '),Object(j.h)("h2"," MonadEr - An Error-Catching Monad "),Object(j.h)("p"," Instances of MonadEr function much the same as instances of Monad, but when an instance of MonadEr encounters an error, it ceases to perform any further computations. Instead, it passes through every subsequent stage of a sequence of MonadEr expressions, reporting where it is and repeating the error message. It will continue to do this until it is re-instantiated or until its bnd() method runs on the function clean(). "),Object(j.h)("p","Functions used as arguments to the MonadEr bnd() method can be placed in quotation marks to prevent the browser engine from throwing reference errors. Arguments can be protected in the same manner. Using MonadEr can prevent the silent proliferation of NaN results in math computations, and can prevent browser crashes due to attempts to evaluate undefined variables. "),Object(j.h)("p.tao1b"," The monad laws hold for MonadEr instances. The following relationships were verified in the Chrome console: "),Object(j.h)("pre","    ret3(0,'t',[])  // t is now an instance of MonadEr with t.x = 0 and t.e = [].\n\n      t.ret(3).bnd(cube3).x === cube(3).x\n      ret3(3).bnd(cube3).x === cube3(3).x\n\n      t.bnd(t.ret) === t\n      t.bnd(ret) === t\n\n      t.ret(0).bnd(add3, 3).bnd(cube3).x ===\n      t.ret(0).bnd(v => add3(v,3).bnd(cube3)).x  "),Object(j.h)("h3","Feedback From the Error Monad"),Object(j.h)("span#comments"),Object(j.h)("img.image",{props:{src:"error2.png"}}),Object(j.h)("div#comment"),Object(j.h)("h2",{style:{color:"red"}},"Comments"),Object(j.h)("a",{props:{href:"#top"}},"Back to the top"),Object(j.h)("div#com2",{style:{display:"inline"}}),Object(j.h)("p"," When this page loads in the browser, a user name is automatically generated in order to establish a unique WebSocket connection. This makes it possible to exchange text messages with other group members, play the game, and work on a shared todo list. If you want to leave a comment, you need to log in with a user name and a password of your choice. Each can be a single character or you could use a hard-to-hack combination of alphabet letter, numbers, and special characters. The main requirement is that there be only one comma, and that it be placed between the name and the password. "),Object(j.h)("p","The server will keep your user name and password in a text file. If you use your saved user name and password sometime in the future, you will be able to edit or delete any comments you previously made. "),Object(j.h)("p"," If you enter a user name that has not been recorded, you will be logged in as that user. The user name and password will be saved. This means that you do not need to first register and then log in. This is an all-in-one process. If you enter a recognized user name but the password does not match the password in the record, you will be asked to try again. "),Object(j.h)("br"),Object(j.h)("h3","Register"),Object(j.h)("span.red",mMregister.x),Object(j.h)("input.register",{style:{display:mMshowRegister.x}}),Object(j.h)("br"),Object(j.h)("br"),Object(j.h)("h3","COMMENTS"),Object(j.h)("textarea#comment",""),Object(j.h)("br"),Object(j.h)("br"),Object(j.h)("div",commentMonad.html),Object(j.h)("p"," When this website loads, it receives from the server a string containing all of the comments. The string is saved in commentMonad.s[0]. The string is transformed into an array of comments which is saved in commentMonad.s]1]. "),Object(j.h)("p"," When a comment is created, modified, or deleted, a WebSocket message goes to the server which performs some of its own housekeeping and broadcasts a message to all online browsers. It is received in messages$ and forwarded comments.js. "),Object(j.h)("p"," The functions in the comments.js file mutate commentsMonad. There is no reason to create fresh instances of commentMonad, other than out of devout devotion to the doctrine of non-mutation. How silly that would be! Nothing touches commentMonad outside of the comments.js file; there is no danger. "),Object(j.h)("p"," commentMonad stands in stark contrast to the gameMonad, which is never mutated although it sees much action during game play. Immutability is necessary for game history traversal. Here is the entire Comments.js file: "),Object(j.h)("pre","function showFunc (name, name2)\n{return name == name2 ? 'inline-block' : 'none'}\n\nvar MonadState3 = function MonadState3(g, state) {\n  this.id = g;\n  this.s = state;\n  this.bnd = (func, ...args) => func(this.s, ...args);\n  this.ret = function (a) {\n    return window[this.id] = new MonadState(this.id, a);\n  };\n}  \n\nbind2(n)(cubeP)(addP(3))(a=>a+ar[0]+ar[1]-18)(multP(1/3))\n  (addP(-11))(()=>ar[1]+ar[2]+ar[3])(terminate) ;\n\nvar commentMonad = new MonadState3('commentMonad',   [ '', [] ]);\n\nMonadState3.prototype.html = [];\n\nMonadState3.prototype.init = function (str) { // fetch all comments\n  this.s[0] = str;\n  this.s[1] = this.s[0].split(\"<@>\");\n  this.s[1] = this.s[1].filter(v => (v != \"\"));\n  process(this.s[1]);\n}\n\nMonadState3.prototype.append = function (str) {\n  this.s[0] = this.s[0] + str;\n  this.s[1] = this.s[0].split('<@>').filter(v => (v != \"\"));\n  process(this.s[1]);\n}\n\nMonadState3.prototype.edit = function (num,txt) {\n  this.s[1].splice(num,1,txt);\n  this.s[0] = this.s[1].join(\"<@>\");\n  this.s[1] = this.s[0].split('<@>').filter(v => (v != \"\"));\n  process(this.s[1]);\n};\n\nMonadState3.prototype.remove = function (num) {\n  this.s[1] = this.s[1].filter(v => v!== '');\n  this.s[1].splice(num,1);\n  this.s[0] = this.s[1].join(\"<@>\");\n  this.html = process(this.s[1]);\n  return this.html;\n};\n\nfunction process (a) { //Assembles the HTML for display.\n  var arr = a;\n  mMcomments.ret([]);\n  var n = -1;\n  arr.map(a => {\n    var x = a.split(\"<o>\");\n    if (x.length != 2) x = ['malfunction', '8888']\n    x[1] = x[1].replace(/<<>>/g, ',');\n    show = showFunc(x[0], pMname.x);\n    n+=1;\n    mMcomments.bnd(push, h('div#'+n, [\n      h('span', x[0] + ' commented: ' + x[1].replace(/<<>>/g, \",\")),\n      h('br'),\n      h('textarea#commit', {props: {cols: 55, rows: 2},\n         style: {display: show }}, x[1]),\n      h('button#deleteB', {props: {innerHTML: 'delete'},\n     style: {display: show, fontSize:14}}),\n      h('br' ),\n      h('span', '***************************************************************')\n    ]))\n  })\n} "),Object(j.h)("div#curryDef"),Object(j.h)("br"),Object(j.h)("pre","function curry(func) {\n\n  return function curried(...args) {\n    if (args.length >= func.length) {\n      return func.apply(this, args);\n    } else {\n      return function(...args2) {\n        return curried.apply(this, args.concat(args2));\n      }\n    }\n  };\n\n}\n\nfunction curryReverse(func) {\n\n  return function curried(...args) {\n    if (args.length >= func.length) {\n      return func.apply(this, args.reverse());\n    } else {\n      return function(...args2) {\n        return curried.apply(this, args.concat(args2));\n      }\n    }\n  };\n\n} "),Object(j.h)("a",{props:{href:"#top"}},"Back to the top"),Object(j.h)("p"," *************************************************************************************** "),Object(j.h)("h3","Haskell Time"),Object(j.h)("p"," This page is for front end developers, but in case anyone is interested, here are the server functions responsible for deleting or amending a comment: "),Object(j.h)("pre","    removeOne _ []                 = []\n  removeOne x (y:ys) | x == y    = ys\n                     | otherwise = y : removeOne x ys\n\n  changeOne :: Text -> Text -> [Text] -> [Text]\n  changeOne _ _ []                 = []\n  changeOne z x (y:ys) | x == y    = z : ys\n                       | otherwise = y : changeOne z x ys "),Object(j.h)("a"," Every message sent to the server is a comma separated string beginning with a prefix, then a group, and then a name. Comma separated items after that are named extra and extra2. "),Object(j.h)("p"," The code belw is responsible for dealing with comments. As in the browser, WebSocket messages are dealt with according to their six character prefixes. extra and extra2 are the only pertinent data since comments go to all groups "),Object(j.h)("pre",'else if "GZ#$42" `T.isPrefixOf` msg\n                  -- FETCH AND BROADCAST ALL COMMENTS ON BROWSER LOAD\n   then\n       do\n           st <- atomically $ readTVar state\n           broadcast ("GZ#$42," `mappend` group `mappend` ","\n             `mappend` sender `mappend` "," `mappend` comments ) st\n\nelse if "GN#$42" `T.isPrefixOf` msg\n                  -- RECEIVE A NEW COMMENT, UPDATE THE FILE AND THE TVAR,\n                  --  AND BROADCAST THE NEW COMMENT\n   then\n       do\n           old <- atomically $ readTVar comms\n           lk <- atomically L.new\n           let c = old `mappend` (T.replace (at `mappend` at) at extra)\n           let new = T.replace (at `mappend` at) at c -- cleanup\n           L.with lk $ TIO.writeFile xcomments new -- lock on writing\n           atomically $ writeTVar comms new\n           st <- atomically $ readTVar state\n           broadcast ("GN#$42," `mappend` group `mappend` ","\n               `mappend` sender `mappend` "," `mappend` extra) st\n\n else if "GD#$42" `T.isPrefixOf` msg      -- DELETE A COMMENT\n    then\n        do\n            a <- TIO.readFile xcomments\n            lk <- atomically L.new\n            let b = T.splitOn at a\n            let c = removeOne extra2 b\n            let d = T.intercalate at c\n            L.with lk $ TIO.writeFile xcomments d\n            atomically $ writeTVar comms d\n            st <- atomically $ readTVar state\n            broadcast ("GD#$42," `mappend` group `mappend` ","\n              `mappend` sender `mappend` "," `mappend` extra) st\n\n else if "GE#$42" `T.isPrefixOf` msg      -- EDIT A COMMENT\n    then\n        do\n            a <- TIO.readFile xcomments\n            lk <- atomically L.new\n            let b = T.splitOn at a\n            let c = changeOne extra3 extra2 b\n            let txt = T.intercalate at c\n            L.with lk $ TIO.writeFile xcomments txt\n            atomically $ writeTVar comms txt\n            st <- atomically $ readTVar state\n            broadcast ("GE#$42," `mappend` group `mappend` com\n              `mappend` sender `mappend` com `mappend` extra `mappend` com\n                 `mappend` extra3) st   '),Object(j.h)("a",{props:{href:"#top"}},"Back To The Top"),Object(j.h)("br"),Object(j.h)("div#reactivity"),Object(j.h)("br"),Object(j.h)("a",{props:{href:"#reactivity2"}},"Back to the pingpong demo"),Object(j.h)("h3","Reactivity in Cycle.js"),Object(j.h)("p"," The stream incF$ and the driver pingpongDriver() (both defined below) are essential components of the pingpong demonstration. "),Object(j.h)("pre",blue,"  var incF$ = n => xs.of(n);\n\n    function pingpongDriver () {\n      return xs.create({\n        start: listener => {\n          incF$ = k => listener.next(k)\n        },\n        stop: () => {}\n      })\n    };  "),Object(j.h)("p",' Whenever the stream incF$() is called, the stream returned by pingpongDriver is augmented and that causes main() to return an object whose only element is a map from the stream calcStream$ to a virtual DOM node with many children. calcStream$ is produced by merging 48 streams together including ping$ resulting from ping(n) where "n" is the number supplied by pingpongDriver (a/k/a "sources.PP"). The first two lines of main()\'s return value are shown below. '),Object(j.h)("pre","    return { DOM: calcStream$.map(() => {\n      return h('div.main', [  "),Object(j.h)("p"," merged into it. Each time main returns, Snabbdom's diff and render routine executes inside of run(sources,main). run(sources,main) calls main() and furnishes it with the listeners provided by the drivers. New events cause the cycle to repeat. "),Object(j.h)("p"," ping(-5)([0,0]) is called when the pingpong button is clicked. Here's the relevant code:"),Object(j.h)("pre","  var pingpong$ = sources.DOM\n      .select('buttonr#ingpong').events('click').map(() => ping(0)([0,0]));\n\n    var ppR = {style: {color: 'red',\n      marginLeft: '5%', fontSize: \"26\"}};\n    var ppY = {style: {color: 'yellow',\n      marginLeft: '42%', fontSize: \"26\"}};\n    var ppRY = {style: {color: 'yellow',\n      marginLeft: '5%', fontSize: \"26\"}};\n    var ppYR = {style: {color: 'red',\n      marginLeft: '42%', fontSize: \"26\"}};\n\n    var ppStyle = false;\n\n\n    var ping = n => ar => {\n      var k = Math.floor(Math.random() * 5)+1;\n      if(ar[0] > 10 || ar[1] > 10) {\n        diffRender();\n        return;\n      }\n      setTimeout(() => {\n        if (n <= k) {\n          ppStyle = !ppStyle;\n          incF$(n);\n          ping(n+1)(ar);\n        }\n        else if (n % 2 === 0) {\n          ar[0]+=1;\n          m67_RESULT = h('pre', ppYR, `     SCORE: ping  ${ar[0]} pong: ${ar[1]}  ` )W\n          ping(0)(ar);\n        }\n        else {\n          ar[1]+=1\n          m67_RESULT = h('pre', ppY, `     SCORE: ping  ${ar[0]} pong: ${ar[1]}  ` );\n          ping(0)(ar);\n        }\n      }, 500 )\n    }  "),Object(j.h)("p"," The function diffRender() forces Snabbdom to perform one last diff and render. It is defined as follows: "),Object(j.h)("pre",'  const diffRender = () => document.getElementById("testQ").click();'),Object(j.h)("p",' The button "testQ" cubes the number 2 in the MonadItter demonstration. It was chosen because it does not significantly affect anything aside from forcing Snabbdom to update the DOM. '),Object(j.h)("p"," The stream incF$ and the driver pingpongDrirun(main, sources) are the crucial Cycle.js application functions. sources contains the drivers. sources.PP = pingpongDriver is one of the drivers consumed by run() and made available in main() so information can be sent back to run. Round and round it goes. Here is the definition of ping$. "),Object(j.h)("span.tao"," The monads do not depend on Cycle.js. They can be used in React, Node, and all other browser-based applications. I happen to prefer Cycle.js working in conjunction with a Haskell WebSocket server. "),Object(j.h)("br"),Object(j.h)("h2","Appendix A - The Game Code"),Object(j.h)("pre","function MonadState(g, state) {\n  this.id = g;\n  this.s = state;\n};  "),Object(j.h)("a",{props:{href:"#gameIntro"}},"Back to the first group of demonstrations."),Object(j.h)("p"),Object(j.h)("pre","MonadState.prototype.run = function ([\n  score = this.s[0][this.s[1]][0],\n  goals = this.s[0][this.s[1]][1],\n  operator = this.s[0][this.s[1]][2],\n  picked = this.s[0][this.s[1]][3].slice(),\n  display = this.s[0][this.s[1]][4].slice()\n  playerName = this.s[0][this.s[1]][5] ? this.s[0][this.s[1]][5].slice() : \"nobody\",\n  playerGroup = this.s[0][this.s[1]][6] ? this.s[0][this.s[1]][6].slice() : \"solo\",\n]) {\n  this.s[1] += 1;\n  var newState = this.s.slice();\n  newState[0].splice(this.s[1], 0, [score, goals, operator, picked, display,playerName,playerGroup])\n   console.log(\"[score, goals, operator, picked, display]\",\n     [score, goals, operator, picked, display,playerName,playerGroup]);\n  this.s = newState;\n  buttonNode = bNode(display);\n  return window['gameMonad'] = new MonadState('gameMonad', newState);\n}\n\nvar gameMonad = new MonadState('gameMonad', [[[0,0,0,[],[1,2,3,4]],\n      [0,0,0,[],[0,0,0,0]]],1 ]);  "),Object(j.h)("p"," Here is the code that controls what happens when a player clicks a number or an operator: "),Object(j.h)("pre","  var numClickAction$ = numClick$.map(e => {\n    if (gameMonad.fetch3().length < 2)  {\n      var a = gameMonad.fetch3();\n      var b = gameMonad.fetch4();\n      a.push(b.splice(e.target.id, 1)[0]);\n      gameMonad.run([,,,a,b,,]);\n      if (a.length === 2 && gameMonad.fetch2() != 0) {\n        updateCalc(a, gameMonad.fetch2())\n      }\n    }\n  }).startWith([0, 0, 0, 0]);\n\n  var opClick$ = sources.DOM\n      .select('.op').events('click');\n\n  var opClickAction$ = opClick$.map(e => {\n    var s3 = gameMonad.fetch3();\n    if (s3.length === 2) {\n      updateCalc(s3, e.target.innerHTML);\n    }\n    else {\n      gameMonad.run([,,e.target.innerHTML,,,,]);\n    }\n  });  "),Object(j.h)("p"," Notice the empty spaces in the arguments to gameMonad.run(). gameMonad.run()'s argument is an array to facilitate calling it with default values. In numClickAction$ we are not changing the score, goals, or operator. The default values of these parameters are their current values. In opClickAction$, we are changing only one thing, the operator. Everything else stays as it is. "),Object(j.h)("p"," When two numbers and an operator have been selected, control passes to updateCalc(). Here's the code: "),Object(j.h)("pre",`function updateCalc(ar, op) {\n  var result = calc(ar[0], op, ar[1]);ar\n  if (result === 18 || result === 20) {\n    score(result);\n  }\n  else {\n    var a = gameMonad.fetch4().slice();\n    a.push(result);\n    gameMonad.run([,,0,[],a,,]);  // Display the result and\n                                // reset the operator and selected values.\n  }\n};\n\nfunction score(result) {\n    var sc = parseInt(gameMonad.fetch0());\n    var sco = result === 18 ? sc + 3 : sc + 1;\n    var scor = sco % 5 === 0 ? sco + 5 : sco;\n    var goals = gameMonad.fetch1();\n    if (scor === 25 && gameMonad.fetch1() === "2") {  // The player wins.\n        mMindex.ret(0);\n        gameMonad = new MonadState('gameMonad',\n           [[[0,0,0,[],[0,0,0,0]],[0,0,0,[][0,0,0,0]]],0]);\n        socket.send(\`CE#$42,${pMgroup.x},${pMname.x}\`);\n        // Ask the server to announce the winner to the entire group\n        newRoll(0,0);\n    }\n    else if (scor === 25) {\n      newRoll(0, parseInt(goals,10) + 1);\n    }\n    else newRoll(scor, goals);   // No increase in the number of goals.\n};   `),Object(j.h)("span.tao"," Additional code is available at"),Object(j.h)("a",{props:{href:"https://github.com/dschalk/monads-in-JavaScript",target:"_blank"}},"monads-in-JavaScript."),Object(j.h)("p","."),Object(j.h)("p"),Object(j.h)("h3","Appendix B - Curried Functions Used In Several Demonstrations"),Object(j.h)("pre#wait"," function square (v) {\n    return ret(v*v)\n  };\n\n  function cube (v, id) {\n    return ret(v*v*v, id);\n  };\n\n  function add (a, b, id) {\n    return ret((parseInt(a,10) + parseInt(b,10)),id);\n  };\n\n  const divCinverse = a => b => ret(e/b);\n  const divC = a => b => ret(b/a);\n  const addC = a => b => ret(a+b);\n  const cubeC = v => ret(v*v*v);\n  const multC = a => b => ret(a*b);\n  const doubleC = a => ret(a+a);\n  const squareC = a => ret(a*a);\n  const sqrtC = a => ret(Math.sqrt(a));\n\nfunction wait(ms) {\n  return new Promise(r => setTimeout(r, ms));\n} h('a#it4', {props: {href: '#top'}}, 'Back to the top'),\n\nasync function cubeP (x) {\n  await wait(2000)\n  return ret(x*x*x);\n} \n\nconst addP = x => async y => {\n  await wait(2000)\n  return ret(x + y);\n}\n\nasync function squareP (x) {\n  await wait(2000)\n  return ret(x*x);\n}\n\nconst divPinverse = a => async b => {\n  await wait (2000)\n  return ret(a/b);\n}\n\nconst divP = a => async b => {\n  await wait (2000)\n  return ret(b/a);\n}\n\nconst sqrtP = async a => {\n  await wait (2000)\n  return ret(Math.sqrt(a));\n}\n\nconst doubleP = async a => {\n  await wait (2000)\n  return ret(a+a);\n}\n\nconst multP = x => async y => {\n  await wait(2000)\n  return ret(x * y);\n}\n\n    "),Object(j.h)("p"),Object(j.h)("h3","Appendix C - Further Reading "),Object(j.h)("p"," Here is a good resource: "),Object(j.h)("a",{props:{href:"https://github.com/getify/You-Dont-Know-JS",target:"_blank"}},"You Don't Know Javascript by Kyle Simpson"),Object(j.h)("span"," You can support the open-source digital version of this book with Patreon at the above address or purchase hard copies from OReily, Amazon, etc. "),Object(j.h)("a",{props:{href:"https://github.com/getify/You-Dont-Know-JS",target:"_blank"}},"You Don't Know JavaScript"),Object(j.h)("span"," is the thinking developer's answer to "),Object(j.h)("a",{props:{href:"http://shop.oreilly.com/product/9780596517748.do",target:"_blank"}},' "JavaScript: The Good Parts" by Douglas Crockford '),Object(j.h)("p"," That's not to say that Crockford isn't a thinking developer. He is a very bright guy. It's just that the so called \"good parts\" are a dummed down subset of JavaScript that help keep people out of trouble when they don't feel inclined understand the JavaScript programming language. "),Object(j.h)("span#cyclet",', which has long been revered as a "must read" JavaScript book. Kyle Simpson recommends learning to use potentially dangerous code intelligently while Douglas Crockford advocates never using it at all. I think the phrase "eval is evil" stems from Crockford\'s book. I find eval() to be very useful from time to time. Kyle Simpson teaches programmers how to safely tap the full potential of JavaScript. '),Object(j.h)("p#defs"),Object(j.h)("br"),Object(j.h)("a",{props:{href:"#content2"}},"Return to Demonstration 1"),Object(j.h)("pre",h3Simulation,"Asynchronous Processes - A deep dive into Demonstration 1"),Object(j.h)("p",' The code below shows how information flows through the functions involved in Demonstration 1. Function definitions are shown when previously undefined functions are encountered. The process begins with the click of a button and ends with execution of it7(), but before showing "factorsClick7$", I want to repeat the definition of "bind". '),Object(j.h)("pre","function bind (x, ar=[]) {\n  var ar = ar;\n  if (ar.length === 0) ar = [x];\n  if (x instanceof Promise) x.then(y => ar.push(y));\n  else ar.push(x)\n  return function debug8 (func) {\n    if (func.name === \"terminate\") return ar;\n    var p;\n    if (x instanceof Promise) {\n      p = x.then(v => func(v));\n    }\n    else p = func(x);\n    return bind(p, ar);\n  };\n};\n\nvar factorsClick7$ = sources.DOM\n  .select('button#factors_Q').events('click');\n\nvar factorsAction7$ = factorsClick7$.map( e => {\n  m42_ = [];\n\n  bind(145)(x=>x*x*x)(it4)(it6)(it7);\n  bind(145)(x=>x*x*x)(it4)(it6)(it7);\n  bind(145)(x=>x*x*x)(it4)(it6)(it7);\n  bind(145)(x=>x*x*x)(it4)(it6)(it7);\n  bind(145)(x=>x*x*x)(it4)(it6)(it7);\n\n  bind(145)(x=>x*x*x)(it4)(it6)(it7);\n  bind(145)(x=>x*x*x)(it4)(it6)(it7);\n  bind(145)(x=>x*x*x)(it4)(it6)(it7);\n  bind(145)(x=>x*x*x)(it4)(it6)(it7);\n  bind(145)(x=>x*x*x)(it4)(it6)(it7);\n\n  bind(145)(x=>x*x*x)(it4)(it6)(it7);\n  bind(145)(x=>x*x*x)(it4)(it6)(it7);\n  bind(145)(x=>x*x*x)(it4)(it6)(it7);\n  bind(145)(x=>x*x*x)(it4)(it6)(it7);\n  bind(145)(x=>x*x*x)(it4)(it6)(it7);\n  \n  bind(145)(x=>x*x*x)(it4)(it6)(it7);\n  bind(145)(x=>x*x*x)(it4)(it6)(it7);\n  bind(145)(x=>x*x*x)(it4)(it6)(it7);\n  bind(145)(x=>x*x*x)(it4)(it6)(it7);\n  bind(145)(x=>x*x*x)(it4)(it6)(it7);\n\n  bind(145)(x=>x*x*x)(it4)(it6)(it7);\n  bind(145)(x=>x*x*x)(it4)(it6)(it7);\n  bind(145)(x=>x*x*x)(it4)(it6)(it7);\n  bind(145)(x=>x*x*x)(it4)(it6)(it7);\n  bind(145)(x=>x*x*x)(it4)(it6)(it7);\n}); "),Object(j.h)("p","it4() sends the number 2,197,000 to the server which responds by sending back a pseudo-random number between 1 and 2,197,000. "),Object(j.h)("pre",`var it4 = x => {\n  if (socket.readyState === 1) socket\n  .send(\`BC#$42,${pMgroup.x},${pMname.x},${x}\`);\n} `),Object(j.h)("p","WS is a driver defined as follows: "),Object(j.h)("pre","function createWebSocket(path) {\n    var host = window.location.hostname;\n    if (host === '')\n        host = 'localhost';\n    var uri = 'ws://' + host + ':3055' + path;\n    var Socket = \"MozWebSocket\" in window ? MozWebSocket : WebSocket;\n    return new Socket(uri);\n}\n\nvar socket = createWebSocket('/');\n\nfunction websocketsDriver() {\n  return xs.create({\n    start: listener => { socket.onmessage = msg => listener.next(msg)}, \n    stop: () => { socket.close() }\n  });\n}; "),Object(j.h)("p",' The prefix "xs" designates the name space for the xstream library. '),Object(j.h)("pre","function main(sources) {\n  const messages$ = sources.WS.map( e => {\n    var v = e.data.split(',')  // The string arriving from the server is made into an array.\n    ...\n    ret(v[0]  // \"ret\" is defined below:\n              // v[0] is the prefix of each message from the server.\n    ...\n    .bnd(next, 'BC#$42', mMZ28)  // Executes when a \"BC$#42\"-prefixed message arrives from the server\n\nInstances of Monad2 encapsulate values. Here is the definition:\n\nfunction Monad2(z = 0) {\n  this.x = z;\n};\n\nMonad2.prototype.ret = a => new Monad2(a);\n\nMonad2.prototype.bnd = function (func, ...args) {\n  return func(this.x, ...args)\n}\n\nfunction ret (val = 0) {  // Similar to Monad2.prototype.ret\n  return new Monad2(val);\n} "),Object(j.h)("p"," Back to messages$: "),Object(j.h)("pre","ret(v[0])\n...\n  .bnd(next, 'BC#$42', mMZ28)  \n ) "),Object(j.h)("p",' When anything prefixed by mMZ28 comes in from the server, mMZ28.release executes, causing mMZ40.bnd(r) to execute, where "r" is the random number obtained from the Haskell server. '),Object(j.h)("pre","mMZ28.bnd( () => {\n  mMZ40.release(v[3]);\n}); "),Object(j.h)("p"," The cached prime numbers and the random number obtained from the server are then sent to workerH. it6 deviates from the functional principle of placing all extraneous data in the arguments. "),Object(j.h)("pre","var it6 = x => {\n  mMZ40.bnd(x => workerH.postMessage([primesMonad.s[3], x])); "),Object(j.h)("p","Here's the definition of workerH.js: "),Object(j.h)("pre",'function isPrime(n) {\n   var m = Math.sqrt(n);\n   for (var i=2;i<=m;i++) if (n%i==0) return false;\n   return true;\n}\n\nfunction primeNums (p,x) {\n  var q = p[p.length - 1];\n  var arr = []; \n  for (var i = q; i < Math.ceil(x+1); i+=1) if (isPrime(i)) arr.push(i);\n  arr = p.concat(arr)\n  return arr\n}  \n\nfunction pfactors (prms, n) {\n  var ar = [];\n    prms.map(p => {\n      if (n/p === Math.floor(n/p)) {\n        ar.push(p);\n        n = n/p;\n      };\n    })\n  return ar;\n}\n\nsortFactors = ar => ar.sort(function(x,y) {\n  return (x - y);\n});\n\nvar g = p => x => {\n  var primes = primeNums(p,x);\n  var factors = pfactors(primes,x);\n  var z;\n  if (factors.length > 1) {\n    z = "The prime factors of " + x + " are " + sortFactors(factors).join(\', \')\n  }\n  else z = x + " is a prime number"\n  return [primes, z];\n}\n\nonmessage = function(m) {\n  var a = m.data[0];\n  var b = parseInt(m.data[1],10);\n  postMessage(g(a)(b));\n}  '),Object(j.h)("p",' "mMZ52.bnd(m => { ... " could have been placed anywhere. Putting it at the end of "bind(50)(x => x*x*x)(it4)(it6)(it7)"illustrates the flexibility of bind for the purposes of Example 1, but in production it would also make Demonstration 1 easier to understand by people responsible for maintaining the code. '),Object(j.h)("h3","MonadItter"),Object(j.h)("p"," The MonadItter section of the page has a detailed discussion and live demonstrations. This is the definition: "),Object(j.h)("pre","  var MonadItter = function MonadItter() {\n  this.p = function () {};\n  this.release = function () {\n    return this.p.apply(this, arguments);\n  };\n  this.bnd = function (func) {\n    return this.p = func;\n  };\n}; "),Object(j.h)("h3","Promises"),Object(j.h)("p"," As the definition of MonadItter shows, bnd() saves functions until release() causes them to execute. MonadItter instances are usually used on this webpage where promises, generators, and async/await could also do the job. "),Object(j.h)("p","Here are the Promises-based functions prm4() and prm6() that can be substituted for it4() and it6() in the expression bind(145)(cubeC)(it4)(it6): "),Object(j.h)("pre","  const prm4 = x => {\n  if (socket.readyState === 1) socket.send('BB#$42,pMgroup,pMname,' + x);\n  return new Promise( (resolve, reject) => {\n     mMZ37.bnd((y) => resolve(ret(y)))\n  })\n}\n\nconst prm6 = x => {\n  workerG.postMessage([primesMonad.s, [x]]);\n  return \"Done\"\n} "),Object(j.h)("p"," Error handling is easy when using MonadItter instances, and is entirely optional. "),Object(j.h)("p",' After "bind(145)(cubeC)(it4)(it6)(it7) runs, the prime decomposition of the number it recieved arrives from workerG. The workerGDriver (sources.WWG) detects the message and adds it to the workerG$ stream. Here is the definition of workerGDriver:  '),Object(j.h)("pre","  function workerGDriver () {\n  return xs.create({\n    start: listener => { workerG.onmessage = msg => listener.next(msg)},\n    stop: () => { workerG.terminate() }\n  });\n}; "),Object(j.h)("p",' Clicking the "decompose fifteen random numbers" button causes factorsRecursion(0) to execute. Here\'s the code: '),Object(j.h)("pre",blue,"  const factorsRecursion = n => bind(145)(cubeC)(it4)\n  (it6)(() => { if (n < 15) factorsRecursion(n+1)}); "),Object(j.h)("p","result778(m.data) is called each time a message from workerG arrives. The definition of result778 is:   "),Object(j.h)("pre",blue,"var result778 = x => h('div', [\n    m778_RESULT,\n    h('br'),\n    h('span', bigBlue, x[3] ),\n    h('span', bigGreen, x[0] ),\n    h('span', bigBlue, x[4] ),\n    h('span', bigRed, x[5] ),\n]); "),Object(j.h)("p"," The stream that listens for workerG messages adds to the vnode m778_RESULT as follows: "),Object(j.h)("pre","const workerG$ = sources.WWG.map(m => {\n    m778_RESULT = result778(m.data);\n    primesMonad = new MonadState('primesMonad', m.data[2]);\n    }); "),Object(j.h)("pre",bigGreen,"const factorsRecursion = n => bind(145)(cubeC)(it4)\n  (it6)(pause)(() => { if (n < 15) factorsRecursion(n+1)}); "),Object(j.h)("pre",bigGold,"  var test5 = x => {\n  var n = toInt(x);\n  Bind.bind1 = []; \n  Bind.bind2 = []; \n  Bind.bind3 = []; \n  \n  bind1(n+0)(cubeP)(() => idP(Bind.bind1[0] -\n  Bind.bind1[1]))(v=>addP(Bind.bind1[1])(v));\n\n  bind2(n+1)(cubeP)(() => idP(Bind.bind2[0] -\n  Bind.bind2[1]))(v=>addP(Bind.bind2[1])(v)); \n\n  bind3(n+2)(cubeP)(() => idP(Bind.bind3[0] -\n  Bind.bind3[1]))(v=>addP(Bind.bind3[1])(v));} "),Object(j.h)("p#Bind",""),Object(j.h)("a",{props:{href:"#top"}},"Back to the top"),Object(j.h)("pre",'function Bind (str) {\n  Bind[str] = [];\n  return function bindo ( x ) {\n    if (x instanceof Promise) x.then(y => {\n      Bind[str].push(y);\n      diffRender();\n      console.log(Bind[str]);\n    })\n    else {\n      Bind[str].push(x)\n      diffRender();\n    }\n    console.log(Bind[str]);\n    return function debug8 (func) {\n      var p;\n      if (func.name === "terminate") return Bind[str];\n      if (x instanceof Promise) {\n        p = x.then(v => func(v));\n      }\n      else p = func(x);\n      return bindo(p);\n    };\n  };\n};\n\nvar bind$ = n => xs.of(n);\n\nfunction bindDriver () {\n  return xs.create({\n    start: listener => { bind$ = a => listener.next(a) },\n    stop: () => {}\n  })\n};\n\nvar bind1 = Bind("bind1");\nvar bind2 = Bind("bind2");\nvar bind3 = Bind("bind3");\nvar bind4 = Bind("bind4");\nvar bind5 = Bind("bind5");\nvar bind6 = Bind("bind6");\nvar bind7 = Bind("bind7");\nvar bind8 = Bind("bind8");\nvar bind9 = Bind("bind9"); '),Object(j.h)("p#pingmaker"," "),Object(j.h)("a",{props:{href:"#backToDem3"}},"Back to Demonstration 3"),Object(j.h)("br"),Object(j.h)("br"),Object(j.h)("p"," This is the code involved in the pingpong demonstration. PingpongMaker's argument creates a namespace. The demonstration features three such namespaces. It verifies that each game proceeds with its own state, oblivious of the states of the other two games in progress. Bind uses its closure to achieve a similar effect. "),Object(j.h)("pre","var pingD = a => b => c => h('div', [\n  h('pre', a, ` ping        ---\x3e `), \n  h('pre', b, `                 <---        pong `), \n  h('pre',  `          -- SCORE: ping: ` + c[0]  + ` pong: ` + c[1]  ),\n]);\n\nvar PingpongMaker = (name) => {\n  var a = _A1;\n  var b = _A3;\n  var c = [0,0];\n  var n = 0;\n  var bool = true;\n  var k = Math.floor(Math.random() * 7)+1;\n  return function train () {\n    if (c[0] > 10 || c[1] > 10) return;\n    var ms = 400;\n    console.log('a.style.color, b.style.color, c', a.style.display, b.style.display, c);\n    if (a === _A3) {a = _A1; b = _A3}\n    else if (a === _A1) {a = _A3; b = _A2};\n    if (n <= k) {\n      n+=1;\n      window[name] = pingD(a)(b)(c);\n      diffRender();\n    }\n    else if (n % 2 === 0) {\n      ms = 1200\n      n = 0\n      c[0]+=1;\n      window[name] = pingD(_A1)(_A3)(c);\n      diffRender();\n      k = Math.floor(Math.random() * 7)+1;\n    }\n    else if (n % 2 === 1) {\n      ms = 1200;\n      n = 0;\n      c[1]+=1;\n      window[name] = pingD(_A3)(_A2)(c);\n      diffRender();\n      k = Math.floor(Math.random() * 7)+1;\n    }\n    setTimeout( function () {\n      train();\n    },ms );\n  }\n}  \n\nPingpongMaker('m67_RESULT')\nPingpongMaker('m68_RESULT')\nPingpongMaker('m69_RESULT')  "),Object(j.h)("p"," m67_RESULT, m68_RESULT, and m69_RESULT are permanent fixtures in the virtual DOM description returned by main()"),Object(j.h)("br"),Object(j.h)("h3","The >>= operator"),Object(j.h)("span.tao",' Using the "operator" function from the '),Object(j.h)("a",{props:{href:"https://www.sweetjs.org/"}},"sweet.js library"),Object(j.h)("span",' ">>=" is defined as:'),Object(j.h)("pre","operator >>= left 11 = (left, right) => {\n  return #`${right}(${left}.x)`;\n}; "),Object(j.h)("pre","'lang sweet.js';\n\nfunction Monad2(z) {\n  this.x = z;\n};\n\nfunction ret (v) {\n  return new Monad2(v);\n}\n\nvar id = x => ret(x[0], x[1]);\nvar cube = x => ret([x[0]*x[0]*x[0], x[1].concat(x[0]*x[0]*x[0])]);\nvar square = x => ret([x[0]*x[0], x[1].concat(x[0]*x[0])]);\nvar add = a => b => ret([a+b[0], b[1].concat(a+b[0])]);\n\noperator >>= left 11 = (left, right) => {\n  return #`${right}(${left}.x)`;\n};\n\nvar a = (ret([3, []]) >>= cube >>= add(3) >>= square).x[1].reduce( (a,b) => a+b );\n\nvar b = ( ret([0, []]) >>= add(3) >>= cube >>= \n(x => add(x[1][1])([x[1][1],x[1]])) >>=\n(x => add(x[0])([-4 * x[1][0], x[1]]))).x[1]\n\nconsole.log('ret([3, []]) >>= cube >>= add(3) >>= square).x[1].reduce( (a,b) => a+b ) = ', a);\n\nconsole.log(`(ret([0, []]) >>= add(3) >>= cube >>=  \n(x => add(x[1][1])([x[1][1],x[1]])) >>= \n(x => add(x[0])([-4 * x[1][0], x[1]]))).x[1] = `, b); "),Object(j.h)("pre",'function Monad2(z_10) {\n  this.x = z_10;\n}\nfunction ret(v_11) {\n  return new Monad2(v_11);\n}\nvar id_0 = x_12 => ret(x_12[0], x_12[1]);\nvar cube_1 = x_13 => ret([x_13[0] * x_13[0] * x_13[0], x_13[1].concat(x_13[0] * x_13[0] * x_13[0])]);\nvar square_2 = x_14 => ret([x_14[0] * x_14[0], x_14[1].concat(x_14[0] * x_14[0])]);\nvar add_3 = a_15 => b_16 => ret([a_15 + b_16[0], b_16[1].concat(a_15 + b_16[0])]);\nvar a_8 = square_2(add_3(3)(cube_1(ret([3, []]).x).x).x).x[1].reduce((a_17, b_18) => a_17 + b_18);\nvar b_9 = (x_19 => add_3(x_19[0])([-4 * x_19[1][0], x_19[1]]))((x_20 => add_3(x_20[1][1])([x_20[1][1], x_20[1]]))(cube_1(add_3(3)(ret([0, []]).x).x).x).x).x[1];\nconsole.log("ret([3, []]) >>= cube >>= add(3) >>= square).x[1].reduce( (a,b) => a+b ) = ", a_8);\nconsole.log(`(ret([0, []]) >>= add(3) >>= cube >>=  \n(x => add(x[1][1])([x[1][1],x[1]])) >>= \n(x => add(x[0])([-4 * x[1][0], x[1]]))).x[1] = `, b_9);  '),Object(j.h)("br"),Object(j.h)("button#fredButton",fredButton),Object(j.h)("a",{props:{href:"#top"}},"Back to the top"),Object(j.h)("br"),Object(j.h)("input#change",diffRend),Object(j.h)("div#changeDisplay",[diffRend]),Object(j.h)("button#diffRender","diffRender()"),Object(j.h)("br"),Object(j.h)("br"),Object(j.h)("br")])]))}},sources)},function(e,t,n){(function(t){var n;e.exports=function e(t,r,o){function a(s,c){if(!r[s]){if(!t[s]){var u="function"==typeof n&&n;if(!c&&u)return n(s,!0);if(i)return i(s,!0);var d=new Error("Cannot find module '"+s+"'");throw d.code="MODULE_NOT_FOUND",d}var l=r[s]={exports:{}};t[s][0].call(l.exports,function(e){var n=t[s][1][e];return a(n||e)},l,l.exports,e,t,r,o)}return r[s].exports}for(var i="function"==typeof n&&n,s=0;s<o.length;s++)a(o[s]);return a}({1:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=function(e){return e};n.setAdapt=function(e){r=e},n.adapt=function(e){return r(e)}},{}],2:[function(e,n,r){(function(t){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n="undefined"!=typeof window?window.xstream:void 0!==t?t.xstream:null,o=e("./adapt");function a(e,t){var r=Object.keys(e).filter(function(e){return!!t[e]}),o={},a={};r.forEach(function(e){o[e]={_n:[],_e:[]},a[e]={next:function(t){return o[e]._n.push(t)},error:function(t){return o[e]._e.push(t)},complete:function(){}}});var i=r.map(function(t){return n.default.fromObservable(e[t]).subscribe(a[t])});return r.forEach(function(e){var n=t[e],r=function(e){n._n(e)},i=function(e){!function(e){var t=e.stack||e;console&&console.error?console.error(t):console&&console.log&&console.log(t)}(e),n._e(e)};o[e]._n.forEach(r),o[e]._e.forEach(i),a[e].next=r,a[e].error=i,a[e]._n=r,a[e]._e=i}),o=null,function(){i.forEach(function(e){return e.unsubscribe()}),r.forEach(function(e){return t[e]._c()})}}function i(e,t){if("function"!=typeof e)throw new Error("First argument given to Cycle must be the 'main' function.");if("object"!=typeof t||null===t)throw new Error("Second argument given to Cycle must be an object with driver functions as properties.");if(r=t,0===Object.keys(r).length)throw new Error("Second argument given to Cycle must be an object with at least one driver function declared as a property.");var r,i=function(e){var t={};for(var r in e)e.hasOwnProperty(r)&&(t[r]=n.default.createWithMemory());return t}(t),s=function(e,t){var n={};for(var r in e)e.hasOwnProperty(r)&&(n[r]=e[r](t[r],r),n[r]&&"object"==typeof n[r]&&(n[r]._isCycleSource=r));return n}(t,i),c=function(e){for(var t in e)e.hasOwnProperty(t)&&e[t]&&"function"==typeof e[t].shamefullySendNext&&(e[t]=o.adapt(e[t]));return e}(s),u=e(c);return"undefined"!=typeof window&&(window.Cyclejs=window.Cyclejs||{},window.Cyclejs.sinks=u),{sinks:u,sources:s,run:function(){var e=a(u,i);return function(){!function(e){for(var t in e)e.hasOwnProperty(t)&&e[t]&&e[t].dispose&&e[t].dispose()}(s),e()}}}}function s(e,t){var n=i(e,t),r=n.run,o=n.sinks;return"undefined"!=typeof window&&window.CyclejsDevTool_startGraphSerializer&&window.CyclejsDevTool_startGraphSerializer(o),r()}r.setup=i,r.run=s,r.default=s}).call(this,void 0!==t?t:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./adapt":1}]},{},[2])(2)}).call(this,n(12))},function(e,t,n){"use strict";function r(e,t,n){var r=Object.keys(e).filter(function(e){return!!t[e]}),o={},a={};r.forEach(function(e){o[e]={next:[],error:[],complete:[]},a[e]={next:function(t){return o[e].next.push(t)},error:function(t){return o[e].error.push(t)},complete:function(t){return o[e].complete.push(t)}}});var i=r.map(function(t){return n.streamSubscribe(e[t],{next:function(e){a[t].next(e)},error:function(e){!function(e){var t=e.stack||e;console&&console.error?console.error(t):console&&console.log&&console.log(t)}(e),a[t].error(e)},complete:function(e){a[t].complete(e)}})}).filter(function(e){return"function"==typeof e});return r.forEach(function(e){var n=t[e].observer,r=n.next,i=n.error,s=n.complete;o[e].next.forEach(r),o[e].error.forEach(i),o[e].complete.forEach(s),a[e].next=r,a[e].error=i,a[e].complete=s}),function(){i.forEach(function(e){return e()})}}var o=function(e){return 0===Object.keys(e).length};Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n){if("function"!=typeof e)throw new Error("First argument given to Cycle must be the 'main' function.");if("object"!=typeof t||null===t)throw new Error("Second argument given to Cycle must be an object with driver functions as properties.");if(o(t))throw new Error("Second argument given to Cycle must be an object with at least one driver function declared as a property.");var a=n.streamAdapter;if(!a||o(a))throw new Error("Third argument given to Cycle must be an options object with the streamAdapter key supplied with a valid stream adapter.");var i=function(e,t){var n={};for(var r in e)if(e.hasOwnProperty(r)){var o=t.makeSubject(),a=(e[r].streamAdapter||t).adapt(o.stream,t.streamSubscribe);n[r]={stream:a,observer:o.observer}}return n}(t,a),s=function(e,t,n){var r={};for(var o in e)if(e.hasOwnProperty(o)){var a=e[o](t[o].stream,n,o),i=e[o].streamAdapter;i&&i.isValidStream(a)?r[o]=n.adapt(a,i.streamSubscribe):r[o]=a,r[o]&&"object"==typeof r[o]&&(r[o]._isCycleSource=o)}return r}(t,i,a),c=e(s);return"undefined"!=typeof window&&(window.Cyclejs={sinks:c}),{sinks:c,sources:s,run:function(){var e=r(c,i,a);return function(){!function(e){for(var t in e)e.hasOwnProperty(t)&&e[t]&&"function"==typeof e[t].dispose&&e[t].dispose()}(s),e()}}}}},function(e,t,n){"use strict";var r=n(17);function o(e){return function(e){return"string"==typeof e&&e.length>0}(e)&&("."===e[0]||"#"===e[0])}function a(e){return function(t,n,a){return o(t)?void 0!==n&&void 0!==a?r.h(e+t,n,a):void 0!==n?r.h(e+t,n):r.h(e+t,{}):n?r.h(e,t,n):t?r.h(e,t):r.h(e,{})}}var i=["a","altGlyph","altGlyphDef","altGlyphItem","animate","animateColor","animateMotion","animateTransform","circle","clipPath","colorProfile","cursor","defs","desc","ellipse","feBlend","feColorMatrix","feComponentTransfer","feComposite","feConvolveMatrix","feDiffuseLighting","feDisplacementMap","feDistantLight","feFlood","feFuncA","feFuncB","feFuncG","feFuncR","feGaussianBlur","feImage","feMerge","feMergeNode","feMorphology","feOffset","fePointLight","feSpecularLighting","feSpotlight","feTile","feTurbulence","filter","font","fontFace","fontFaceFormat","fontFaceName","fontFaceSrc","fontFaceUri","foreignObject","g","glyph","glyphRef","hkern","image","line","linearGradient","marker","mask","metadata","missingGlyph","mpath","path","pattern","polygon","polyline","radialGradient","rect","script","set","stop","style","switch","symbol","text","textPath","title","tref","tspan","use","view","vkern"],s=a("svg");i.forEach(function(e){s[e]=a(e)});var c=["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","dd","del","dfn","dir","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","menu","meta","nav","noscript","object","ol","optgroup","option","p","param","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strong","style","sub","sup","table","tbody","td","textarea","tfoot","th","thead","title","tr","u","ul","video"],u={SVG_TAG_NAMES:i,TAG_NAMES:c,svg:s,isSelector:o,createTagFunction:a};c.forEach(function(e){u[e]=a(e)}),Object.defineProperty(t,"__esModule",{value:!0}),t.default=u},function(e,t,n){"use strict";var r=n(3),o=n(4),a=function(){function e(e,t){this._streamAdapter=e,this._mockConfig=t,t.elements?this._elements=t.elements:this._elements=e.adapt(o.default.empty(),r.default.streamSubscribe)}return e.prototype.elements=function(){var e=this._elements;return e._isCycleSource="MockedDOM",e},e.prototype.events=function(e,t){for(var n=this._mockConfig,a=Object.keys(n),i=a.length,s=0;s<i;s++){var c=a[s];if(c===e){var u=n[c];return u._isCycleSource="MockedDOM",u}}var d=this._streamAdapter.adapt(o.default.empty(),r.default.streamSubscribe);return d._isCycleSource="MockedDOM",d},e.prototype.select=function(t){for(var n=this._mockConfig,r=Object.keys(n),o=r.length,a=0;a<o;a++){var i=r[a];if(i===t)return new e(this._streamAdapter,n[i])}return new e(this._streamAdapter,{})},e.prototype.isolateSource=function(e,t){return e.select(".___"+t)},e.prototype.isolateSink=function(e,t){return e.map(function(e){return e.sel&&-1!==e.sel.indexOf("___"+t)?e:(e.sel+=".___"+t,e)})},e}();t.MockedDOMSource=a,t.mockDOMSource=function(e,t){return new a(e,t)}},function(e,t,n){var r=n(14),o=1/0,a="[object Symbol]",i="\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2018\\u2019\\u201c\\u201d \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",s="["+i+"]",c="\\d+",u="[\\u2700-\\u27bf]",d="[a-z\\xdf-\\xf6\\xf8-\\xff]",l="[^\\ud800-\\udfff"+i+c+"\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde]",p="(?:\\ud83c[\\udde6-\\uddff]){2}",h="[\\ud800-\\udbff][\\udc00-\\udfff]",f="[A-Z\\xc0-\\xd6\\xd8-\\xde]",m="(?:"+d+"|"+l+")",b="(?:"+f+"|"+l+")",v="(?:[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]|\\ud83c[\\udffb-\\udfff])?",g="[\\ufe0e\\ufe0f]?"+v+("(?:\\u200d(?:"+["[^\\ud800-\\udfff]",p,h].join("|")+")[\\ufe0e\\ufe0f]?"+v+")*"),y="(?:"+[u,p,h].join("|")+")"+g,x=/[a-zA-Z0-9]+/g,_=RegExp([f+"?"+d+"+(?="+[s,f,"$"].join("|")+")",b+"+(?="+[s,f+m,"$"].join("|")+")",f+"?"+m+"+",f+"+",c,y].join("|"),"g"),M=/[a-z][A-Z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,w=Object.prototype.toString,O=r.Symbol,j=O?O.prototype:void 0,k=O?j.toString:void 0;function S(e){if("string"==typeof e)return e;if(null==e)return"";if(function(e){return"symbol"==typeof e||function(e){return!!e&&"object"==typeof e}(e)&&w.call(e)==a}(e))return O?k.call(e):"";var t=e+"";return"0"==t&&1/e==-o?"-0":t}e.exports=function(e,t,n){return e=S(e),void 0===(t=n?void 0:t)&&(t=M.test(e)?_:x),e.match(t)||[]}},function(e,t,n){var r=n(14),o=1/0,a="[object Symbol]",i=/[\xc0-\xd6\xd8-\xde\xdf-\xf6\xf8-\xff]/g,s=RegExp("[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]","g"),c={"À":"A","Á":"A","Â":"A","Ã":"A","Ä":"A","Å":"A","à":"a","á":"a","â":"a","ã":"a","ä":"a","å":"a","Ç":"C","ç":"c","Ð":"D","ð":"d","È":"E","É":"E","Ê":"E","Ë":"E","è":"e","é":"e","ê":"e","ë":"e","Ì":"I","Í":"I","Î":"I","Ï":"I","ì":"i","í":"i","î":"i","ï":"i","Ñ":"N","ñ":"n","Ò":"O","Ó":"O","Ô":"O","Õ":"O","Ö":"O","Ø":"O","ò":"o","ó":"o","ô":"o","õ":"o","ö":"o","ø":"o","Ù":"U","Ú":"U","Û":"U","Ü":"U","ù":"u","ú":"u","û":"u","ü":"u","Ý":"Y","ý":"y","ÿ":"y","Æ":"Ae","æ":"ae","Þ":"Th","þ":"th","ß":"ss"};function u(e){return c[e]}var d=Object.prototype.toString,l=r.Symbol,p=l?l.prototype:void 0,h=l?p.toString:void 0;function f(e){if("string"==typeof e)return e;if(null==e)return"";if(function(e){return"symbol"==typeof e||function(e){return!!e&&"object"==typeof e}(e)&&d.call(e)==a}(e))return l?h.call(e):"";var t=e+"";return"0"==t&&1/e==-o?"-0":t}e.exports=function(e){return(e=f(e))&&e.replace(i,u).replace(s,"")}},function(e,t,n){var r=n(48),o=n(47);var a,i=(a=function(e,t,n){return e+(n?"-":"")+t.toLowerCase()},function(e){return function(e,t,n,r){var o=-1,a=e.length;for(r&&a&&(n=e[++o]);++o<a;)n=t(n,e[o],o,e);return n}(o(r(e)),a,"")});e.exports=i},function(e,t,n){var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},o=n(25),a=n(21),i=n(49);e.exports=function(e){var t=[],n=e.data.style||{};return n.delayed&&r(n,n.delayed),o(n,function(e,n){"string"==typeof e&&t.push(i(n)+": "+a(e))}),t.length?'style="'+t.join("; ")+'"':""}},function(e,t){var n="Expected a function",r=Math.max;e.exports=function(e,t){if("function"!=typeof e)throw new TypeError(n);return t=r(void 0===t?e.length-1:+t||0,0),function(){for(var n=arguments,o=-1,a=r(n.length-t,0),i=Array(a);++o<a;)i[o]=n[t+o];switch(t){case 0:return e.call(this,i);case 1:return e.call(this,n[0],i);case 2:return e.call(this,n[0],n[1],i)}var s=Array(t+1);for(o=-1;++o<t;)s[o]=n[o];return s[t]=i,e.apply(this,s)}}},function(e,t,n){(function(t){var r=n(24),o=r(t,"Set"),a=r(Object,"create");function i(e){var t=e?e.length:0;for(this.data={hash:a(null),set:new o};t--;)this.push(e[t])}i.prototype.push=function(e){var t=this.data;"string"==typeof e||function(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}(e)?t.set.add(e):t.hash[e]=!0},e.exports=function(e){return a&&o?new i(e):null}}).call(this,n(12))},function(e,t){e.exports=function(e,t){var n=e.data;return("string"==typeof t||function(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}(t)?n.set.has(t):n.hash[t])?0:-1}},function(e,t){e.exports=function(e,t,n){if(t!=t)return function(e,t,n){for(var r=e.length,o=t+(n?0:-1);n?o--:++o<r;){var a=e[o];if(a!=a)return o}return-1}(e,n);for(var r=n-1,o=e.length;++r<o;)if(e[r]===t)return r;return-1}},function(e,t,n){var r=n(54),o=n(53),a=n(52),i=200;e.exports=function(e,t){var n=-1,s=r,c=e.length,u=!0,d=u&&c>=i,l=d?a():null,p=[];l?(s=o,u=!1):(d=!1,l=t?[]:p);e:for(;++n<c;){var h=e[n],f=t?t(h,n,e):h;if(u&&h==h){for(var m=l.length;m--;)if(l[m]===f)continue e;t&&l.push(f),p.push(h)}else s(l,f,0)<0&&((t||d)&&l.push(f),p.push(h))}return p}},function(e,t,n){var r=n(23),o=n(22);function a(e){return!!e&&"object"==typeof e}var i=9007199254740991;function s(e,t){for(var n=-1,r=t.length,o=e.length;++n<r;)e[o+n]=t[n];return e}var c,u=(c="length",function(e){return null==e?void 0:e[c]});function d(e){return null!=e&&function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=i}(u(e))}e.exports=function e(t,n,i,c){c||(c=[]);for(var u=-1,l=t.length;++u<l;){var p=t[u];a(p)&&d(p)&&(i||o(p)||r(p))?n?e(p,n,i,c):s(c,p):i||(c[c.length]=p)}return c}},function(e,t,n){var r=n(56),o=n(55),a=n(51)(function(e){return o(r(e,!1,!0))});e.exports=a},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,t,n){var r=n(24),o=n(23),a=n(22),i=/^\d+$/,s=Object.prototype.hasOwnProperty,c=r(Object,"keys"),u=9007199254740991;var d,l=(d="length",function(e){return null==e?void 0:e[d]});function p(e,t){return e="number"==typeof e||i.test(e)?+e:-1,t=null==t?u:t,e>-1&&e%1==0&&e<t}function h(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=u}function f(e){for(var t=function(e){if(null==e)return[];m(e)||(e=Object(e));var t=e.length;t=t&&h(t)&&(a(e)||o(e))&&t||0;var n=e.constructor,r=-1,i="function"==typeof n&&n.prototype===e,c=Array(t),u=t>0;for(;++r<t;)c[r]=r+"";for(var d in e)u&&p(d,t)||"constructor"==d&&(i||!s.call(e,d))||c.push(d);return c}(e),n=t.length,r=n&&e.length,i=!!r&&h(r)&&(a(e)||o(e)),c=-1,u=[];++c<n;){var d=t[c];(i&&p(d,r)||s.call(e,d))&&u.push(d)}return u}function m(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}var b=c?function(e){var t,n=null==e?void 0:e.constructor;return"function"==typeof n&&n.prototype===e||"function"!=typeof e&&(null!=(t=e)&&h(l(t)))?f(e):m(e)?c(e):[]}:f;e.exports=b},function(e,t){function n(e){return e}e.exports=function(e,t,r){if("function"!=typeof e)return n;if(void 0===t)return e;switch(r){case 1:return function(n){return e.call(t,n)};case 3:return function(n,r,o){return e.call(t,n,r,o)};case 4:return function(n,r,o,a){return e.call(t,n,r,o,a)};case 5:return function(n,r,o,a,i){return e.call(t,n,r,o,a,i)}}return function(){return e.apply(t,arguments)}}},function(e,t){var n,r=function(e,t,r){for(var o=-1,a=Object(e),i=r(e),s=i.length;s--;){var c=i[n?s:++o];if(!1===t(a[c],c,a))break}return e};e.exports=r},function(e,t,n){var r=n(25),o=n(21),a=n(57),i=n(26);function s(e,t){r(e,function(e,n){"htmlFor"!==n?"className"!==n?"innerHTML"!==n&&(t[n]=e):t.class=e.split(" "):t.for=e})}e.exports=function(e){var t=i(e.sel),n=t.className.split(" "),c=[],u=[],d={};return t.id&&(d.id=t.id),s(e.data.props,d),s(e.data.attrs,d),e.data.class&&(d.class=void 0),r(e.data.class,function(e,t){!0===e&&u.push(t)}),(u=a(u,d.class,n).filter(function(e){return""!==e})).length&&(d.class=u.join(" ")),r(d,function(e,t){c.push(!0===e?t:t+'="'+o(e)+'"')}),c.length?c.join(" "):""}},function(e,t){e.exports={a:!0,defs:!0,glyph:!0,g:!0,marker:!0,mask:!0,"missing-glyph":!0,pattern:!0,svg:!0,switch:!0,symbol:!0,desc:!0,metadata:!0,title:!0}},function(e,t){e.exports={area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0}},function(e,t,n){var r=n(26),o=n(64),a=n(63);e.exports=function(e){return function t(n){if(!n.sel&&n.text)return n.text;n.data=n.data||{},"string"==typeof n.sel&&"thunk"===n.sel.slice(0,5)&&(n=n.data.fn.apply(null,n.data.args));var i,s=r(n.sel).tagName,c=(i=n,e.reduce(function(e,t){return e.push(t(i)),e},[]).filter(function(e){return""!==e})),u="http://www.w3.org/2000/svg"===n.data.ns,d=[];return d.push("<"+s),c.length&&d.push(" "+c.join(" ")),u&&!0!==a[s]&&d.push(" /"),d.push(">"),(!0!==o[s]&&!u||u&&!0===a[s])&&(n.data.props&&n.data.props.innerHTML?d.push(n.data.props.innerHTML):n.text?d.push(n.text):n.children&&n.children.forEach(function(e){d.push(t(e))}),d.push("</"+s+">")),d.join("")}}},function(e,t,n){var r=n(65);e.exports=r([n(62),n(50)])},function(e,t,n){"use strict";var r=n(4),o=n(3),a=function(){function e(e,t,n){this.runSA=t,this._name=n,this._html$=e,this._empty$=t.adapt(r.default.empty(),o.default.streamSubscribe)}return e.prototype.elements=function(){var e=this.runSA.adapt(this._html$,o.default.streamSubscribe);return e._isCycleSource=this._name,e},e.prototype.select=function(t){return new e(r.default.empty(),this.runSA,this._name)},e.prototype.events=function(e,t){var n=this._empty$;return n._isCycleSource=this._name,n},e}();t.HTMLSource=a},function(e,t,n){"use strict";var r=n(3),o=n(27),a=n(67),i=n(66),s=function(){};t.makeHTMLDriver=function(e,t){t||(t={});var n=t.transposition||!1;function c(t,r,c){var u=o.makeTransposeVNode(r),d=(n?t.map(u).flatten():t).map(i);return d.addListener({next:e||s,error:s,complete:s}),new a.HTMLSource(d,r,c)}return c.streamAdapter=r.default,c}},function(e,t,n){"use strict";e.exports="undefined"!=typeof Map&&"[object Map]"===Object.prototype.toString.call(new Map)},function(e,t,n){"use strict";var r=Array.prototype.forEach,o=Object.create;e.exports=function(e){var t=o(null);return r.call(arguments,function(e){t[e]=!0}),t}},function(e,t,n){"use strict";e.exports=n(70)("key","value","key+value")},function(e,t,n){"use strict";var r,o=n(11),a=n(6),i=n(15),s=n(5).toStringTag,c=n(71),u=Object.defineProperties,d=i.prototype._unBind;r=e.exports=function(e,t){if(!(this instanceof r))return new r(e,t);i.call(this,e.__mapKeysData__,e),t&&c[t]||(t="key+value"),u(this,{__kind__:a("",t),__values__:a("w",e.__mapValuesData__)})},o&&o(r,i),r.prototype=Object.create(i.prototype,{constructor:a(r),_resolve:a(function(e){return"value"===this.__kind__?this.__values__[e]:"key"===this.__kind__?this.__list__[e]:[this.__list__[e],this.__values__[e]]}),_unBind:a(function(){this.__values__=null,d.call(this)}),toString:a(function(){return"[object Map Iterator]"})}),Object.defineProperty(r.prototype,s,a("c","Map Iterator"))},function(e,t,n){"use strict";var r,o=n(11),a=n(6),i=n(5),s=n(15),c=Object.defineProperty;r=e.exports=function(e){if(!(this instanceof r))throw new TypeError("Constructor requires 'new'");e=String(e),s.call(this,e),c(this,"__length__",a("",e.length))},o&&o(r,s),delete r.prototype.constructor,r.prototype=Object.create(s.prototype,{_next:a(function(){if(this.__list__)return this.__nextIndex__<this.__length__?this.__nextIndex__++:void this._unBind()}),_resolve:a(function(e){var t,n=this.__list__[e];return this.__nextIndex__===this.__length__?n:(t=n.charCodeAt(0))>=55296&&t<=56319?n+this.__list__[this.__nextIndex__++]:n})}),c(r.prototype,i.toStringTag,a("c","String Iterator"))},function(e,t,n){"use strict";var r=n(2),o=n(1),a=Function.prototype.bind,i=Function.prototype.call,s=Object.keys,c=Object.prototype.propertyIsEnumerable;e.exports=function(e,t){return function(n,u){var d,l=arguments[2],p=arguments[3];return n=Object(o(n)),r(u),d=s(n),p&&d.sort("function"==typeof p?a.call(p,n):void 0),"function"!=typeof e&&(e=d[e]),i.call(e,d,function(e,r){return c.call(n,e)?i.call(u,l,n[e],e,n,r):t})}}},function(e,t,n){"use strict";e.exports=n(74)("forEach")},function(e,t,n){"use strict";var r=n(2),o=n(75),a=Function.prototype.call;e.exports=function(e,t){var n={},i=arguments[2];return r(t),o(e,function(e,r,o,s){n[r]=a.call(t,i,e,r,o,s)}),n}},function(e,t,n){"use strict";var r=Object.prototype.toString,o=r.call(n(34));e.exports=function(e){return"function"==typeof e&&r.call(e)===o}},function(e,t,n){"use strict";var r=n(5).iterator,o=n(10),a=n(77),i=n(33),s=n(2),c=n(1),u=n(7),d=n(9),l=Array.isArray,p=Function.prototype.call,h={configurable:!0,enumerable:!0,writable:!0,value:null},f=Object.defineProperty;e.exports=function(e){var t,n,m,b,v,g,y,x,_,M,w=arguments[1],O=arguments[2];if(e=Object(c(e)),u(w)&&s(w),this&&this!==Array&&a(this))t=this;else{if(!w){if(o(e))return 1!==(v=e.length)?Array.apply(null,e):((b=new Array(1))[0]=e[0],b);if(l(e)){for(b=new Array(v=e.length),n=0;n<v;++n)b[n]=e[n];return b}}b=[]}if(!l(e))if(void 0!==(_=e[r])){for(y=s(_).call(e),t&&(b=new t),x=y.next(),n=0;!x.done;)M=w?p.call(w,O,x.value,n):x.value,t?(h.value=M,f(b,n,h)):b[n]=M,x=y.next(),++n;v=n}else if(d(e)){for(v=e.length,t&&(b=new t),n=0,m=0;n<v;++n)M=e[n],n+1<v&&(g=M.charCodeAt(0))>=55296&&g<=56319&&(M+=e[++n]),M=w?p.call(w,O,M,m):M,t?(h.value=M,f(b,m,h)):b[m]=M,++m;v=m}if(void 0===v)for(v=i(e.length),t&&(b=new t(v)),n=0;n<v;++n)M=w?p.call(w,O,e[n],n):e[n],t?(h.value=M,f(b,n,h)):b[n]=M;return t&&(h.value=null,b.length=v),b}},function(e,t,n){"use strict";e.exports=function(){var e,t,n=Array.from;return"function"==typeof n&&(t=n(e=["raz","dwa"]),Boolean(t&&t!==e&&"dwa"===t[1]))}},function(e,t,n){"use strict";e.exports=n(79)()?Array.from:n(78)},function(e,t,n){"use strict";var r=n(80),o=n(16),a=n(1);e.exports=function(e){var t=Object(a(e)),n=arguments[1],i=Object(arguments[2]);if(t!==e&&!n)return t;var s={};return n?r(n,function(t){(i.ensure||t in e)&&(s[t]=e[t])}):o(s,e),s}},function(e,t,n){"use strict";var r,o=n(81),a=n(30),i=n(2),s=n(76),c=n(2),u=n(1),d=Function.prototype.bind,l=Object.defineProperty,p=Object.prototype.hasOwnProperty;r=function(e,t,n){var r,a=u(t)&&c(t.value);return delete(r=o(t)).writable,delete r.value,r.get=function(){return!n.overwriteDefinition&&p.call(this,e)?a:(t.value=d.call(a,n.resolveContext?n.resolveContext(this):this),l(this,e,t),this[e])},r},e.exports=function(e){var t=a(arguments[1]);return null!=t.resolveContext&&i(t.resolveContext),s(e,function(e,n){return r(n,e,t)})}},function(e,t,n){"use strict";var r,o=n(11),a=n(29),i=n(6),s=n(5),c=n(15),u=Object.defineProperty;r=e.exports=function(e,t){if(!(this instanceof r))throw new TypeError("Constructor requires 'new'");c.call(this,e),t=t?a.call(t,"key+value")?"key+value":a.call(t,"key")?"key":"value":"value",u(this,"__kind__",i("",t))},o&&o(r,c),delete r.prototype.constructor,r.prototype=Object.create(c.prototype,{_resolve:i(function(e){return"value"===this.__kind__?this.__list__[e]:"key+value"===this.__kind__?[e,this.__list__[e]]:e})}),u(r.prototype,s.toStringTag,i("c","Array Iterator"))},function(e,t,n){"use strict";var r=n(10),o=n(9),a=n(83),i=n(73),s=n(28),c=n(5).iterator;e.exports=function(e){return"function"==typeof s(e)[c]?e[c]():r(e)?new a(e):o(e)?new i(e):new a(e)}},function(e,t,n){"use strict";var r=n(10),o=n(2),a=n(9),i=n(84),s=Array.isArray,c=Function.prototype.call,u=Array.prototype.some;e.exports=function(e,t){var n,d,l,p,h,f,m,b,v=arguments[2];if(s(e)||r(e)?n="array":a(e)?n="string":e=i(e),o(t),l=function(){p=!0},"array"!==n)if("string"!==n)for(d=e.next();!d.done;){if(c.call(t,v,d.value,l),p)return;d=e.next()}else for(f=e.length,h=0;h<f&&(m=e[h],h+1<f&&(b=m.charCodeAt(0))>=55296&&b<=56319&&(m+=e[++h]),c.call(t,v,m,l),!p);++h);else u.call(e,function(e){return c.call(t,v,e,l),p})}},function(e,t,n){"use strict";var r=n(10),o=n(7),a=n(9),i=n(5).iterator,s=Array.isArray;e.exports=function(e){return!!o(e)&&(!!s(e)||(!!a(e)||(!!r(e)||"function"==typeof e[i])))}},function(e,t,n){"use strict";e.exports=function(e){return!!e&&("symbol"==typeof e||!!e.constructor&&("Symbol"===e.constructor.name&&"Symbol"===e[e.constructor.toStringTag]))}},function(e,t,n){"use strict";var r=n(87);e.exports=function(e){if(!r(e))throw new TypeError(e+" is not a symbol");return e}},function(e,t,n){"use strict";var r,o,a,i,s=n(6),c=n(88),u=Object.create,d=Object.defineProperties,l=Object.defineProperty,p=Object.prototype,h=u(null);if("function"==typeof Symbol){r=Symbol;try{String(r()),i=!0}catch(e){}}var f,m=(f=u(null),function(e){for(var t,n,r=0;f[e+(r||"")];)++r;return f[e+=r||""]=!0,l(p,t="@@"+e,s.gs(null,function(e){n||(n=!0,l(this,t,s(e)),n=!1)})),t});a=function(e){if(this instanceof a)throw new TypeError("Symbol is not a constructor");return o(e)},e.exports=o=function e(t){var n;if(this instanceof e)throw new TypeError("Symbol is not a constructor");return i?r(t):(n=u(a.prototype),t=void 0===t?"":String(t),d(n,{__description__:s("",t),__name__:s("",m(t))}))},d(o,{for:s(function(e){return h[e]?h[e]:h[e]=o(String(e))}),keyFor:s(function(e){var t;for(t in c(e),h)if(h[t]===e)return t}),hasInstance:s("",r&&r.hasInstance||o("hasInstance")),isConcatSpreadable:s("",r&&r.isConcatSpreadable||o("isConcatSpreadable")),iterator:s("",r&&r.iterator||o("iterator")),match:s("",r&&r.match||o("match")),replace:s("",r&&r.replace||o("replace")),search:s("",r&&r.search||o("search")),species:s("",r&&r.species||o("species")),split:s("",r&&r.split||o("split")),toPrimitive:s("",r&&r.toPrimitive||o("toPrimitive")),toStringTag:s("",r&&r.toStringTag||o("toStringTag")),unscopables:s("",r&&r.unscopables||o("unscopables"))}),d(a.prototype,{constructor:s(o),toString:s("",function(){return this.__name__})}),d(o.prototype,{toString:s(function(){return"Symbol ("+c(this).__description__+")"}),valueOf:s(function(){return c(this)})}),l(o.prototype,o.toPrimitive,s("",function(){var e=c(this);return"symbol"==typeof e?e:e.toString()})),l(o.prototype,o.toStringTag,s("c","Symbol")),l(a.prototype,o.toStringTag,s("c",o.prototype[o.toStringTag])),l(a.prototype,o.toPrimitive,s("c",o.prototype[o.toPrimitive]))},function(e,t,n){"use strict";var r={object:!0,symbol:!0};e.exports=function(){var e;if("function"!=typeof Symbol)return!1;e=Symbol("test symbol");try{String(e)}catch(e){return!1}return!!r[typeof Symbol.iterator]&&(!!r[typeof Symbol.toPrimitive]&&!!r[typeof Symbol.toStringTag])}},function(e,t,n){"use strict";var r,o,a,i,s,c,u,d=n(6),l=n(2),p=Function.prototype.apply,h=Function.prototype.call,f=Object.create,m=Object.defineProperty,b=Object.defineProperties,v=Object.prototype.hasOwnProperty,g={configurable:!0,enumerable:!1,writable:!0};s={on:r=function(e,t){var n;return l(t),v.call(this,"__ee__")?n=this.__ee__:(n=g.value=f(null),m(this,"__ee__",g),g.value=null),n[e]?"object"==typeof n[e]?n[e].push(t):n[e]=[n[e],t]:n[e]=t,this},once:o=function(e,t){var n,o;return l(t),o=this,r.call(this,e,n=function(){a.call(o,e,n),p.call(t,this,arguments)}),n.__eeOnceListener__=t,this},off:a=function(e,t){var n,r,o,a;if(l(t),!v.call(this,"__ee__"))return this;if(!(n=this.__ee__)[e])return this;if("object"==typeof(r=n[e]))for(a=0;o=r[a];++a)o!==t&&o.__eeOnceListener__!==t||(2===r.length?n[e]=r[a?0:1]:r.splice(a,1));else r!==t&&r.__eeOnceListener__!==t||delete n[e];return this},emit:i=function(e){var t,n,r,o,a;if(v.call(this,"__ee__")&&(o=this.__ee__[e]))if("object"==typeof o){for(n=arguments.length,a=new Array(n-1),t=1;t<n;++t)a[t-1]=arguments[t];for(o=o.slice(),t=0;r=o[t];++t)p.call(r,this,a)}else switch(arguments.length){case 1:h.call(o,this);break;case 2:h.call(o,this,arguments[1]);break;case 3:h.call(o,this,arguments[1],arguments[2]);break;default:for(n=arguments.length,a=new Array(n-1),t=1;t<n;++t)a[t-1]=arguments[t];p.call(o,this,a)}}},c={on:d(r),once:d(o),off:d(a),emit:d(i)},u=b({},c),e.exports=t=function(e){return null==e?f(u):b(Object(e),c)},t.methods=s},function(e,t,n){"use strict";var r=String.prototype.indexOf;e.exports=function(e){return r.call(this,e,arguments[1])>-1}},function(e,t,n){"use strict";var r="razdwatrzy";e.exports=function(){return"function"==typeof r.contains&&(!0===r.contains("dwa")&&!1===r.contains("foo"))}},function(e,t,n){"use strict";e.exports=function(e){return"function"==typeof e}},function(e,t,n){"use strict";var r=n(7),o=Object.keys;e.exports=function(e){return o(r(e)?Object(e):e)}},function(e,t,n){"use strict";e.exports=function(){try{return Object.keys("primitive"),!0}catch(e){return!1}}},function(e,t,n){"use strict";e.exports=n(96)()?Object.keys:n(95)},function(e,t,n){"use strict";var r=n(97),o=n(1),a=Math.max;e.exports=function(e,t){var n,i,s,c=a(arguments.length,2);for(e=Object(o(e)),s=function(r){try{e[r]=t[r]}catch(e){n||(n=e)}},i=1;i<c;++i)t=arguments[i],r(t).forEach(s);if(void 0!==n)throw n;return e}},function(e,t,n){"use strict";e.exports=function(){var e,t=Object.assign;return"function"==typeof t&&(t(e={foo:"raz"},{bar:"dwa"},{trzy:"trzy"}),e.foo+e.bar+e.trzy==="razdwatrzy")}},function(e,t,n){"use strict";var r,o,a,i,s=Object.create;n(32)()||(r=n(31)),e.exports=r?1!==r.level?s:(o={},a={},i={configurable:!1,enumerable:!1,writable:!0,value:void 0},Object.getOwnPropertyNames(Object.prototype).forEach(function(e){a[e]="__proto__"!==e?i:{configurable:!0,enumerable:!1,writable:!0,value:void 0}}),Object.defineProperties(o,a),Object.defineProperty(r,"nullPolyfill",{configurable:!1,enumerable:!1,writable:!1,value:o}),function(e,t){return s(null===e?o:e,t)}):s},function(e,t,n){"use strict";var r=n(7),o={function:!0,object:!0};e.exports=function(e){return r(e)&&o[typeof e]||!1}},function(e,t,n){"use strict";e.exports=function(e){return e=Number(e),isNaN(e)||0===e?e:e>0?1:-1}},function(e,t,n){"use strict";e.exports=function(){var e=Math.sign;return"function"==typeof e&&(1===e(10)&&-1===e(-20))}},function(e,t,n){"use strict";e.exports=n(103)()?Math.sign:n(102)},function(e,t,n){"use strict";var r=n(104),o=Math.abs,a=Math.floor;e.exports=function(e){return isNaN(e)?0:0!==(e=Number(e))&&isFinite(e)?r(e)*a(o(e)):e}},function(e,t,n){"use strict";e.exports=function(e){return e!=e}},function(e,t,n){"use strict";e.exports=function(){var e=Number.isNaN;return"function"==typeof e&&(!e({})&&e(NaN)&&!e(34))}},function(e,t,n){"use strict";e.exports=n(107)()?Number.isNaN:n(106)},function(e,t,n){"use strict";var r=n(108),o=n(33),a=n(1),i=Array.prototype.indexOf,s=Object.prototype.hasOwnProperty,c=Math.abs,u=Math.floor;e.exports=function(e){var t,n,d,l;if(!r(e))return i.apply(this,arguments);for(n=o(a(this).length),d=arguments[1],t=d=isNaN(d)?0:d>=0?u(d):o(this.length)-u(c(d));t<n;++t)if(s.call(this,t)&&(l=this[t],r(l)))return t;return-1}},function(e,t,n){"use strict";var r,o=n(35),a=n(109),i=n(11),s=n(2),c=n(1),u=n(6),d=n(91),l=n(5),p=n(28),h=n(85),f=n(72),m=n(69),b=Function.prototype.call,v=Object.defineProperties,g=Object.getPrototypeOf;e.exports=r=function(){var e,t,n,o=arguments[0];if(!(this instanceof r))throw new TypeError("Constructor requires 'new'");return n=m&&i&&Map!==r?i(new Map,g(this)):this,null!=o&&p(o),v(n,{__mapKeysData__:u("c",e=[]),__mapValuesData__:u("c",t=[])}),o?(h(o,function(n){var r=c(n)[0];n=n[1],-1===a.call(e,r)&&(e.push(r),t.push(n))},n),n):n},m&&(i&&i(r,Map),r.prototype=Object.create(Map.prototype,{constructor:u(r)})),d(v(r.prototype,{clear:u(function(){this.__mapKeysData__.length&&(o.call(this.__mapKeysData__),o.call(this.__mapValuesData__),this.emit("_clear"))}),delete:u(function(e){var t=a.call(this.__mapKeysData__,e);return-1!==t&&(this.__mapKeysData__.splice(t,1),this.__mapValuesData__.splice(t,1),this.emit("_delete",t,e),!0)}),entries:u(function(){return new f(this,"key+value")}),forEach:u(function(e){var t,n,r=arguments[1];for(s(e),n=(t=this.entries())._next();void 0!==n;)b.call(e,r,this.__mapValuesData__[n],this.__mapKeysData__[n],this),n=t._next()}),get:u(function(e){var t=a.call(this.__mapKeysData__,e);if(-1!==t)return this.__mapValuesData__[t]}),has:u(function(e){return-1!==a.call(this.__mapKeysData__,e)}),keys:u(function(){return new f(this,"key")}),set:u(function(e,t){var n,r=a.call(this.__mapKeysData__,e);return-1===r&&(r=this.__mapKeysData__.push(e)-1,n=!0),this.__mapValuesData__[r]=t,n&&this.emit("_add",r,e),this}),size:u.gs(function(){return this.__mapKeysData__.length}),values:u(function(){return new f(this,"value")}),toString:u(function(){return"[object Map]"})})),Object.defineProperty(r.prototype,l.iterator,u(function(){return this.entries()})),Object.defineProperty(r.prototype,l.toStringTag,u("c","Map"))},function(e,t,n){"use strict";e.exports=function(){var e,t;if("function"!=typeof Map)return!1;try{e=new Map([["raz","one"],["dwa","two"],["trzy","three"]])}catch(e){return!1}return"[object Map]"===String(e)&&(3===e.size&&("function"==typeof e.clear&&("function"==typeof e.delete&&("function"==typeof e.entries&&("function"==typeof e.forEach&&("function"==typeof e.get&&("function"==typeof e.has&&("function"==typeof e.keys&&("function"==typeof e.set&&("function"==typeof e.values&&(!1===(t=e.entries().next()).done&&(!!t.value&&("raz"===t.value[0]&&"one"===t.value[1])))))))))))))}},function(e,t,n){"use strict";var r=n(36),o=function(){function e(e){this.isolatedElements=e,this.eventDelegators=new r}return e.prototype.setScope=function(e,t){this.isolatedElements.set(t,e)},e.prototype.removeScope=function(e){this.isolatedElements.delete(e)},e.prototype.cleanupVNode=function(e){var t=e.data,n=e.elm,r=(t=t||{}).isolate||"",o=this.isolatedElements.get(r)===n;r&&o&&(this.removeScope(r),this.eventDelegators.get(r)&&this.eventDelegators.set(r,[]))},e.prototype.getIsolatedElement=function(e){return this.isolatedElements.get(e)},e.prototype.isIsolatedElement=function(e){for(var t=this.isolatedElements.entries(),n=t.next();n.value;n=t.next()){var r=n.value,o=r[0];if(e===r[1])return o}return!1},e.prototype.addEventDelegator=function(e,t){var n=this.eventDelegators.get(e);n||(n=[],this.eventDelegators.set(e,n)),n[n.length]=t},e.prototype.reset=function(){this.isolatedElements.clear()},e.prototype.createModule=function(){var e=this;return{create:function(t,n){var r=t.data,o=void 0===r?{}:r,a=n.elm,i=n.data,s=void 0===i?{}:i,c=o.isolate||"",u=s.isolate||"";if(u){c&&e.removeScope(c),e.setScope(a,u);var d=e.eventDelegators.get(u);if(d)for(var l=0,p=d.length;l<p;++l)d[l].updateTopElement(a);else void 0===d&&e.eventDelegators.set(u,[])}c&&!u&&e.removeScope(u)},update:function(t,n){var r=t.data,o=void 0===r?{}:r,a=n.elm,i=n.data,s=void 0===i?{}:i,c=o.isolate||"",u=s.isolate||"";u&&u!==c&&(c&&e.removeScope(c),e.setScope(a,u)),c&&!u&&e.removeScope(u)},remove:function(t,n){e.cleanupVNode(t),n()},destroy:function(t){e.cleanupVNode(t)}}},e}();t.IsolateModule=o},function(e,t){var n,r,o="undefined"!=typeof window&&window.requestAnimationFrame||setTimeout,a=function(e){o(function(){o(e)})};function i(e,t,n){a(function(){e[t]=n})}function s(e){var t;if(document.createRange){var n=document.createRange();n.selectNodeContents(e),n.getBoundingClientRect&&(t=n.getBoundingClientRect())}return t}function c(e,t,n){if(e&&t)return t.left+t.width/2-n.left+"px "+(t.top+t.height/2-n.top)+"px";return"0 0"}function u(e,t){return e&&t?e.left+e.width/2-(t.left+t.width/2):0}function d(e,t){return e&&t?e.top+e.height/2-(t.top+t.height/2):0}function l(e){return 1===e.childNodes.length&&3===e.childNodes[0].nodeType}e.exports={pre:function(e,t){n={},r=[]},create:function(e,t){var n=t.data.hero;n&&n.id&&(r.push(n.id),r.push(t))},destroy:function(e){var t=e.data.hero;if(t&&t.id){var r=e.elm;e.isTextNode=l(r),e.boundingRect=r.getBoundingClientRect(),e.textRect=e.isTextNode?s(r.childNodes[0]):null;var o=window.getComputedStyle(r,null);e.savedStyle=JSON.parse(JSON.stringify(o)),n[t.id]=e}},post:function(){var e,t,o,a,p,h,f,m,b,v,g,y,x,_,M,w,O,j,k;for(e=0;e<r.length;e+=2)if(t=r[e],o=r[e+1].elm,a=n[t]){for(var S in O=a.isTextNode&&l(o),_=o.style,w=window.getComputedStyle(o,null),M=(p=a.elm).style,b=o.getBoundingClientRect(),m=a.boundingRect,O?(j=s(o.childNodes[0]),v=u(k=a.textRect,j),g=d(k,j)):(v=m.left-b.left,g=m.top-b.top),h=b.height/Math.max(m.height,1),f=O?h:b.width/Math.max(m.width,1),y=_.transform,x=_.transition,"inline"===w.display&&(_.display="inline-block"),_.transition=x+"transform 0s",_.transformOrigin=c(O,j,b),_.opacity="0",_.transform=y+"translate("+v+"px, "+g+"px) scale("+1/f+", "+1/h+")",i(_,"transition",x),i(_,"transform",y),i(_,"opacity","1"),a.savedStyle)if(parseInt(S)!=S){var T="ms"===S.substring(0,2),$="moz"===S.substring(0,3),C="webkit"===S.substring(0,6);T||$||C||(M[S]=a.savedStyle[S])}M.position="absolute",M.top=m.top+"px",M.left=m.left+"px",M.width=m.width+"px",M.height=m.height+"px",M.margin=0,M.transformOrigin=c(O,k,m),M.transform="",M.opacity="1",document.body.appendChild(p),i(M,"transform","translate("+-v+"px, "+-g+"px) scale("+f+", "+h+")"),i(M,"opacity","0"),p.addEventListener("transitionend",function(e){"transform"===e.propertyName&&document.body.removeChild(e.target)})}n=r=void 0}}},function(e,t){var n="undefined"!=typeof window&&window.requestAnimationFrame||setTimeout,r=function(e){n(function(){n(e)})};function o(e,t,n){r(function(){e[t]=n})}function a(e,t){var n,r,a=t.elm,i=e.data.style||{},s=t.data.style||{},c="delayed"in i;for(r in i)s[r]||(a.style[r]="");for(r in s)if(n=s[r],"delayed"===r)for(r in s.delayed)n=s.delayed[r],c&&n===i.delayed[r]||o(a.style,r,n);else"remove"!==r&&n!==i[r]&&(a.style[r]=n)}e.exports={create:a,update:a,destroy:function(e){var t,n,r=e.elm,o=e.data.style;if(o&&(t=o.destroy))for(n in t)r.style[n]=t[n]},remove:function(e,t){var n=e.data.style;if(n&&n.remove){var r,o=e.elm,a=0,i=n.remove,s=0,c=[];for(r in i)c.push(r),o.style[r]=i[r];for(var u=getComputedStyle(o)["transition-property"].split(", ");a<u.length;++a)-1!==c.indexOf(u[a])&&s++;o.addEventListener("transitionend",function(e){e.target===o&&--s,0===s&&t()})}else t()}}},function(e,t,n){var r=n(13);function o(e){return function(){e.length&&(2===e.length?e[0](e[1]):e[0].apply(void 0,e.slice(1)))}}function a(e){return function(t){null!==e.fn&&e.fn(t)}}function i(e,t){var n,i,s=t.elm,c=e.data.on||{},u=t.data.on;if(u){for(n in u)if(i=u[n],void 0===(l=c[n]))r.array(i)?s.addEventListener(n,o(i)):(i={fn:i},u[n]=i,s.addEventListener(n,a(i)));else if(r.array(l)){l.length=i.length;for(var d=0;d<l.length;++d)l[d]=i[d];u[n]=l}else l.fn=i,u[n]=l;if(c)for(n in c)if(void 0===u[n]){var l=c[n];r.array(l)?l.length=0:l.fn=null}}}e.exports={create:i,update:i}},function(e,t){for(var n=["allowfullscreen","async","autofocus","autoplay","checked","compact","controls","declare","default","defaultchecked","defaultmuted","defaultselected","defer","disabled","draggable","enabled","formnovalidate","hidden","indeterminate","inert","ismap","itemscope","loop","multiple","muted","nohref","noresize","noshade","novalidate","nowrap","open","pauseonexit","readonly","required","reversed","scoped","seamless","selected","sortable","spellcheck","translate","truespeed","typemustmatch","visible"],r={},o=0,a=n.length;o<a;o++)r[n[o]]=!0;function i(e,t){var n,o,a=t.elm,i=e.data.attrs||{},s=t.data.attrs||{};for(n in s)o=s[n],i[n]!==o&&(!o&&r[n]?a.removeAttribute(n):a.setAttribute(n,o));for(n in i)n in s||a.removeAttribute(n)}e.exports={create:i,update:i}},function(e,t){function n(e,t){var n,r,o=t.elm,a=e.data.props||{},i=t.data.props||{};for(n in a)i[n]||delete o[n];for(n in i)r=i[n],a[n]===r||"value"===n&&o[n]===r||(o[n]=r)}e.exports={create:n,update:n}},function(e,t){function n(e,t){var n,r,o=t.elm,a=e.data.class||{},i=t.data.class||{};for(r in a)i[r]||o.classList.remove(r);for(r in i)(n=i[r])!==a[r]&&o.classList[n?"add":"remove"](r)}e.exports={create:n,update:n}},function(e,t,n){"use strict";var r=n(118);t.ClassModule=r;var o=n(117);t.PropsModule=o;var a=n(116);t.AttrsModule=a;var i=n(115);t.EventsModule=i;var s=n(114);t.StyleModule=s;var c=n(113);t.HeroModule=c,Object.defineProperty(t,"__esModule",{value:!0}),t.default=[s,r,o,a]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=(0,a.default)(e.sel).className;if(!e.data)return t;var n=e.data,r=n.class,o=n.props;if(r){var i=Object.keys(e.data.class).filter(function(t){return e.data.class[t]});t+=" "+i.join(" ")}o&&o.className&&(t+=" "+o.className);return t.trim()};var r,o=n(38),a=(r=o)&&r.__esModule?r:{default:r}},function(e,t,n){"use strict";var r=n(17),o=n(120),a=n(38),i=function(){function e(e){this.rootElement=e}return e.prototype.call=function(e){var t=a.default(e.sel),n=t.tagName,i=t.id,s=o.default(e),c=((e.data||{}).props||{}).id;if((void 0===c?i:c).toUpperCase()===this.rootElement.id.toUpperCase()&&n.toUpperCase()===this.rootElement.tagName.toUpperCase()&&s.toUpperCase()===this.rootElement.className.toUpperCase())return e;var u=this.rootElement,d=u.tagName,l=u.id,p=u.className,h=l?"#"+l:"",f=p?"."+p.split(" ").join("."):"";return r.h(""+d.toLowerCase()+h+f,{},[e])},e}();t.VNodeWrapper=i},function(e,t,n){"use strict";var r,o=n(39),a=n(8);try{r=n(18)}catch(e){r=Function.prototype}var i=0;var s=function(){function e(e,t,n,r){var o=this;this.topElement=e,this.eventType=t,this.useCapture=n,this.isolateModule=r,this.destinations=[],this.roof=e.parentElement,this.domListener=n?function(e){return o.capture(e)}:function(e){return o.bubble(e)},e.addEventListener(t,this.domListener,n)}return e.prototype.bubble=function(e){if(document.body.contains(e.currentTarget))for(var t=this.patchEvent(e),n=t.target;n&&n!==this.roof;n=n.parentElement){if(document.body.contains(n)||t.stopPropagation(),t.propagationHasBeenStopped)return;this.matchEventAgainstDestinations(n,t)}},e.prototype.matchEventAgainstDestinations=function(e,t){for(var n=0,o=this.destinations.length;n<o;n++){var a=this.destinations[n];a.scopeChecker.isStrictlyInRootScope(e)&&(r(e,a.selector)&&(this.mutateEventCurrentTarget(t,e),a.subject._n(t)))}},e.prototype.capture=function(e){for(var t=0,n=this.destinations.length;t<n;t++){var o=this.destinations[t];r(e.target,o.selector)&&o.subject._n(e)}},e.prototype.addDestination=function(e,t,n){var r=a.getScope(t),i=a.getSelectors(t),s=new o.ScopeChecker(r,this.isolateModule);this.destinations.push({subject:e,scopeChecker:s,selector:i,destinationId:n})},e.prototype.createDestinationId=function(){return i++},e.prototype.removeDestinationId=function(e){var t=function(e,t){for(var n,r=0,o=e.length-1;r<=o;){var a=e[n=(r+o)/2|0].destinationId;if(a<t)r=n+1;else{if(!(a>t))return n;o=n-1}}return-1}(this.destinations,e);t>=0&&this.destinations.splice(t,1)},e.prototype.patchEvent=function(e){var t=e;t.propagationHasBeenStopped=!1;var n=t.stopPropagation;return t.stopPropagation=function(){n.call(this),this.propagationHasBeenStopped=!0},t},e.prototype.mutateEventCurrentTarget=function(e,t){try{Object.defineProperty(e,"currentTarget",{value:t,configurable:!0})}catch(e){console.log("please use event.ownerTarget")}e.ownerTarget=t},e.prototype.updateTopElement=function(e){this.topElement.removeEventListener(this.eventType,this.domListener,this.useCapture),e.addEventListener(this.eventType,this.domListener,this.useCapture),this.topElement=e},e}();t.EventDelegator=s},function(e,t,n){"use strict";var r=n(8);t.isolateSource=function(e,t){return e.select(r.SCOPE_PREFIX+t)},t.isolateSink=function(e,t){return e.map(function(e){if(e.data&&e.data.isolate){var n=parseInt(e.data.isolate.split(r.SCOPE_PREFIX+"cycle")[1]),o=parseInt(t.split("cycle")[1]);if(isNaN(n)||isNaN(o)||n>o)return e}return e.data=e.data||{},e.data.isolate=r.SCOPE_PREFIX+t,void 0===e.key&&(e.key=r.SCOPE_PREFIX+t),e})}},function(e,t,n){"use strict";var r,o=n(39),a=n(8);try{r=n(18)}catch(e){r=Function.prototype}var i=function(){function e(e,t){this.namespace=e,this.isolateModule=t}return e.prototype.call=function(e){var t=this.namespace;if(""===t.join(""))return e;var n,i=a.getScope(t),s=new o.ScopeChecker(i,this.isolateModule),c=a.getSelectors(t),u=e,d=[];return i.length>0&&(u=this.isolateModule.getIsolatedElement(i)||e,c&&r(u,c)&&d.push(u)),(n=u.querySelectorAll(c),Array.prototype.slice.call(n)).filter(s.isStrictlyInRootScope,s).concat(d)},e}();t.ElementFinder=i},function(e,t,n){"use strict";var r=n(4),o=n(3),a=n(19),i=function(){function e(e,t){this._runStreamAdapter=e,this._name=t}return e.prototype.select=function(e){return this},e.prototype.elements=function(){var e=this._runStreamAdapter,t=e.remember(e.adapt(r.default.of(document.body),o.default.streamSubscribe));return t._isCycleSource=this._name,t},e.prototype.events=function(e,t){var n;void 0===t&&(t={}),n=t&&"boolean"==typeof t.useCapture?a.fromEvent(document.body,e,t.useCapture):a.fromEvent(document.body,e);var r=this._runStreamAdapter.adapt(n,o.default.streamSubscribe);return r._isCycleSource=this._name,r},e}();t.BodyDOMSource=i},function(e,t,n){"use strict";var r=n(4),o=n(3),a=n(19),i=function(){function e(e,t){this._runStreamAdapter=e,this._name=t}return e.prototype.select=function(e){return this},e.prototype.elements=function(){var e=this._runStreamAdapter,t=e.remember(e.adapt(r.default.of(document),o.default.streamSubscribe));return t._isCycleSource=this._name,t},e.prototype.events=function(e,t){var n;void 0===t&&(t={}),n=t&&"boolean"==typeof t.useCapture?a.fromEvent(document,e,t.useCapture):a.fromEvent(document,e);var r=this._runStreamAdapter.adapt(n,o.default.streamSubscribe);return r._isCycleSource=this._name,r},e}();t.DocumentDOMSource=i},function(e,t,n){"use strict";var r=n(3),o=n(126),a=n(125),i=n(4),s=n(124),c=n(19),u=n(123),d=n(122),l=n(8);try{n(18)}catch(e){Function.prototype}var p=["blur","canplay","canplaythrough","change","durationchange","emptied","ended","focus","load","loadeddata","loadedmetadata","mouseenter","mouseleave","pause","play","playing","ratechange","reset","scroll","seeked","seeking","stalled","submit","suspend","timeupdate","unload","volumechange","waiting"];var h=function(){function e(e,t,n,r,o,a,i){void 0===r&&(r=[]),this._rootElement$=e,this._sanitation$=t,this._runStreamAdapter=n,this._namespace=r,this._isolateModule=o,this._delegators=a,this._name=i,this.__JANI_EVAKALLIO_WE_WILL_MISS_YOU_PLEASE_COME_BACK_EVENTUALLY=!1,this.isolateSource=u.isolateSource,this.isolateSink=u.isolateSink,this.__JANI_EVAKALLIO_WE_WILL_MISS_YOU_PLEASE_COME_BACK_EVENTUALLY=!0}return e.prototype.elements=function(){var e;if(0===this._namespace.length)e=this._rootElement$;else{var t=new s.ElementFinder(this._namespace,this._isolateModule);e=this._rootElement$.map(function(e){return t.call(e)})}var n=this._runStreamAdapter,o=n.remember(n.adapt(e,r.default.streamSubscribe));return o._isCycleSource=this._name,o},Object.defineProperty(e.prototype,"namespace",{get:function(){return this._namespace},enumerable:!0,configurable:!0}),e.prototype.select=function(t){if("string"!=typeof t)throw new Error("DOM driver's select() expects the argument to be a string as a CSS selector");if("document"===t)return new o.DocumentDOMSource(this._runStreamAdapter,this._name);if("body"===t)return new a.BodyDOMSource(this._runStreamAdapter,this._name);var n=t.trim(),r=":root"===n?this._namespace:this._namespace.concat(n);return new e(this._rootElement$,this._sanitation$,this._runStreamAdapter,r,this._isolateModule,this._delegators,this._name)},e.prototype.events=function(e,t){if(void 0===t&&(t={}),"string"!=typeof e)throw new Error("DOM driver's events() expects argument to be a string representing the event type to listen for.");var n=function(e,t){var n=!1;return"boolean"==typeof t.useCapture&&(n=t.useCapture),-1!==p.indexOf(e)&&(n=!0),n}(e,t),o=this._namespace,a=l.getScope(o),s=[e,n];a&&s.push(a);var u=s.join("~"),h=this,f=(a?this._rootElement$.compose(function(e,t){return function(n){return n.fold(function(n,r){var o=!!e._isolateModule.getIsolatedElement(t),a=o&&!n.hadIsolatedMutable;return{hadIsolatedMutable:o,shouldPass:a,element:r}},{hadIsolatedMutable:!1,shouldPass:!1,element:null}).drop(1).filter(function(e){return e.shouldPass}).map(function(e){return e.element})}}(h,a)):this._rootElement$.take(2)).map(function(t){if(!o||0===o.length)return c.fromEvent(t,e,n);var r,s=h._delegators,l=h._isolateModule.getIsolatedElement(a)||t;s.has(u)?(r=s.get(u)).updateTopElement(l):(r=new d.EventDelegator(l,e,n,h._isolateModule),s.set(u,r)),a&&h._isolateModule.addEventDelegator(a,r);var p=r.createDestinationId(),f=i.default.create({start:function(){},stop:function(){"requestIdleCallback"in window?requestIdleCallback(function(){r.removeDestinationId(p)}):r.removeDestinationId(p)}});return r.addDestination(f,o,p),f}).flatten(),m=this._runStreamAdapter.adapt(f,r.default.streamSubscribe);return m._isCycleSource=h._name,m},e.prototype.dispose=function(){this._sanitation$.shamefullySendNext(""),this._isolateModule.reset()},e}();t.MainDOMSource=h},function(e,t){e.exports=function(e){if(!e.webpackPolyfill){var t=Object.create(e);t.children||(t.children=[]),Object.defineProperty(t,"loaded",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,"id",{enumerable:!0,get:function(){return t.i}}),Object.defineProperty(t,"exports",{enumerable:!0}),t.webpackPolyfill=1}return t}},function(e,t,n){"use strict";n.r(t),function(e,r){var o,a=n(41);o="undefined"!=typeof self?self:"undefined"!=typeof window?window:void 0!==e?e:r;var i=Object(a.a)(o);t.default=i}.call(this,n(12),n(128)(e))},function(e,t){e.exports={createElement:function(e){return document.createElement(e)},createElementNS:function(e,t){return document.createElementNS(e,t)},createTextNode:function(e){return document.createTextNode(e)},appendChild:function(e,t){e.appendChild(t)},removeChild:function(e,t){e.removeChild(t)},insertBefore:function(e,t,n){e.insertBefore(t,n)},parentNode:function(e){return e.parentElement},nextSibling:function(e){return e.nextSibling},tagName:function(e){return e.tagName},setTextContent:function(e,t){e.textContent=t}}},function(e,t,n){"use strict";var r=n(20),o=n(13),a=n(130);function i(e){return void 0===e}function s(e){return void 0!==e}var c=r("",{},[],void 0,void 0);function u(e,t){return e.key===t.key&&e.sel===t.sel}function d(e,t,n){var r,o,a={};for(r=t;r<=n;++r)s(o=e[r].key)&&(a[o]=r);return a}var l=["create","update","remove","destroy","pre","post"];e.exports={init:function(e,t){var n,p,h={};for(i(t)&&(t=a),n=0;n<l.length;++n)for(h[l[n]]=[],p=0;p<e.length;++p)void 0!==e[p][l[n]]&&h[l[n]].push(e[p][l[n]]);function f(e,n){return function(){if(0==--n){var r=t.parentNode(e);t.removeChild(r,e)}}}function m(e,n){var r,a=e.data;s(a)&&s(r=a.hook)&&s(r=r.init)&&(r(e),a=e.data);var i,u=e.children,d=e.sel;if(s(d)){var l=d.indexOf("#"),p=d.indexOf(".",l),f=l>0?l:d.length,b=p>0?p:d.length,v=-1!==l||-1!==p?d.slice(0,Math.min(f,b)):d;if(i=e.elm=s(a)&&s(r=a.ns)?t.createElementNS(r,v):t.createElement(v),f<b&&(i.id=d.slice(f+1,b)),p>0&&(i.className=d.slice(b+1).replace(/\./g," ")),o.array(u))for(r=0;r<u.length;++r)t.appendChild(i,m(u[r],n));else o.primitive(e.text)&&t.appendChild(i,t.createTextNode(e.text));for(r=0;r<h.create.length;++r)h.create[r](c,e);s(r=e.data.hook)&&(r.create&&r.create(c,e),r.insert&&n.push(e))}else i=e.elm=t.createTextNode(e.text);return e.elm}function b(e,n,r,o,a,i){for(;o<=a;++o)t.insertBefore(e,m(r[o],i),n)}function v(e){var t,n,r=e.data;if(s(r)){for(s(t=r.hook)&&s(t=t.destroy)&&t(e),t=0;t<h.destroy.length;++t)h.destroy[t](e);if(s(t=e.children))for(n=0;n<e.children.length;++n)v(e.children[n])}}function g(e,n,r,o){for(;r<=o;++r){var a,i,c,u=n[r];if(s(u))if(s(u.sel)){for(v(u),i=h.remove.length+1,c=f(u.elm,i),a=0;a<h.remove.length;++a)h.remove[a](u,c);s(a=u.data)&&s(a=a.hook)&&s(a=a.remove)?a(u,c):c()}else t.removeChild(e,u.elm)}}function y(e,n,r){var o,a;s(o=n.data)&&s(a=o.hook)&&s(o=a.prepatch)&&o(e,n);var c=n.elm=e.elm,l=e.children,p=n.children;if(e!==n){if(!u(e,n)){var f=t.parentNode(e.elm);return c=m(n,r),t.insertBefore(f,c,e.elm),void g(f,[e],0,0)}if(s(n.data)){for(o=0;o<h.update.length;++o)h.update[o](e,n);s(o=n.data.hook)&&s(o=o.update)&&o(e,n)}i(n.text)?s(l)&&s(p)?l!==p&&function(e,n,r,o){for(var a,s,c,l=0,p=0,h=n.length-1,f=n[0],v=n[h],x=r.length-1,_=r[0],M=r[x];l<=h&&p<=x;)i(f)?f=n[++l]:i(v)?v=n[--h]:u(f,_)?(y(f,_,o),f=n[++l],_=r[++p]):u(v,M)?(y(v,M,o),v=n[--h],M=r[--x]):u(f,M)?(y(f,M,o),t.insertBefore(e,f.elm,t.nextSibling(v.elm)),f=n[++l],M=r[--x]):u(v,_)?(y(v,_,o),t.insertBefore(e,v.elm,f.elm),v=n[--h],_=r[++p]):(i(a)&&(a=d(n,l,h)),i(s=a[_.key])?(t.insertBefore(e,m(_,o),f.elm),_=r[++p]):(y(c=n[s],_,o),n[s]=void 0,t.insertBefore(e,c.elm,f.elm),_=r[++p]));l>h?b(e,i(r[x+1])?null:r[x+1].elm,r,p,x,o):p>x&&g(e,n,l,h)}(c,l,p,r):s(p)?(s(e.text)&&t.setTextContent(c,""),b(c,null,p,0,p.length-1,r)):s(l)?g(c,l,0,l.length-1):s(e.text)&&t.setTextContent(c,""):e.text!==n.text&&t.setTextContent(c,n.text),s(a)&&s(o=a.postpatch)&&o(e,n)}}return function(e,n){var o,a,s,c=[];for(o=0;o<h.pre.length;++o)h.pre[o]();for(i(e.sel)&&(e=function(e){return r(t.tagName(e).toLowerCase(),{},[],void 0,e)}(e)),u(e,n)?y(e,n,c):(a=e.elm,s=t.parentNode(a),m(n,c),null!==s&&(t.insertBefore(s,n.elm,t.nextSibling(a)),g(s,[e],0,0))),o=0;o<c.length;++o)c[o].data.hook.insert(c[o]);for(o=0;o<h.post.length;++o)h.post[o]();return n}}}},function(e,t,n){"use strict";var r=n(131),o=n(4),a=n(127),i=n(121),s=n(8),c=n(119),u=n(112),d=n(27),l=n(3),p=n(36);t.makeDOMDriver=function(e,t){t||(t={});var n=t.transposition||!1,h=t.modules||c.default,f=new u.IsolateModule(new p),m=r.init([f.createModule()].concat(h)),b=s.getElement(e),v=new i.VNodeWrapper(b),g=new p;function y(e,t,r){!function(e){if(!e||"function"!=typeof e.addListener||"function"!=typeof e.fold)throw new Error("The DOM driver function expects as input a Stream of virtual DOM elements")}(e);var i=d.makeTransposeVNode(t),s=n?e.map(i).flatten():e,c=o.default.create(),u=o.default.merge(s.endWhen(c),c).map(function(e){return v.call(e)}).fold(m,b).drop(1).map(function(e){return e.elm}).compose(function(e){return o.default.merge(e,o.default.never())}).startWith(b);return u.addListener({next:function(){},error:function(){},complete:function(){}}),new a.MainDOMSource(u,c,t,[],f,g,r)}return function(e){if(!Array.isArray(e))throw new Error("Optional modules option must be an array for snabbdom modules")}(h),y.streamAdapter=l.default,y}},function(e,t,n){var r=n(20),o=n(13);e.exports=function(e,t,n){var a,i,s,c={};if(void 0!==n?(c=t,o.array(n)?a=n:o.primitive(n)&&(i=n)):void 0!==t&&(o.array(t)?a=t:o.primitive(t)?i=t:c=t),o.array(a))for(s=0;s<a.length;++s)o.primitive(a[s])&&(a[s]=r(void 0,void 0,void 0,a[s]));return"s"===e[0]&&"v"===e[1]&&"g"===e[2]&&function e(t,n){if(t.ns="http://www.w3.org/2000/svg",void 0!==n)for(var r=0;r<n.length;++r)e(n[r].data,n[r].children)}(c,a),r(e,c,a,i,void 0)}},function(e,t,n){var r=n(133);function o(e,t){t.elm=e.elm,e.data.fn=t.data.fn,e.data.args=t.data.args,t.data=e.data,t.children=e.children,t.text=e.text,t.elm=e.elm}function a(e){var t=e.data;o(t.fn.apply(void 0,t.args),e)}function i(e,t){var n,r=e.data,a=t.data,i=r.args,s=a.args;for(r.fn===a.fn&&i.length===s.length||o(a.fn.apply(void 0,s),t),n=0;n<s.length;++n)if(i[n]!==s[n])return void o(a.fn.apply(void 0,s),t);o(e,t)}e.exports=function(e,t,n,o){return void 0===o&&(o=n,n=t,t=void 0),r(e,{key:t,hook:{init:a,prepatch:i},fn:n,args:o})}}]);