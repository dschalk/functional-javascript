Configuring unix-compat-0.5.0.1...
Preprocessing library for unix-compat-0.5.0.1..
Building library for unix-compat-0.5.0.1..
[1 of 8] Compiling System.PosixCompat.Files ( .stack-work/dist/x86_64-linux/Cabal-2.0.1.0/build/System/PosixCompat/Files.hs, .stack-work/dist/x86_64-linux/Cabal-2.0.1.0/build/System/PosixCompat/Files.o )
[2 of 8] Compiling System.PosixCompat.Temp ( src/System/PosixCompat/Temp.hs, .stack-work/dist/x86_64-linux/Cabal-2.0.1.0/build/System/PosixCompat/Temp.o )
[3 of 8] Compiling System.PosixCompat.Time ( src/System/PosixCompat/Time.hs, .stack-work/dist/x86_64-linux/Cabal-2.0.1.0/build/System/PosixCompat/Time.o )
[4 of 8] Compiling System.PosixCompat.Types ( src/System/PosixCompat/Types.hs, .stack-work/dist/x86_64-linux/Cabal-2.0.1.0/build/System/PosixCompat/Types.o )
[5 of 8] Compiling System.PosixCompat.Extensions ( .stack-work/dist/x86_64-linux/Cabal-2.0.1.0/build/System/PosixCompat/Extensions.hs, .stack-work/dist/x86_64-linux/Cabal-2.0.1.0/build/System/PosixCompat/Extensions.o )
[6 of 8] Compiling System.PosixCompat.Unistd ( src/System/PosixCompat/Unistd.hs, .stack-work/dist/x86_64-linux/Cabal-2.0.1.0/build/System/PosixCompat/Unistd.o )
[7 of 8] Compiling System.PosixCompat.User ( .stack-work/dist/x86_64-linux/Cabal-2.0.1.0/build/System/PosixCompat/User.hs, .stack-work/dist/x86_64-linux/Cabal-2.0.1.0/build/System/PosixCompat/User.o )
[8 of 8] Compiling System.PosixCompat ( src/System/PosixCompat.hs, .stack-work/dist/x86_64-linux/Cabal-2.0.1.0/build/System/PosixCompat.o )
cbits/HsUnixCompat.c: In function â€˜unix_majorâ€™:

[;1mcbits/HsUnixCompat.c:9:13: [;1m[31merror:[0m[0m[;1m[0m[0m[;1m
     warning: In the GNU C Library, "major" is defined
     by <sys/sysmacros.h>. For historical compatibility, it is
     currently defined by <sys/types.h> as well, but we plan to
     remove this soon. To use "major", include <sys/sysmacros.h>
     directly. If you did not intend to use a system-defined macro
     "major", you should undefine it after including <sys/types.h>.
         return major(dev);
                 ^~~~~~~~~~                                                                                                                                                                                                                                                                                                                                                              [0m[0m
[;1m[34m  |[0m[0m
[;1m[34m9 |[0m[0m     return m[;1m[31ma[0m[0mjor(dev);
[;1m[34m  |[0m[0m[;1m[31m             ^[0m[0m
[0m[0m[0mcbits/HsUnixCompat.c: In function â€˜unix_minorâ€™:

[;1mcbits/HsUnixCompat.c:14:13: [;1m[31merror:[0m[0m[;1m[0m[0m[;1m
     warning: In the GNU C Library, "minor" is defined
     by <sys/sysmacros.h>. For historical compatibility, it is
     currently defined by <sys/types.h> as well, but we plan to
     remove this soon. To use "minor", include <sys/sysmacros.h>
     directly. If you did not intend to use a system-defined macro
     "minor", you should undefine it after including <sys/types.h>.
         return minor(dev);
                 ^~~~~~~~~~                                                                                                                                                                                                                                                                                                                                                              [0m[0m
[;1m[34m   |[0m[0m
[;1m[34m14 |[0m[0m     return m[;1m[31mi[0m[0mnor(dev);
[;1m[34m   |[0m[0m[;1m[31m             ^[0m[0m
[0m[0m[0mcbits/HsUnixCompat.c: In function â€˜unix_makedevâ€™:

[;1mcbits/HsUnixCompat.c:19:13: [;1m[31merror:[0m[0m[;1m[0m[0m[;1m
     warning: In the GNU C Library, "makedev" is defined
     by <sys/sysmacros.h>. For historical compatibility, it is
     currently defined by <sys/types.h> as well, but we plan to
     remove this soon. To use "makedev", include <sys/sysmacros.h>
     directly. If you did not intend to use a system-defined macro
     "makedev", you should undefine it after including <sys/types.h>.
         return makedev(maj, min);
                 ^~~~~~~~~~~~~~~~~                                                                                                                                                                                                                                                                                                                                                             [0m[0m
[;1m[34m   |[0m[0m
[;1m[34m19 |[0m[0m     return m[;1m[31ma[0m[0mkedev(maj, min);
[;1m[34m   |[0m[0m[;1m[31m             ^[0m[0m
[0m[0m[0mcbits/HsUnixCompat.c: In function â€˜unix_majorâ€™:

[;1mcbits/HsUnixCompat.c:9:13: [;1m[31merror:[0m[0m[;1m[0m[0m[;1m
     warning: In the GNU C Library, "major" is defined
     by <sys/sysmacros.h>. For historical compatibility, it is
     currently defined by <sys/types.h> as well, but we plan to
     remove this soon. To use "major", include <sys/sysmacros.h>
     directly. If you did not intend to use a system-defined macro
     "major", you should undefine it after including <sys/types.h>.
         return major(dev);
                 ^~~~~~~~~~                                                                                                                                                                                                                                                                                                                                                              [0m[0m
[;1m[34m  |[0m[0m
[;1m[34m9 |[0m[0m     return m[;1m[31ma[0m[0mjor(dev);
[;1m[34m  |[0m[0m[;1m[31m             ^[0m[0m
[0m[0m[0mcbits/HsUnixCompat.c: In function â€˜unix_minorâ€™:

[;1mcbits/HsUnixCompat.c:14:13: [;1m[31merror:[0m[0m[;1m[0m[0m[;1m
     warning: In the GNU C Library, "minor" is defined
     by <sys/sysmacros.h>. For historical compatibility, it is
     currently defined by <sys/types.h> as well, but we plan to
     remove this soon. To use "minor", include <sys/sysmacros.h>
     directly. If you did not intend to use a system-defined macro
     "minor", you should undefine it after including <sys/types.h>.
         return minor(dev);
                 ^~~~~~~~~~                                                                                                                                                                                                                                                                                                                                                              [0m[0m
[;1m[34m   |[0m[0m
[;1m[34m14 |[0m[0m     return m[;1m[31mi[0m[0mnor(dev);
[;1m[34m   |[0m[0m[;1m[31m             ^[0m[0m
[0m[0m[0mcbits/HsUnixCompat.c: In function â€˜unix_makedevâ€™:

[;1mcbits/HsUnixCompat.c:19:13: [;1m[31merror:[0m[0m[;1m[0m[0m[;1m
     warning: In the GNU C Library, "makedev" is defined
     by <sys/sysmacros.h>. For historical compatibility, it is
     currently defined by <sys/types.h> as well, but we plan to
     remove this soon. To use "makedev", include <sys/sysmacros.h>
     directly. If you did not intend to use a system-defined macro
     "makedev", you should undefine it after including <sys/types.h>.
         return makedev(maj, min);
                 ^~~~~~~~~~~~~~~~~                                                                                                                                                                                                                                                                                                                                                             [0m[0m
[;1m[34m   |[0m[0m
[;1m[34m19 |[0m[0m     return m[;1m[31ma[0m[0mkedev(maj, min);
[;1m[34m   |[0m[0m[;1m[31m             ^[0m[0m
[0m[0m[0mInstalling library in /home/e/.stack/snapshots/x86_64-linux/lts-11.15/8.2.2/lib/x86_64-linux-ghc-8.2.2/unix-compat-0.5.0.1-AtNnJ204ySI1W22dRbQG6f
Registering library for unix-compat-0.5.0.1..
