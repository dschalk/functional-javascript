{"code":"!function(e){var n={};function t(r){if(n[r])return n[r].exports;var i=n[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,t),i.l=!0,i.exports}t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:r})},t.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&\"object\"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:e}),2&n&&\"string\"!=typeof e)for(var i in e)t.d(r,i,function(n){return e[n]}.bind(null,i));return r},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,\"a\",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p=\"\",t(t.s=0)}([function(e,n){throw new Error(\"Module parse failed: Unexpected token (1995:85)\\nYou may need an appropriate loader to handle this file type.\\n| h('div', {style: {width: '47%', fontSize: '18px', float: 'left'}}, [ // ((************ LEFT PANEL\\n| \\n> h('p', ' Suppose \\\"bynd()\\\" is a copy of_bind() created by the statement \\\"bynd = Bind('bynd')\\\". Each time you use it, Bind.bynd must be cleard, and if it is called while another call to it is executing, both will be writing to and possibly reading from the same array and neither will produce sensible data. But if you always write \\\"bynd = makeBind\\\" prior to calling bynd(), running calls to bynd() and legacy arrays will never be a concern.   ' ),\\n| h('p', ' This is demonstrated on the right where nine functions created by the x = Bind(x) method and nine functions created by the x = makeBind() method execute in tandom. If you enter a number and press <ENTER> and after results start appearing press <ENTER> again, the difference will be demonstrated. Click the button below if you want to start and then start again in 1500 ms. ' ),   \\n| \")}]);","extractedComments":[]}