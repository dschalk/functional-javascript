{"code":"!function(e){var t={};function o(n){if(t[n])return t[n].exports;var r=t[n]={i:n,l:!1,exports:{}};return e[n].call(r.exports,r,r.exports,o),r.l=!0,r.exports}o.m=e,o.c=t,o.d=function(e,t,n){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},o.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var r in e)o.d(n,r,function(t){return e[t]}.bind(null,r));return n},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,\"a\",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p=\"\",o(o.s=0)}([function(e,t){throw new Error(\"Module parse failed: Unexpected token (1564:73)\\nYou may need an appropriate loader to handle this file type.\\n| h('p', 'A JavaScript so-called \\\"monad\\\" \\\"m\\\" with value \\\"m.val\\\" composes by means of a method \\\"m.b\\\" that operate on a function \\\"func\\\" that operates on m.val returning a monad \\\"m2\\\" such that m2.val is func(m.val) or, in more sophistocated variations on the theme, func(m.val, ...args). JQuery and Lodash objects are monads under this definition. '),\\n| h('span.tao', ' My monads are constricted, sort of Haskell-like variations on the theme. Others, including Douglas Crockford, author of '),\\n> h('a', {props: {href: \\\"http://shop.oreilly.com/product/9780596517748.do\\\" target=\\\"_blank\\\"}}, 'Javascript: The Good Parts' ),  \\n| h('span', ', have defined similar Haskell-like monads. Mr. Crockford explained his in the video presentation ' ),\\n| h('a', {props: {href: \\\"https://www.reddit.com/r/haskell/comments/16rsb7/monads_and_gonads_talk_by_douglas_crockford/\\\" }}, '\\\\\\\"Monads And Gonads\\\\\\\"' ),  \")}]);","extractedComments":[]}