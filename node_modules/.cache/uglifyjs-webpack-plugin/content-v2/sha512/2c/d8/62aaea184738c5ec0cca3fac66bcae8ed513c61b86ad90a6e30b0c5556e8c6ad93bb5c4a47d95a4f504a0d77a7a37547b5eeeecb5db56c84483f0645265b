{"code":"!function(e){var t={};function o(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,o),i.l=!0,i.exports}o.m=e,o.c=t,o.d=function(e,t,n){o.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},o.r=function(e){Object.defineProperty(e,\"__esModule\",{value:!0})},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,\"a\",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p=\"\",o(o.s=0)}([function(e,t){throw new Error(\"Module parse failed: Unexpected token (2220:0)\\nYou may need an appropriate loader to handle this file type.\\n| h('p', styleFunc([\\\"#a2f2e8\\\",,\\\"18px\\\",\\\"italic\\\",,]), 'Functional programming officionados will have noticed by now that I do not scrupulously avoid mutation of variables, variables in global scope, functions that fish data from outside their scopes, or functions that produce side effects before they return. Is there method to my madness? Am I crazy like a fox? Or am I just setting bad examples with sloppy code? Here\\\\'s what I say about all of that: '),\\n| h('p', ' For me, functional programming is not a religeous cult to whose dogmas I must scrupulously adhere. Mutating variables inside of functions can minimize lines of code and promote efficiency. The global variable that starts out as: ')\\n| h('pre', `  var rNums = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15] `),\\n| h('p', ' feels elegant to me. It is a simple proxy for the sixteen square grid that never needs to be operated upon directly because the placement of its numbers are in one-to-one correspondence with the placement of its (rNums\\\\'s) elements. I could have tucked it away in an object or closure, but I like it so much that I dignified it with the designation \\\"window.rNums\\\". I ignored an important rule. I did it more than once, and it isn\\\\'t the only important rule I ignored. But in every case, there was an advantage (if only in efficiency), and I made sure that no harm could come from my deviations. ' ),\\n| h('p', ' If I were working in a group, or providing something that would be maintained by anyone other than me, I would code by the book. I\\\\'m not getting paid for this work; I\\\\'m just having fun. Dig it! '),\")}]);","extractedComments":[]}