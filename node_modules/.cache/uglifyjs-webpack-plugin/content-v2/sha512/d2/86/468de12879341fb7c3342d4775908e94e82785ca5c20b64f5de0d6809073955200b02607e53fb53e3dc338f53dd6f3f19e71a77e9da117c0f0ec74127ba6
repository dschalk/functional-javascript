{"code":"!function(e){var n={};function t(r){if(n[r])return n[r].exports;var o=n[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,t),o.l=!0,o.exports}t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:r})},t.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&\"object\"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:e}),2&n&&\"string\"!=typeof e)for(var o in e)t.d(r,o,function(n){return e[n]}.bind(null,o));return r},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,\"a\",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p=\"\",t(t.s=0)}([function(e,n){throw new Error(\"Module parse failed: Unexpected token (1995:60)\\nYou may need an appropriate loader to handle this file type.\\n| h('div', {style: {width: '47%', fontSize: '18px', float: 'left'}}, [ // ((************ LEFT PANEL\\n| \\n> h('p', ' A function created with code like \\\"var bynd = Bind'bynd')\\\" is vulnerable to having its Bind.bynd array of return values overridden by other calls to bynd. In this example, which takes over four seconds to complete, pressing <ENTER> after results start appearing causes nonsensical numbers and instances of \\\"NaN\\\" to display. When more than one function is writing to the same array, this is expected. ' ),\\n| \\n| \")}]);","extractedComments":[]}