{"code":"!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=0)}([function(e,t){throw new Error(\"Module parse failed: Unexpected token (2000:192)\\nYou may need an appropriate loader to handle this file type.\\n| h('div', {style: {width: '47%', fontSize: '18px', float: 'left'}}, [ // ((************ LEFT PANEL\\n| \\n> h('p', ' The statement \\\"f = Bind(\\\\'f\\\\')\\\") returns a fresh copy of _bind but not of the array Bind[\\\"f\\\"]. After f() has been created and called, subsequent calls push additional data into Bind['f']. This feature is rarely useful.  ' ),\\n| h('p', ' The statement \\\"g = makeBind()\\\" creates a clone of _bind, and if it precedes each use of g(), it reliably prevents clashes and cluttered arrays. More importantly, it facilitates the running of anonymous copies of _bind that never interfere with one another.    \\n| \")}]);","extractedComments":[]}